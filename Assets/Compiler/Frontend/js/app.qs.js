(function(){var e={9662:function(e,t,n){var r=n(614),s=n(6330),a=TypeError;e.exports=function(e){if(r(e))return e;throw a(s(e)+" is not a function")}},6077:function(e,t,n){var r=n(614),s=String,a=TypeError;e.exports=function(e){if("object"==typeof e||r(e))return e;throw a("Can't set "+s(e)+" as a prototype")}},5787:function(e,t,n){var r=n(7976),s=TypeError;e.exports=function(e,t){if(r(t,e))return e;throw s("Incorrect invocation")}},9670:function(e,t,n){var r=n(111),s=String,a=TypeError;e.exports=function(e){if(r(e))return e;throw a(s(e)+" is not an object")}},1318:function(e,t,n){var r=n(5656),s=n(1400),a=n(6244),o=function(e){return function(t,n,o){var i,l=r(t),u=a(l),c=s(o,u);if(e&&n!=n){while(u>c)if(i=l[c++],i!=i)return!0}else for(;u>c;c++)if((e||c in l)&&l[c]===n)return e||c||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},3658:function(e,t,n){"use strict";var r=n(9781),s=n(3157),a=TypeError,o=Object.getOwnPropertyDescriptor,i=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=i?function(e,t){if(s(e)&&!o(e,"length").writable)throw a("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},206:function(e,t,n){var r=n(1702);e.exports=r([].slice)},4326:function(e,t,n){var r=n(1702),s=r({}.toString),a=r("".slice);e.exports=function(e){return a(s(e),8,-1)}},648:function(e,t,n){var r=n(1694),s=n(614),a=n(4326),o=n(5112),i=o("toStringTag"),l=Object,u="Arguments"==a(function(){return arguments}()),c=function(e,t){try{return e[t]}catch(n){}};e.exports=r?a:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=c(t=l(e),i))?n:u?a(t):"Object"==(r=a(t))&&s(t.callee)?"Arguments":r}},9920:function(e,t,n){var r=n(2597),s=n(3887),a=n(1236),o=n(3070);e.exports=function(e,t,n){for(var i=s(t),l=o.f,u=a.f,c=0;c<i.length;c++){var h=i[c];r(e,h)||n&&r(n,h)||l(e,h,u(t,h))}}},8880:function(e,t,n){var r=n(9781),s=n(3070),a=n(9114);e.exports=r?function(e,t,n){return s.f(e,t,a(1,n))}:function(e,t,n){return e[t]=n,e}},9114:function(e){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},7045:function(e,t,n){var r=n(6339),s=n(3070);e.exports=function(e,t,n){return n.get&&r(n.get,t,{getter:!0}),n.set&&r(n.set,t,{setter:!0}),s.f(e,t,n)}},8052:function(e,t,n){var r=n(614),s=n(3070),a=n(6339),o=n(3072);e.exports=function(e,t,n,i){i||(i={});var l=i.enumerable,u=void 0!==i.name?i.name:t;if(r(n)&&a(n,u,i),i.global)l?e[t]=n:o(t,n);else{try{i.unsafe?e[t]&&(l=!0):delete e[t]}catch(c){}l?e[t]=n:s.f(e,t,{value:n,enumerable:!1,configurable:!i.nonConfigurable,writable:!i.nonWritable})}return e}},3072:function(e,t,n){var r=n(7854),s=Object.defineProperty;e.exports=function(e,t){try{s(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},5117:function(e,t,n){"use strict";var r=n(6330),s=TypeError;e.exports=function(e,t){if(!delete e[t])throw s("Cannot delete property "+r(t)+" of "+r(e))}},9781:function(e,t,n){var r=n(7293);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:function(e){var t="object"==typeof document&&document.all,n="undefined"==typeof t&&void 0!==t;e.exports={all:t,IS_HTMLDDA:n}},317:function(e,t,n){var r=n(7854),s=n(111),a=r.document,o=s(a)&&s(a.createElement);e.exports=function(e){return o?a.createElement(e):{}}},7207:function(e){var t=TypeError,n=9007199254740991;e.exports=function(e){if(e>n)throw t("Maximum allowed index exceeded");return e}},3678:function(e){e.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}}},6833:function(e,t,n){var r=n(8113);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},5268:function(e,t,n){var r=n(4326),s=n(7854);e.exports="process"==r(s.process)},8113:function(e,t,n){var r=n(5005);e.exports=r("navigator","userAgent")||""},7392:function(e,t,n){var r,s,a=n(7854),o=n(8113),i=a.process,l=a.Deno,u=i&&i.versions||l&&l.version,c=u&&u.v8;c&&(r=c.split("."),s=r[0]>0&&r[0]<4?1:+(r[0]+r[1])),!s&&o&&(r=o.match(/Edge\/(\d+)/),(!r||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/),r&&(s=+r[1]))),e.exports=s},748:function(e){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},1060:function(e,t,n){var r=n(1702),s=Error,a=r("".replace),o=function(e){return String(s(e).stack)}("zxcasd"),i=/\n\s*at [^:]*:[^\n]*/,l=i.test(o);e.exports=function(e,t){if(l&&"string"==typeof e&&!s.prepareStackTrace)while(t--)e=a(e,i,"");return e}},2109:function(e,t,n){var r=n(7854),s=n(1236).f,a=n(8880),o=n(8052),i=n(3072),l=n(9920),u=n(4705);e.exports=function(e,t){var n,c,h,p,d,f,m=e.target,g=e.global,y=e.stat;if(c=g?r:y?r[m]||i(m,{}):(r[m]||{}).prototype,c)for(h in t){if(d=t[h],e.dontCallGetSet?(f=s(c,h),p=f&&f.value):p=c[h],n=u(g?h:m+(y?".":"#")+h,e.forced),!n&&void 0!==p){if(typeof d==typeof p)continue;l(d,p)}(e.sham||p&&p.sham)&&a(d,"sham",!0),o(c,h,d,e)}}},7293:function(e){e.exports=function(e){try{return!!e()}catch(t){return!0}}},2104:function(e,t,n){var r=n(4374),s=Function.prototype,a=s.apply,o=s.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(a):function(){return o.apply(a,arguments)})},9974:function(e,t,n){var r=n(1470),s=n(9662),a=n(4374),o=r(r.bind);e.exports=function(e,t){return s(e),void 0===t?e:a?o(e,t):function(){return e.apply(t,arguments)}}},4374:function(e,t,n){var r=n(7293);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},6916:function(e,t,n){var r=n(4374),s=Function.prototype.call;e.exports=r?s.bind(s):function(){return s.apply(s,arguments)}},6530:function(e,t,n){var r=n(9781),s=n(2597),a=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,i=s(a,"name"),l=i&&"something"===function(){}.name,u=i&&(!r||r&&o(a,"name").configurable);e.exports={EXISTS:i,PROPER:l,CONFIGURABLE:u}},1470:function(e,t,n){var r=n(4326),s=n(1702);e.exports=function(e){if("Function"===r(e))return s(e)}},1702:function(e,t,n){var r=n(4374),s=Function.prototype,a=s.call,o=r&&s.bind.bind(a,a);e.exports=r?o:function(e){return function(){return a.apply(e,arguments)}}},5005:function(e,t,n){var r=n(7854),s=n(614),a=function(e){return s(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?a(r[e]):r[e]&&r[e][t]}},8173:function(e,t,n){var r=n(9662),s=n(8554);e.exports=function(e,t){var n=e[t];return s(n)?void 0:r(n)}},7854:function(e,t,n){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||function(){return this}()||Function("return this")()},2597:function(e,t,n){var r=n(1702),s=n(7908),a=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return a(s(e),t)}},3501:function(e){e.exports={}},490:function(e,t,n){var r=n(5005);e.exports=r("document","documentElement")},4664:function(e,t,n){var r=n(9781),s=n(7293),a=n(317);e.exports=!r&&!s((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},8361:function(e,t,n){var r=n(1702),s=n(7293),a=n(4326),o=Object,i=r("".split);e.exports=s((function(){return!o("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?i(e,""):o(e)}:o},9587:function(e,t,n){var r=n(614),s=n(111),a=n(7674);e.exports=function(e,t,n){var o,i;return a&&r(o=t.constructor)&&o!==n&&s(i=o.prototype)&&i!==n.prototype&&a(e,i),e}},2788:function(e,t,n){var r=n(1702),s=n(614),a=n(5465),o=r(Function.toString);s(a.inspectSource)||(a.inspectSource=function(e){return o(e)}),e.exports=a.inspectSource},9909:function(e,t,n){var r,s,a,o=n(4811),i=n(7854),l=n(111),u=n(8880),c=n(2597),h=n(5465),p=n(6200),d=n(3501),f="Object already initialized",m=i.TypeError,g=i.WeakMap,y=function(e){return a(e)?s(e):r(e,{})},b=function(e){return function(t){var n;if(!l(t)||(n=s(t)).type!==e)throw m("Incompatible receiver, "+e+" required");return n}};if(o||h.state){var x=h.state||(h.state=new g);x.get=x.get,x.has=x.has,x.set=x.set,r=function(e,t){if(x.has(e))throw m(f);return t.facade=e,x.set(e,t),t},s=function(e){return x.get(e)||{}},a=function(e){return x.has(e)}}else{var w=p("state");d[w]=!0,r=function(e,t){if(c(e,w))throw m(f);return t.facade=e,u(e,w,t),t},s=function(e){return c(e,w)?e[w]:{}},a=function(e){return c(e,w)}}e.exports={set:r,get:s,has:a,enforce:y,getterFor:b}},3157:function(e,t,n){var r=n(4326);e.exports=Array.isArray||function(e){return"Array"==r(e)}},614:function(e,t,n){var r=n(4154),s=r.all;e.exports=r.IS_HTMLDDA?function(e){return"function"==typeof e||e===s}:function(e){return"function"==typeof e}},4705:function(e,t,n){var r=n(7293),s=n(614),a=/#|\.prototype\./,o=function(e,t){var n=l[i(e)];return n==c||n!=u&&(s(t)?r(t):!!t)},i=o.normalize=function(e){return String(e).replace(a,".").toLowerCase()},l=o.data={},u=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},8554:function(e){e.exports=function(e){return null===e||void 0===e}},111:function(e,t,n){var r=n(614),s=n(4154),a=s.all;e.exports=s.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:r(e)||e===a}:function(e){return"object"==typeof e?null!==e:r(e)}},1913:function(e){e.exports=!1},2190:function(e,t,n){var r=n(5005),s=n(614),a=n(7976),o=n(3307),i=Object;e.exports=o?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return s(t)&&a(t.prototype,i(e))}},6244:function(e,t,n){var r=n(7466);e.exports=function(e){return r(e.length)}},6339:function(e,t,n){var r=n(7293),s=n(614),a=n(2597),o=n(9781),i=n(6530).CONFIGURABLE,l=n(2788),u=n(9909),c=u.enforce,h=u.get,p=Object.defineProperty,d=o&&!r((function(){return 8!==p((function(){}),"length",{value:8}).length})),f=String(String).split("String"),m=e.exports=function(e,t,n){"Symbol("===String(t).slice(0,7)&&(t="["+String(t).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!a(e,"name")||i&&e.name!==t)&&(o?p(e,"name",{value:t,configurable:!0}):e.name=t),d&&n&&a(n,"arity")&&e.length!==n.arity&&p(e,"length",{value:n.arity});try{n&&a(n,"constructor")&&n.constructor?o&&p(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(s){}var r=c(e);return a(r,"source")||(r.source=f.join("string"==typeof t?t:"")),e};Function.prototype.toString=m((function(){return s(this)&&h(this).source||l(this)}),"toString")},4758:function(e){var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},6277:function(e,t,n){var r=n(1340);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:r(e)}},3070:function(e,t,n){var r=n(9781),s=n(4664),a=n(3353),o=n(9670),i=n(4948),l=TypeError,u=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h="enumerable",p="configurable",d="writable";t.f=r?a?function(e,t,n){if(o(e),t=i(t),o(n),"function"===typeof e&&"prototype"===t&&"value"in n&&d in n&&!n[d]){var r=c(e,t);r&&r[d]&&(e[t]=n.value,n={configurable:p in n?n[p]:r[p],enumerable:h in n?n[h]:r[h],writable:!1})}return u(e,t,n)}:u:function(e,t,n){if(o(e),t=i(t),o(n),s)try{return u(e,t,n)}catch(r){}if("get"in n||"set"in n)throw l("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},1236:function(e,t,n){var r=n(9781),s=n(6916),a=n(5296),o=n(9114),i=n(5656),l=n(4948),u=n(2597),c=n(4664),h=Object.getOwnPropertyDescriptor;t.f=r?h:function(e,t){if(e=i(e),t=l(t),c)try{return h(e,t)}catch(n){}if(u(e,t))return o(!s(a.f,e,t),e[t])}},8006:function(e,t,n){var r=n(6324),s=n(748),a=s.concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},5181:function(e,t){t.f=Object.getOwnPropertySymbols},7976:function(e,t,n){var r=n(1702);e.exports=r({}.isPrototypeOf)},6324:function(e,t,n){var r=n(1702),s=n(2597),a=n(5656),o=n(1318).indexOf,i=n(3501),l=r([].push);e.exports=function(e,t){var n,r=a(e),u=0,c=[];for(n in r)!s(i,n)&&s(r,n)&&l(c,n);while(t.length>u)s(r,n=t[u++])&&(~o(c,n)||l(c,n));return c}},5296:function(e,t){"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,s=r&&!n.call({1:2},1);t.f=s?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},7674:function(e,t,n){var r=n(1702),s=n(9670),a=n(6077);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{e=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set),e(n,[]),t=n instanceof Array}catch(o){}return function(n,r){return s(n),a(r),t?e(n,r):n.__proto__=r,n}}():void 0)},2140:function(e,t,n){var r=n(6916),s=n(614),a=n(111),o=TypeError;e.exports=function(e,t){var n,i;if("string"===t&&s(n=e.toString)&&!a(i=r(n,e)))return i;if(s(n=e.valueOf)&&!a(i=r(n,e)))return i;if("string"!==t&&s(n=e.toString)&&!a(i=r(n,e)))return i;throw o("Can't convert object to primitive value")}},3887:function(e,t,n){var r=n(5005),s=n(1702),a=n(8006),o=n(5181),i=n(9670),l=s([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=a.f(i(e)),n=o.f;return n?l(t,n(e)):t}},7066:function(e,t,n){"use strict";var r=n(9670);e.exports=function(){var e=r(this),t="";return e.hasIndices&&(t+="d"),e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.unicodeSets&&(t+="v"),e.sticky&&(t+="y"),t}},4488:function(e,t,n){var r=n(8554),s=TypeError;e.exports=function(e){if(r(e))throw s("Can't call method on "+e);return e}},6200:function(e,t,n){var r=n(2309),s=n(9711),a=r("keys");e.exports=function(e){return a[e]||(a[e]=s(e))}},5465:function(e,t,n){var r=n(7854),s=n(3072),a="__core-js_shared__",o=r[a]||s(a,{});e.exports=o},2309:function(e,t,n){var r=n(1913),s=n(5465);(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.26.1",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",source:"https://github.com/zloirock/core-js"})},6293:function(e,t,n){var r=n(7392),s=n(7293);e.exports=!!Object.getOwnPropertySymbols&&!s((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},261:function(e,t,n){var r,s,a,o,i=n(7854),l=n(2104),u=n(9974),c=n(614),h=n(2597),p=n(7293),d=n(490),f=n(206),m=n(317),g=n(8053),y=n(6833),b=n(5268),x=i.setImmediate,w=i.clearImmediate,v=i.process,k=i.Dispatch,I=i.Function,S=i.MessageChannel,N=i.String,T=0,C={},E="onreadystatechange";try{r=i.location}catch(_){}var $=function(e){if(h(C,e)){var t=C[e];delete C[e],t()}},A=function(e){return function(){$(e)}},R=function(e){$(e.data)},M=function(e){i.postMessage(N(e),r.protocol+"//"+r.host)};x&&w||(x=function(e){g(arguments.length,1);var t=c(e)?e:I(e),n=f(arguments,1);return C[++T]=function(){l(t,void 0,n)},s(T),T},w=function(e){delete C[e]},b?s=function(e){v.nextTick(A(e))}:k&&k.now?s=function(e){k.now(A(e))}:S&&!y?(a=new S,o=a.port2,a.port1.onmessage=R,s=u(o.postMessage,o)):i.addEventListener&&c(i.postMessage)&&!i.importScripts&&r&&"file:"!==r.protocol&&!p(M)?(s=M,i.addEventListener("message",R,!1)):s=E in m("script")?function(e){d.appendChild(m("script"))[E]=function(){d.removeChild(this),$(e)}}:function(e){setTimeout(A(e),0)}),e.exports={set:x,clear:w}},1400:function(e,t,n){var r=n(9303),s=Math.max,a=Math.min;e.exports=function(e,t){var n=r(e);return n<0?s(n+t,0):a(n,t)}},5656:function(e,t,n){var r=n(8361),s=n(4488);e.exports=function(e){return r(s(e))}},9303:function(e,t,n){var r=n(4758);e.exports=function(e){var t=+e;return t!==t||0===t?0:r(t)}},7466:function(e,t,n){var r=n(9303),s=Math.min;e.exports=function(e){return e>0?s(r(e),9007199254740991):0}},7908:function(e,t,n){var r=n(4488),s=Object;e.exports=function(e){return s(r(e))}},7593:function(e,t,n){var r=n(6916),s=n(111),a=n(2190),o=n(8173),i=n(2140),l=n(5112),u=TypeError,c=l("toPrimitive");e.exports=function(e,t){if(!s(e)||a(e))return e;var n,l=o(e,c);if(l){if(void 0===t&&(t="default"),n=r(l,e,t),!s(n)||a(n))return n;throw u("Can't convert object to primitive value")}return void 0===t&&(t="number"),i(e,t)}},4948:function(e,t,n){var r=n(7593),s=n(2190);e.exports=function(e){var t=r(e,"string");return s(t)?t:t+""}},1694:function(e,t,n){var r=n(5112),s=r("toStringTag"),a={};a[s]="z",e.exports="[object z]"===String(a)},1340:function(e,t,n){var r=n(648),s=String;e.exports=function(e){if("Symbol"===r(e))throw TypeError("Cannot convert a Symbol value to a string");return s(e)}},6330:function(e){var t=String;e.exports=function(e){try{return t(e)}catch(n){return"Object"}}},9711:function(e,t,n){var r=n(1702),s=0,a=Math.random(),o=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+o(++s+a,36)}},3307:function(e,t,n){var r=n(6293);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3353:function(e,t,n){var r=n(9781),s=n(7293);e.exports=r&&s((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},8053:function(e){var t=TypeError;e.exports=function(e,n){if(e<n)throw t("Not enough arguments");return e}},4811:function(e,t,n){var r=n(7854),s=n(614),a=r.WeakMap;e.exports=s(a)&&/native code/.test(String(a))},5112:function(e,t,n){var r=n(7854),s=n(2309),a=n(2597),o=n(9711),i=n(6293),l=n(3307),u=s("wks"),c=r.Symbol,h=c&&c["for"],p=l?c:c&&c.withoutSetter||o;e.exports=function(e){if(!a(u,e)||!i&&"string"!=typeof u[e]){var t="Symbol."+e;i&&a(c,e)?u[e]=c[e]:u[e]=l&&h?h(t):p(t)}return u[e]}},7658:function(e,t,n){"use strict";var r=n(2109),s=n(7908),a=n(6244),o=n(3658),i=n(7207),l=n(7293),u=l((function(){return 4294967297!==[].push.call({length:4294967296},1)})),c=!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}();r({target:"Array",proto:!0,arity:1,forced:u||c},{push:function(e){var t=s(this),n=a(t),r=arguments.length;i(n+r);for(var l=0;l<r;l++)t[n]=arguments[l],n++;return o(t,n),n}})},541:function(e,t,n){"use strict";var r=n(2109),s=n(7908),a=n(6244),o=n(3658),i=n(5117),l=n(7207),u=1!==[].unshift(0),c=!function(){try{Object.defineProperty([],"length",{writable:!1}).unshift()}catch(e){return e instanceof TypeError}}();r({target:"Array",proto:!0,arity:1,forced:u||c},{unshift:function(e){var t=s(this),n=a(t),r=arguments.length;if(r){l(n+r);var u=n;while(u--){var c=u+r;u in t?t[c]=t[u]:i(t,c)}for(var h=0;h<r;h++)t[h]=arguments[h]}return o(t,n+r)}})},2087:function(e,t,n){var r=n(7854),s=n(9781),a=n(7045),o=n(7066),i=n(7293),l=r.RegExp,u=l.prototype,c=s&&i((function(){var e=!0;try{l(".","d")}catch(c){e=!1}var t={},n="",r=e?"dgimsy":"gimsy",s=function(e,r){Object.defineProperty(t,e,{get:function(){return n+=r,!0}})},a={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var o in e&&(a.hasIndices="d"),a)s(o,a[o]);var i=Object.getOwnPropertyDescriptor(u,"flags").get.call(t);return i!==r||n!==r}));c&&a(u,"flags",{configurable:!0,get:o})},1091:function(e,t,n){var r=n(2109),s=n(7854),a=n(261).clear;r({global:!0,bind:!0,enumerable:!0,forced:s.clearImmediate!==a},{clearImmediate:a})},2801:function(e,t,n){"use strict";var r=n(2109),s=n(7854),a=n(5005),o=n(9114),i=n(3070).f,l=n(2597),u=n(5787),c=n(9587),h=n(6277),p=n(3678),d=n(1060),f=n(9781),m=n(1913),g="DOMException",y=a("Error"),b=a(g),x=function(){u(this,w);var e=arguments.length,t=h(e<1?void 0:arguments[0]),n=h(e<2?void 0:arguments[1],"Error"),r=new b(t,n),s=y(t);return s.name=g,i(r,"stack",o(1,d(s.stack,1))),c(r,this,x),r},w=x.prototype=b.prototype,v="stack"in y(g),k="stack"in new b(1,2),I=b&&f&&Object.getOwnPropertyDescriptor(s,g),S=!!I&&!(I.writable&&I.configurable),N=v&&!S&&!k;r({global:!0,constructor:!0,forced:m||N},{DOMException:N?x:b});var T=a(g),C=T.prototype;if(C.constructor!==T)for(var E in m||i(C,"constructor",o(1,T)),p)if(l(p,E)){var $=p[E],A=$.s;l(T,A)||i(T,A,o(6,$.c))}},4633:function(e,t,n){n(1091),n(2986)},2986:function(e,t,n){var r=n(2109),s=n(7854),a=n(261).set;r({global:!0,bind:!0,enumerable:!0,forced:s.setImmediate!==a},{setImmediate:a})},9373:function(e){e.exports="object"==typeof self?self.FormData:window.FormData},89:function(e,t){"use strict";t.Z=(e,t)=>{const n=e.__vccOpts||e;for(const[r,s]of t)n[r]=s;return n}},4200:function(e,t,n){n(7658),n(2087),n(2801),n(541),n(4633),/*! For license information please see mindar-image.prod.js.LICENSE.txt */(()=>{var e={1113:function(e){e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"encode",(function(){return E})),n.d(t,"decode",(function(){return V})),n.d(t,"decodeAsync",(function(){return K})),n.d(t,"decodeArrayStream",(function(){return X})),n.d(t,"decodeStream",(function(){return Y})),n.d(t,"Decoder",(function(){return B})),n.d(t,"Encoder",(function(){return T})),n.d(t,"ExtensionCodec",(function(){return I})),n.d(t,"ExtData",(function(){return d})),n.d(t,"EXT_TIMESTAMP",(function(){return g})),n.d(t,"encodeDateToTimeSpec",(function(){return b})),n.d(t,"encodeTimeSpecToTimestamp",(function(){return y})),n.d(t,"decodeTimestampToTimeSpec",(function(){return w})),n.d(t,"encodeTimestampExtension",(function(){return x})),n.d(t,"decodeTimestampExtension",(function(){return v}));var r=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,s,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(s)throw s.error}}return o},s=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e},a="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function o(e){for(var t=e.length,n=0,r=0;r<t;){var s=e.charCodeAt(r++);if(0!=(4294967168&s))if(0==(4294965248&s))n+=2;else{if(s>=55296&&s<=56319&&r<t){var a=e.charCodeAt(r);56320==(64512&a)&&(++r,s=((1023&s)<<10)+(1023&a)+65536)}n+=0==(4294901760&s)?3:4}else n++}return n}var i=a?new TextEncoder:void 0,l="undefined"!=typeof process?200:0,u=(null==i?void 0:i.encodeInto)?function(e,t,n){i.encodeInto(e,t.subarray(n))}:function(e,t,n){t.set(i.encode(e),n)};function c(e,t,n){for(var r=t,a=r+n,o=[],i="";r<a;){var l=e[r++];if(0==(128&l))o.push(l);else if(192==(224&l)){var u=63&e[r++];o.push((31&l)<<6|u)}else if(224==(240&l)){u=63&e[r++];var c=63&e[r++];o.push((31&l)<<12|u<<6|c)}else if(240==(248&l)){var h=(7&l)<<18|(u=63&e[r++])<<12|(c=63&e[r++])<<6|63&e[r++];h>65535&&(h-=65536,o.push(h>>>10&1023|55296),h=56320|1023&h),o.push(h)}else o.push(l);o.length>=4096&&(i+=String.fromCharCode.apply(String,s(o)),o.length=0)}return o.length>0&&(i+=String.fromCharCode.apply(String,s(o))),i}var h=a?new TextDecoder:null,p="undefined"!=typeof process?200:0,d=function(e,t){this.type=e,this.data=t};function f(e,t,n){var r=Math.floor(n/4294967296),s=n;e.setUint32(t,r),e.setUint32(t+4,s)}function m(e,t){return 4294967296*e.getInt32(t)+e.getUint32(t+4)}var g=-1;function y(e){var t,n=e.sec,r=e.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var s=new Uint8Array(4);return(t=new DataView(s.buffer)).setUint32(0,n),s}var a=n/4294967296,o=4294967295&n;return s=new Uint8Array(8),(t=new DataView(s.buffer)).setUint32(0,r<<2|3&a),t.setUint32(4,o),s}return s=new Uint8Array(12),(t=new DataView(s.buffer)).setUint32(0,r),f(t,4,n),s}function b(e){var t=e.getTime(),n=Math.floor(t/1e3),r=1e6*(t-1e3*n),s=Math.floor(r/1e9);return{sec:n+s,nsec:r-1e9*s}}function x(e){return e instanceof Date?y(b(e)):null}function w(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var n=t.getUint32(0);return{sec:4294967296*(3&n)+t.getUint32(4),nsec:n>>>2};case 12:return{sec:m(t,4),nsec:t.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+e.length)}}function v(e){var t=w(e);return new Date(1e3*t.sec+t.nsec/1e6)}var k={type:g,encode:x,decode:v},I=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(k)}return e.prototype.register=function(e){var t=e.type,n=e.encode,r=e.decode;if(t>=0)this.encoders[t]=n,this.decoders[t]=r;else{var s=1+t;this.builtInEncoders[s]=n,this.builtInDecoders[s]=r}},e.prototype.tryToEncode=function(e,t){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(s=r(e,t)))return new d(-1-n,s);for(n=0;n<this.encoders.length;n++){var r,s;if(null!=(r=this.encoders[n])&&null!=(s=r(e,t)))return new d(n,s)}return e instanceof d?e:null},e.prototype.decode=function(e,t,n){var r=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return r?r(e,t,n):new d(t,e)},e.defaultCodec=new e,e}();function S(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var N=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},T=function(){function e(e,t,n,r,s,a,o){void 0===e&&(e=I.defaultCodec),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===s&&(s=!1),void 0===a&&(a=!1),void 0===o&&(o=!1),this.extensionCodec=e,this.context=t,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=s,this.forceFloat32=a,this.ignoreUndefined=o,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.encode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),n=new Uint8Array(t),r=new DataView(t);n.set(this.bytes),this.view=r,this.bytes=n},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=e.length;if(a&&t>l){var n=o(e);this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),u(e,this.bytes,this.pos),this.pos+=n}else n=o(e),this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),function(e,t,n){for(var r=e.length,s=n,a=0;a<r;){var o=e.charCodeAt(a++);if(0!=(4294967168&o)){if(0==(4294965248&o))t[s++]=o>>6&31|192;else{if(o>=55296&&o<=56319&&a<r){var i=e.charCodeAt(a);56320==(64512&i)&&(++a,o=((1023&o)<<10)+(1023&i)+65536)}0==(4294901760&o)?(t[s++]=o>>12&15|224,t[s++]=o>>6&63|128):(t[s++]=o>>18&7|240,t[s++]=o>>12&63|128,t[s++]=o>>6&63|128)}t[s++]=63&o|128}else t[s++]=o}}(e,this.bytes,this.pos),this.pos+=n},e.prototype.encodeObject=function(e,t){var n=this.extensionCodec.tryToEncode(e,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var n=S(e);this.writeU8a(n)},e.prototype.encodeArray=function(e,t){var n,r,s=e.length;if(s<16)this.writeU8(144+s);else if(s<65536)this.writeU8(220),this.writeU16(s);else{if(!(s<4294967296))throw new Error("Too large array: "+s);this.writeU8(221),this.writeU32(s)}try{for(var a=N(e),o=a.next();!o.done;o=a.next()){var i=o.value;this.encode(i,t+1)}}catch(e){n={error:e}}finally{try{o&&!o.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}},e.prototype.countWithoutUndefined=function(e,t){var n,r,s=0;try{for(var a=N(t),o=a.next();!o.done;o=a.next())void 0!==e[o.value]&&s++}catch(e){n={error:e}}finally{try{o&&!o.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}return s},e.prototype.encodeMap=function(e,t){var n,r,s=Object.keys(e);this.sortKeys&&s.sort();var a=this.ignoreUndefined?this.countWithoutUndefined(e,s):s.length;if(a<16)this.writeU8(128+a);else if(a<65536)this.writeU8(222),this.writeU16(a);else{if(!(a<4294967296))throw new Error("Too large map object: "+a);this.writeU8(223),this.writeU32(a)}try{for(var o=N(s),i=o.next();!i.done;i=o.next()){var l=i.value,u=e[l];this.ignoreUndefined&&void 0===u||(this.encodeString(l),this.encode(u,t+1))}}catch(e){n={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,n){var r=n/4294967296,s=n;e.setUint32(t,r),e.setUint32(t+4,s)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,e),this.pos+=8},e}(),C={};function E(e,t){void 0===t&&(t=C);var n=new T(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined);return n.encode(e,1),n.getUint8Array()}function $(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var A=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.get=function(e,t,n){var r=this.caches[n-1],s=r.length;e:for(var a=0;a<s;a++){for(var o=r[a],i=o.bytes,l=0;l<n;l++)if(i[l]!==e[t+l])continue e;return o.value}return null},e.prototype.store=function(e,t){var n=this.caches[e.length-1],r={bytes:e,value:t};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},e.prototype.decode=function(e,t,n){var r=this.get(e,t,n);if(null!=r)return r;var s=c(e,t,n),a=Uint8Array.prototype.slice.call(e,t,t+n);return this.store(a,s),s},e}(),R=function(e,t){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}},M=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,s){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,s,(t=e[n](t)).done,t.value)}))}}},_=function(e){return this instanceof _?(this.v=e,this):new _(e)},F=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(e,t||[]),a=[];return r={},o("next"),o("throw"),o("return"),r[Symbol.asyncIterator]=function(){return this},r;function o(e){s[e]&&(r[e]=function(t){return new Promise((function(n,r){a.push([e,t,n,r])>1||i(e,t)}))})}function i(e,t){try{(n=s[e](t)).value instanceof _?Promise.resolve(n.value.v).then(l,u):c(a[0][2],n)}catch(e){c(a[0][3],e)}var n}function l(e){i("next",e)}function u(e){i("throw",e)}function c(e,t){e(t),a.shift(),a.length&&i(a[0][0],a[0][1])}},D=new DataView(new ArrayBuffer(0)),O=new Uint8Array(D.buffer),L=function(){try{D.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),P=new L("Insufficient data"),z=new A,B=function(){function e(e,t,n,r,s,a,o,i){void 0===e&&(e=I.defaultCodec),void 0===n&&(n=4294967295),void 0===r&&(r=4294967295),void 0===s&&(s=4294967295),void 0===a&&(a=4294967295),void 0===o&&(o=4294967295),void 0===i&&(i=z),this.extensionCodec=e,this.context=t,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=s,this.maxMapLength=a,this.maxExtLength=o,this.cachedKeyDecoder=i,this.totalPos=0,this.pos=0,this.view=D,this.bytes=O,this.headByte=-1,this.stack=[]}return e.prototype.setBuffer=function(e){this.bytes=S(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=S(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining()){var t=this.bytes.subarray(this.pos),n=S(e),r=new Uint8Array(t.length+n.length);r.set(t),r.set(n,t.length),this.setBuffer(r)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return void 0===e&&(e=1),this.view.byteLength-this.pos>=e},e.prototype.createNoExtraBytesError=function(e){var t=this.view,n=this.pos;return new RangeError("Extra "+(t.byteLength-n)+" byte(s) found at buffer["+e+"]")},e.prototype.decodeSingleSync=function(){var e=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return e},e.prototype.decodeSingleAsync=function(e){var t,n,r,s;return function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function o(e){try{l(r.next(e))}catch(e){a(e)}}function i(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}l((r=r.apply(e,t||[])).next())}))}(this,void 0,void 0,(function(){var a,o,i,l,u,c,h,p;return R(this,(function(d){switch(d.label){case 0:a=!1,d.label=1;case 1:d.trys.push([1,6,7,12]),t=M(e),d.label=2;case 2:return[4,t.next()];case 3:if((n=d.sent()).done)return[3,5];if(i=n.value,a)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(i);try{o=this.decodeSync(),a=!0}catch(e){if(!(e instanceof L))throw e}this.totalPos+=this.pos,d.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=d.sent(),r={error:l},[3,12];case 7:return d.trys.push([7,,10,11]),n&&!n.done&&(s=t.return)?[4,s.call(t)]:[3,9];case 8:d.sent(),d.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(a){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,o]}throw c=(u=this).headByte,h=u.pos,p=u.totalPos,new RangeError("Insufficient data in parcing "+$(c)+" at "+p+" ("+h+" in the current buffer)")}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return F(this,arguments,(function(){var n,r,s,a,o,i,l,u,c;return R(this,(function(h){switch(h.label){case 0:n=t,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),s=M(e),h.label=2;case 2:return[4,_(s.next())];case 3:if((a=h.sent()).done)return[3,12];if(o=a.value,t&&0===r)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(o),n&&(r=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,_(this.decodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((i=h.sent())instanceof L))throw i;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=h.sent(),u={error:l},[3,19];case 14:return h.trys.push([14,,17,18]),a&&!a.done&&(c=s.return)?[4,_(c.call(s))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.decodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(r=e-128)){this.pushMapState(r),this.complete();continue e}t={}}else if(e<160){if(0!=(r=e-144)){this.pushArrayState(r),this.complete();continue e}t=[]}else{var n=e-160;t=this.decodeUtf8String(n,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)n=this.lookU8(),t=this.decodeUtf8String(n,1);else if(218===e)n=this.lookU16(),t=this.decodeUtf8String(n,2);else if(219===e)n=this.lookU32(),t=this.decodeUtf8String(n,4);else if(220===e){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(221===e){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(222===e){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue e}t={}}else if(223===e){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue e}t={}}else if(196===e){var r=this.lookU8();t=this.decodeBinary(r,1)}else if(197===e)r=this.lookU16(),t=this.decodeBinary(r,2);else if(198===e)r=this.lookU32(),t=this.decodeBinary(r,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)r=this.lookU8(),t=this.decodeExtension(r,1);else if(200===e)r=this.lookU16(),t=this.decodeExtension(r,2);else{if(201!==e)throw new Error("Unrecognized type byte: "+$(e));r=this.lookU32(),t=this.decodeExtension(r,4)}this.complete();for(var s=this.stack;s.length>0;){var a=s[s.length-1];if(0===a.type){if(a.array[a.position]=t,a.position++,a.position!==a.size)continue e;s.pop(),t=a.array}else{if(1===a.type){if("string"!=(o=typeof t)&&"number"!==o)throw new Error("The type of key must be string or number but "+typeof t);a.key=t,a.type=2;continue e}if(a.map[a.key]=t,a.readCount++,a.readCount!==a.size){a.key=null,a.type=1;continue e}s.pop(),t=a.map}}return t}var o},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new Error("Unrecognized array type byte: "+$(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Error("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var n;if(e>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw P;var r,s=this.pos+t;return r=this.stateIsMapKey()&&(null===(n=this.cachedKeyDecoder)||void 0===n?void 0:n.canBeCached(e))?this.cachedKeyDecoder.decode(this.bytes,s,e):a&&e>p?function(e,t,n){var r=e.subarray(t,t+n);return h.decode(r)}(this.bytes,s,e):c(this.bytes,s,e),this.pos+=t+e,r},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw P;var n=this.pos+t,r=this.bytes.subarray(n,n+e);return this.pos+=t+e,r},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var n=this.view.getInt8(this.pos+t),r=this.decodeBinary(e,t+1);return this.extensionCodec.decode(r,n,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,n=(e=this.view,t=this.pos,4294967296*e.getUint32(t)+e.getUint32(t+4));return this.pos+=8,n},e.prototype.readI64=function(){var e=m(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),U={};function V(e,t){void 0===t&&(t=U);var n=new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength);return n.setBuffer(e),n.decodeSingleSync()}var W=function(e,t){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}},j=function(e){return this instanceof j?(this.v=e,this):new j(e)},G=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(e,t||[]),a=[];return r={},o("next"),o("throw"),o("return"),r[Symbol.asyncIterator]=function(){return this},r;function o(e){s[e]&&(r[e]=function(t){return new Promise((function(n,r){a.push([e,t,n,r])>1||i(e,t)}))})}function i(e,t){try{(n=s[e](t)).value instanceof j?Promise.resolve(n.value.v).then(l,u):c(a[0][2],n)}catch(e){c(a[0][3],e)}var n}function l(e){i("next",e)}function u(e){i("throw",e)}function c(e,t){e(t),a.shift(),a.length&&i(a[0][0],a[0][1])}};function H(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}function q(e){return null!=e[Symbol.asyncIterator]?e:function(e){return G(this,arguments,(function(){var t,n,r,s;return W(this,(function(a){switch(a.label){case 0:t=e.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,j(t.read())];case 3:return n=a.sent(),r=n.done,s=n.value,r?[4,j(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return H(s),[4,j(s)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}function K(e,t){return void 0===t&&(t=U),function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function o(e){try{l(r.next(e))}catch(e){a(e)}}function i(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}l((r=r.apply(e,t||[])).next())}))}(this,void 0,void 0,(function(){var n;return function(e,t){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}}(this,(function(r){return n=q(e),[2,new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeSingleAsync(n)]}))}))}function X(e,t){void 0===t&&(t=U);var n=q(e);return new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(n)}function Y(e,t){void 0===t&&(t=U);var n=q(e);return new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(n)}}])},4563:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>Ye,Acos:()=>Ze,Acosh:()=>Je,AdadeltaOptimizer:()=>Sl,AdagradOptimizer:()=>Tl,AdamOptimizer:()=>$l,AdamaxOptimizer:()=>Ml,Add:()=>Qe,AddN:()=>et,All:()=>tt,Any:()=>nt,ArgMax:()=>rt,ArgMin:()=>st,Asin:()=>at,Asinh:()=>ot,Atan:()=>it,Atan2:()=>ut,Atanh:()=>lt,AvgPool:()=>ct,AvgPool3D:()=>pt,AvgPool3DGrad:()=>dt,AvgPoolGrad:()=>ht,BatchMatMul:()=>ft,BatchToSpaceND:()=>mt,Bincount:()=>gt,BroadcastArgs:()=>bt,BroadcastTo:()=>yt,Callback:()=>bI,CallbackList:()=>bb,Cast:()=>xt,Ceil:()=>wt,ClipByValue:()=>vt,Complex:()=>kt,ComplexAbs:()=>It,Concat:()=>St,Conv2D:()=>Nt,Conv2DBackpropFilter:()=>Tt,Conv2DBackpropInput:()=>Ct,Conv3D:()=>Et,Conv3DBackpropFilterV2:()=>$t,Conv3DBackpropInputV2:()=>At,Cos:()=>Rt,Cosh:()=>Mt,CropAndResize:()=>Ft,Cumsum:()=>_t,CustomCallback:()=>vb,DataStorage:()=>H,DenseBincount:()=>Dt,DepthToSpace:()=>Ot,DepthwiseConv2dNative:()=>Lt,DepthwiseConv2dNativeBackpropFilter:()=>Pt,DepthwiseConv2dNativeBackpropInput:()=>zt,Diag:()=>Bt,Dilation2D:()=>Ut,Dilation2DBackpropFilter:()=>Wt,Dilation2DBackpropInput:()=>Vt,ENV:()=>qe,EarlyStopping:()=>vI,Einsum:()=>Gt,Elu:()=>Ht,EluGrad:()=>qt,Environment:()=>We,Equal:()=>Xt,Erf:()=>Kt,Exp:()=>Yt,ExpandDims:()=>Zt,Expm1:()=>Jt,FFT:()=>Qt,Fill:()=>en,FlipLeftRight:()=>tn,Floor:()=>nn,FloorDiv:()=>rn,FromPixels:()=>Zr,FusedBatchNorm:()=>sn,FusedConv2D:()=>es,FusedDepthwiseConv2D:()=>ts,GatherNd:()=>on,GatherV2:()=>an,GraphModel:()=>LS,Greater:()=>ln,GreaterEqual:()=>un,History:()=>wb,IFFT:()=>hn,Identity:()=>cn,Imag:()=>pn,InputSpec:()=>ab,IsFinite:()=>dn,IsInf:()=>fn,IsNan:()=>mn,KernelBackend:()=>q,LRN:()=>Tn,LRNGrad:()=>Cn,LayerVariable:()=>nb,LayersModel:()=>Tx,LeakyRelu:()=>gn,Less:()=>yn,LessEqual:()=>bn,LinSpace:()=>xn,Log:()=>wn,Log1p:()=>vn,LogSoftmax:()=>Nn,LogicalAnd:()=>kn,LogicalNot:()=>In,LogicalOr:()=>Sn,Max:()=>En,MaxPool:()=>An,MaxPool3D:()=>Mn,MaxPool3DGrad:()=>_n,MaxPoolGrad:()=>Rn,MaxPoolWithArgmax:()=>Fn,Maximum:()=>$n,Mean:()=>Dn,Min:()=>On,Minimum:()=>Ln,MirrorPad:()=>Pn,Mod:()=>zn,MomentumOptimizer:()=>Fl,Multinomial:()=>Bn,Multiply:()=>Un,Neg:()=>Vn,NonMaxSuppressionV3:()=>jn,NonMaxSuppressionV4:()=>Gn,NonMaxSuppressionV5:()=>Hn,NotEqual:()=>Wn,OP_SCOPE_SUFFIX:()=>Na,OneHot:()=>Kn,OnesLike:()=>qn,Optimizer:()=>Il,OptimizerConstructors:()=>Ol,Pack:()=>Xn,PadV2:()=>Yn,Pool:()=>Zn,Pow:()=>Jn,Prelu:()=>Qn,Prod:()=>er,RMSPropOptimizer:()=>Dl,RNN:()=>Mw,Range:()=>tr,Rank:()=>Ys,Real:()=>nr,RealDiv:()=>jt,Reciprocal:()=>rr,Reduction:()=>id,Relu:()=>sr,Relu6:()=>cr,Reshape:()=>ar,ResizeBilinear:()=>lr,ResizeBilinearGrad:()=>ur,ResizeNearestNeighbor:()=>or,ResizeNearestNeighborGrad:()=>ir,Reverse:()=>hr,RotateWithOffset:()=>Jr,Round:()=>pr,Rsqrt:()=>dr,SGDOptimizer:()=>_l,ScatterNd:()=>fr,Select:()=>mr,Selu:()=>gr,Sequential:()=>$x,Sigmoid:()=>vr,Sign:()=>wr,Sin:()=>br,Sinh:()=>xr,Slice:()=>yr,Softmax:()=>Cr,Softplus:()=>kr,SpaceToBatchND:()=>Nr,SparseFillEmptyRows:()=>Er,SparseReshape:()=>$r,SparseSegmentMean:()=>Ar,SparseSegmentSum:()=>Rr,SparseToDense:()=>Mr,SplitV:()=>Tr,Sqrt:()=>Ir,Square:()=>Fr,SquaredDifference:()=>_r,Step:()=>Yr,StridedSlice:()=>Dr,StringNGrams:()=>Or,StringSplit:()=>Lr,StringToHashBucketFast:()=>Pr,Sub:()=>zr,Sum:()=>Sr,SymbolicTensor:()=>ob,Tan:()=>Br,Tanh:()=>Ur,Tensor:()=>qs,TensorBuffer:()=>Ws,Tile:()=>Vr,TopK:()=>Wr,Transform:()=>jr,Transpose:()=>Gr,Unique:()=>Hr,Unpack:()=>qr,UnsortedSegmentSum:()=>Kr,Variable:()=>Xs,ZerosLike:()=>Xr,_FusedMatMul:()=>Qr,abs:()=>Al,acos:()=>Ll,acosh:()=>Pl,add:()=>ll,addN:()=>zl,all:()=>Bl,any:()=>Ul,argMax:()=>Vl,argMin:()=>Wl,asin:()=>jl,asinh:()=>Gl,atan:()=>Hl,atan2:()=>ql,atanh:()=>Kl,avgPool:()=>cu,avgPool3d:()=>hu,backend:()=>ol,backend_util:()=>y,basicLSTMCell:()=>gu,batchNorm:()=>bu,batchNorm2d:()=>xu,batchNorm3d:()=>wu,batchNorm4d:()=>vu,batchToSpaceND:()=>yu,bincount:()=>ku,booleanMaskAsync:()=>hp,broadcastArgs:()=>Iu,broadcastTo:()=>Su,broadcast_util:()=>l,browser:()=>u,buffer:()=>No,callbacks:()=>kI,cast:()=>To,ceil:()=>Nu,clipByValue:()=>Tu,clone:()=>Co,complex:()=>Ca,concat:()=>pu,concat1d:()=>Cu,concat2d:()=>Eu,concat3d:()=>$u,concat4d:()=>Au,constraints:()=>x,conv1d:()=>Mu,conv2d:()=>Ru,conv2dTranspose:()=>Fu,conv3d:()=>Du,conv3dTranspose:()=>Lu,copyRegisteredKernels:()=>ds,cos:()=>Pu,cosh:()=>zu,cosineWindow:()=>wp,cumsum:()=>Bu,customGrad:()=>wl,data:()=>j,denseBincount:()=>Uu,deprecationWarn:()=>ji,depthToSpace:()=>Vu,depthwiseConv2d:()=>Wu,deregisterOp:()=>EI,device_util:()=>a,diag:()=>ju,dilation2d:()=>Gu,disableDeprecationWarnings:()=>Wi,dispose:()=>Yi,disposeVariables:()=>Gi,div:()=>cl,divNoNan:()=>Ku,dot:()=>Xu,dropout:()=>bp,einsum:()=>Yu,elu:()=>Zu,enableDebugMode:()=>Vi,enableProdMode:()=>Ui,enclosingPowerOfTwo:()=>xp,engine:()=>Hi,env:()=>Ge,equal:()=>Hu,erf:()=>Ju,exp:()=>Qu,expandDims:()=>ec,expm1:()=>tc,eye:()=>rc,fft:()=>Uh,fill:()=>Nl,findBackend:()=>rl,findBackendFactory:()=>sl,floor:()=>sc,floorDiv:()=>ul,fused:()=>m,gather:()=>ac,gatherND:()=>yp,gather_util:()=>c,getBackend:()=>tl,getGradient:()=>is,getKernel:()=>os,getKernelsForBackend:()=>ls,grad:()=>ml,grads:()=>gl,greater:()=>oc,greaterEqual:()=>ic,ifft:()=>Vh,imag:()=>lc,image:()=>Td,inTopKAsync:()=>vp,initializers:()=>w,input:()=>_x,io:()=>o,irfft:()=>Wh,isFinite:()=>uc,isInf:()=>cc,isNaN:()=>hc,keep:()=>Zi,kernel_impls:()=>b,layers:()=>v,leakyRelu:()=>pc,less:()=>dc,lessEqual:()=>fc,linalg:()=>Cd,linspace:()=>mc,loadGraphModel:()=>PS,loadLayersModel:()=>Mx,localResponseNormalization:()=>gc,log:()=>yc,log1p:()=>bc,logSigmoid:()=>vc,logSoftmax:()=>Sc,logSumExp:()=>_c,logicalAnd:()=>Fc,logicalNot:()=>Dc,logicalOr:()=>Oc,logicalXor:()=>Lc,losses:()=>Ed,matMul:()=>Ho,math:()=>i,max:()=>kc,maxPool:()=>Pc,maxPool3d:()=>zc,maxPoolWithArgmax:()=>Bc,maximum:()=>Rl,mean:()=>Uc,memory:()=>qi,meshgrid:()=>jc,metrics:()=>k,min:()=>Gc,minimum:()=>Hc,mirrorPad:()=>qc,mod:()=>Kc,model:()=>Ax,models:()=>I,moments:()=>Xc,movingAverage:()=>fp,mul:()=>hl,multiRNNCell:()=>Yc,multinomial:()=>Zc,neg:()=>xc,nextFrame:()=>_d,norm:()=>dp,notEqual:()=>Jc,oneHot:()=>qo,ones:()=>Wc,onesLike:()=>Qc,op:()=>Ta,outerProduct:()=>eh,pad:()=>th,pad1d:()=>nh,pad2d:()=>rh,pad3d:()=>sh,pad4d:()=>ah,pool:()=>ih,pow:()=>Cl,prelu:()=>lh,print:()=>Eo,prod:()=>uh,profile:()=>Ki,rand:()=>ch,randomGamma:()=>mh,randomNormal:()=>gh,randomUniform:()=>yh,range:()=>bh,ready:()=>el,real:()=>xh,reciprocal:()=>wh,registerBackend:()=>al,registerCallbackConstructor:()=>Fx,registerGradient:()=>cs,registerKernel:()=>us,registerOp:()=>TI,regularizers:()=>S,relu:()=>vh,relu6:()=>kh,removeBackend:()=>nl,reshape:()=>uu,reverse:()=>Ih,reverse1d:()=>Sh,reverse2d:()=>Nh,reverse3d:()=>Th,reverse4d:()=>Ch,rfft:()=>Gh,round:()=>Eh,rsqrt:()=>$h,scalar:()=>kl,scatterND:()=>mp,scatter_util:()=>h,selu:()=>Ah,separableConv2d:()=>Rh,sequential:()=>Rx,serialization:()=>d,setBackend:()=>Qi,setPlatform:()=>il,setdiff1dAsync:()=>Mh,sigmoid:()=>du,sign:()=>_h,signal:()=>Nd,sin:()=>Fh,sinh:()=>Dh,slice:()=>fu,slice1d:()=>Oh,slice2d:()=>Lh,slice3d:()=>Ph,slice4d:()=>zh,slice_util:()=>p,softmax:()=>Bh,softplus:()=>wc,spaceToBatchND:()=>oh,sparse:()=>$d,sparseToDense:()=>gp,spectral:()=>Sd,split:()=>jh,sqrt:()=>pl,square:()=>dl,squaredDifference:()=>Hh,squeeze:()=>qh,stack:()=>Kh,step:()=>Xh,stridedSlice:()=>Yh,string:()=>Ad,sub:()=>El,sum:()=>Ic,sumOutType:()=>ra,tan:()=>Zh,tanh:()=>mu,tensor:()=>$a,tensor1d:()=>Jh,tensor2d:()=>Qh,tensor3d:()=>Qo,tensor4d:()=>ep,tensor5d:()=>tp,tensor6d:()=>np,tensor_util:()=>s,test_util:()=>f,tidy:()=>Xi,tile:()=>nc,time:()=>Ji,topk:()=>rp,train:()=>Rd,transpose:()=>Ko,truncatedNormal:()=>sp,unique:()=>ap,unregisterGradient:()=>ps,unregisterKernel:()=>hs,unsortedSegmentSum:()=>op,unstack:()=>ip,upcastType:()=>na,util:()=>r,valueAndGrad:()=>yl,valueAndGrads:()=>bl,variable:()=>lp,variableGrads:()=>xl,version:()=>DB,version_converter:()=>zS,version_core:()=>Bi,version_layers:()=>tx,where:()=>qu,whereAsync:()=>cp,zeros:()=>Vc,zerosLike:()=>fl});var r={};n.r(r),n.d(r,{arraysEqual:()=>ue,assert:()=>re,assertNonNegativeIntegerDimensions:()=>ze,assertNonNull:()=>ae,assertShapesMatch:()=>se,bytesFromStringArray:()=>Te,bytesPerElement:()=>Ne,checkConversionForErrors:()=>ve,clamp:()=>Z,computeStrides:()=>_e,createScalarValue:()=>$s,createShuffledIndices:()=>de,decodeString:()=>Fs,distSquared:()=>ne,encodeString:()=>_s,fetch:()=>Ms,fingerPrint64:()=>Es,flatten:()=>oe,getArrayFromDType:()=>we,getTypedArrayFromDType:()=>xe,hasEncodingLoss:()=>Ie,hexToLong:()=>ys,indexToLoc:()=>Ue,inferDtype:()=>Ae,inferFromImplicitShape:()=>ge,isBoolean:()=>Ee,isFunction:()=>Re,isInt:()=>ce,isNumber:()=>$e,isPromise:()=>Ve,isScalarShape:()=>le,isString:()=>Ce,isTypedArray:()=>Se,isValidDtype:()=>ke,locToIndex:()=>Be,makeOnesTypedArray:()=>Oe,makeZerosNestedTypedArray:()=>Pe,makeZerosTypedArray:()=>Le,nearestDivisor:()=>Me,nearestLargerEven:()=>J,now:()=>Rs,parseAxisParam:()=>ye,randUniform:()=>te,repeatedTry:()=>me,rightPad:()=>fe,shuffle:()=>X,shuffleCombo:()=>Y,sizeFromShape:()=>ie,sizeToSquarishShape:()=>pe,squeezeShape:()=>be,sum:()=>ee,swap:()=>Q,tanh:()=>he,toNestedArray:()=>De,toTypedArray:()=>As});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>aa,getTensorsInContainer:()=>ia,isTensorInList:()=>oa,makeTypesMatch:()=>sa});var a={};n.r(a),n.d(a,{isBrowser:()=>ba,isMobile:()=>ya,mockIsMobile:()=>ga});var o={};n.r(o),n.d(o,{browserFiles:()=>Mo,browserHTTPRequest:()=>Uo,concatenateArrayBuffers:()=>Oa,copyModel:()=>vo,decodeWeights:()=>Ma,encodeWeights:()=>Ra,fromMemory:()=>jo,getLoadHandlers:()=>Ha,getModelArtifactsForJSON:()=>za,getModelArtifactsInfoForJSON:()=>Ba,getSaveHandlers:()=>Ga,http:()=>Bo,isHTTPScheme:()=>Po,listModels:()=>xo,loadWeights:()=>Do,moveModel:()=>ko,registerLoadRouter:()=>ja,registerSaveRouter:()=>Wa,removeModel:()=>wo,weightsLoaderFactory:()=>Oo,withSaveHandler:()=>Go});var i={};n.r(i),n.d(i,{confusionMatrix:()=>Xo});var l={};n.r(l),n.d(l,{assertAndGetBroadcastShape:()=>Jo,getBroadcastDims:()=>Yo,getReductionAxes:()=>Zo});var u={};n.r(u),n.d(u,{fromPixels:()=>si,fromPixelsAsync:()=>ni,toPixels:()=>ri});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>ai});var h={};n.r(h),n.d(h,{calculateShapes:()=>li,validateInput:()=>ii,validateUpdateShape:()=>oi});var p={};n.r(p),n.d(p,{assertParamsValid:()=>ui,computeFlatOffset:()=>ki,computeOutShape:()=>hi,getNormalizedAxes:()=>mi,isSliceContinous:()=>vi,maskToAxes:()=>ci,parseSliceParams:()=>Ii,sliceInfo:()=>Si,startForAxis:()=>xi,startIndicesWithElidedDims:()=>gi,stopForAxis:()=>wi,stopIndicesWithElidedDims:()=>yi,stridesForAxis:()=>bi,stridesWithElidedDims:()=>pi});var d={};n.r(d),n.d(d,{Serializable:()=>Ti,SerializationMap:()=>Ci,registerClass:()=>Ei});var f={};n.r(f),n.d(f,{TEST_EPSILON_FLOAT16:()=>$i,encodeStrings:()=>zi,expectArrayBuffersEqual:()=>Pi,expectArraysClose:()=>Ai,expectArraysEqual:()=>Fi,expectNumbersClose:()=>Di,expectPromiseToFail:()=>_i,expectValuesInRange:()=>Li,testEpsilon:()=>Ri});var m={};n.r(m),n.d(m,{conv2d:()=>Cp,depthwiseConv2d:()=>Ap,matMul:()=>Rp});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:()=>$f,computeOutShape:()=>Ef,segOpComputeOptimalWindowSize:()=>Cf});var y={};n.r(y),n.d(y,{ERF_A1:()=>qd,ERF_A2:()=>Kd,ERF_A3:()=>Xd,ERF_A4:()=>Yd,ERF_A5:()=>Zd,ERF_P:()=>Hd,PARALLELIZE_THRESHOLD:()=>Od,SELU_SCALE:()=>Gd,SELU_SCALEALPHA:()=>jd,applyActivation:()=>Np,assertAndGetBroadcastShape:()=>Jo,assertAxesAreInnerMostDims:()=>$c,assertParamsConsistent:()=>Fd,assignToTypedArray:()=>rf,axesAreInnerMostDims:()=>Nc,calculateShapes:()=>li,checkEinsumDimSizes:()=>cf,checkPadOnDimRoundingMode:()=>lu,combineLocations:()=>Tc,complexWithEvenIndex:()=>ef,complexWithOddIndex:()=>tf,computeConv2DInfo:()=>Jl,computeConv3DInfo:()=>Ql,computeDefaultPad:()=>eu,computeDilation2DInfo:()=>Xl,computeOptimalWindowSize:()=>Ld,computeOutAndReduceShapes:()=>Cc,computeOutShape:()=>Dd,computePool2DInfo:()=>Yl,computePool3DInfo:()=>Zl,convertConv2DDataFormat:()=>iu,decodeEinsumEquation:()=>lf,eitherStridesOrDilationsAreOne:()=>ou,expandShapeToKeepDim:()=>Ec,exponent:()=>af,exponents:()=>sf,fromStringArrayToUint8:()=>Rf,fromUint8ToStringArray:()=>Af,getAxesPermutation:()=>Ac,getBroadcastDims:()=>Yo,getComplexWithIndex:()=>nf,getEinsumComputePath:()=>hf,getEinsumPermutation:()=>uf,getFusedBiasGradient:()=>Sp,getFusedDyActivation:()=>Ip,getImageCenter:()=>Pd,getInnerMostAxes:()=>Mc,getPermuted:()=>Bd,getReductionAxes:()=>Zo,getReshaped:()=>zd,getReshapedPermuted:()=>Ud,getSliceBeginCoords:()=>Vd,getSliceSize:()=>Wd,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>mf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>gf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>yf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>wf,getSparseReshapeInputOutputMismatchErrorMessage:()=>kf,getSparseReshapeInputOutputMultipleErrorMessage:()=>vf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>bf,getSparseReshapeNegativeOutputDimErrorMessage:()=>xf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Tf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>If,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Sf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Nf,getUndoAxesPermutation:()=>Rc,isIdentityPermutation:()=>pf,log:()=>rs,mergeRealAndImagArrays:()=>Jd,prepareAndValidate:()=>ai,prepareSplitSize:()=>ff,segment_util:()=>g,shouldFuse:()=>Tp,slice_util:()=>p,splitRealAndImagArrays:()=>Qd,tupleValuesAreOne:()=>au,upcastType:()=>na,validateInput:()=>ii,validateUpdateShape:()=>oi,warn:()=>ns});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:()=>jp,nonMaxSuppressionV4Impl:()=>Gp,nonMaxSuppressionV5Impl:()=>Hp,whereImpl:()=>up});var x={};n.r(x),n.d(x,{maxNorm:()=>Ng,minMaxNorm:()=>Eg,nonNeg:()=>Cg,unitNorm:()=>Tg});var w={};n.r(w),n.d(w,{constant:()=>Fy,glorotNormal:()=>Uy,glorotUniform:()=>By,heNormal:()=>Vy,heUniform:()=>Wy,identity:()=>Py,leCunNormal:()=>jy,leCunUniform:()=>Gy,ones:()=>_y,orthogonal:()=>Hy,randomNormal:()=>Oy,randomUniform:()=>Dy,truncatedNormal:()=>Ly,varianceScaling:()=>zy,zeros:()=>My});var v={};n.r(v),n.d(v,{Layer:()=>cb,RNN:()=>Mw,RNNCell:()=>_w,activation:()=>Qv,add:()=>lk,alphaDropout:()=>Jk,average:()=>uk,averagePooling1d:()=>bk,averagePooling2d:()=>vk,averagePooling3d:()=>Sk,avgPool1d:()=>xk,avgPool2d:()=>kk,avgPool3d:()=>Nk,avgPooling1d:()=>wk,avgPooling2d:()=>Ik,avgPooling3d:()=>Tk,batchNormalization:()=>mk,bidirectional:()=>jk,concatenate:()=>ck,conv1d:()=>jv,conv2d:()=>Gv,conv2dTranspose:()=>Hv,conv3d:()=>qv,conv3dTranspose:()=>Kv,convLstm2d:()=>Bk,convLstm2dCell:()=>Uk,cropping2D:()=>Yv,dense:()=>ek,depthwiseConv2d:()=>Jv,dot:()=>fk,dropout:()=>tk,elu:()=>Pv,embedding:()=>ik,flatten:()=>rk,gaussianDropout:()=>Zk,gaussianNoise:()=>Yk,globalAveragePooling1d:()=>Ck,globalAveragePooling2d:()=>Ek,globalMaxPool1d:()=>Hk,globalMaxPool2d:()=>qk,globalMaxPooling1d:()=>$k,globalMaxPooling2d:()=>Ak,gru:()=>Fk,gruCell:()=>Dk,input:()=>_x,inputLayer:()=>Lv,layerNormalization:()=>gk,leakyReLU:()=>Bv,lstm:()=>Ok,lstmCell:()=>Lk,masking:()=>Qk,maxPool1d:()=>Kk,maxPool2d:()=>Xk,maxPooling1d:()=>Rk,maxPooling2d:()=>Mk,maxPooling3d:()=>_k,maximum:()=>hk,minimum:()=>pk,multiply:()=>dk,permute:()=>ok,prelu:()=>Uv,reLU:()=>zv,repeatVector:()=>sk,reshape:()=>ak,rnn:()=>Vk,separableConv2d:()=>Xv,simpleRNN:()=>Pk,simpleRNNCell:()=>zk,softmax:()=>Vv,spatialDropout1d:()=>nk,stackedRNNCells:()=>Wk,thresholdedReLU:()=>Wv,timeDistributed:()=>Gk,upSampling2d:()=>Zv,zeroPadding2d:()=>yk});var k={};n.r(k),n.d(k,{MAPE:()=>cI,MSE:()=>dI,binaryAccuracy:()=>eI,binaryCrossentropy:()=>tI,categoricalAccuracy:()=>rI,categoricalCrossentropy:()=>sI,cosineProximity:()=>iI,mape:()=>hI,meanAbsoluteError:()=>lI,meanAbsolutePercentageError:()=>uI,meanSquaredError:()=>pI,mse:()=>fI,precision:()=>aI,recall:()=>oI,sparseCategoricalAccuracy:()=>nI});var I={};n.r(I),n.d(I,{modelFromJSON:()=>Ex});var S={};n.r(S),n.d(S,{l1:()=>gI,l1l2:()=>mI,l2:()=>yI});var N={};n.r(N),n.d(N,{json:()=>OI});var T={};n.r(T),n.d(T,{json:()=>LI});var C={};n.r(C),n.d(C,{json:()=>PI});var E={};n.r(E),n.d(E,{json:()=>zI});var $={};n.r($),n.d($,{json:()=>BI});var A={};n.r(A),n.d(A,{json:()=>UI});var R={};n.r(R),n.d(R,{json:()=>VI});var M={};n.r(M),n.d(M,{json:()=>WI});var _={};n.r(_),n.d(_,{json:()=>jI});var F={};n.r(F),n.d(F,{json:()=>GI});var D={};n.r(D),n.d(D,{json:()=>HI});var O={};n.r(O),n.d(O,{json:()=>qI});var L={};n.r(L),n.d(L,{json:()=>KI});var P={};n.r(P),n.d(P,{json:()=>XI});var z={};n.r(z),n.d(z,{json:()=>YI});var B={};n.r(B),n.d(B,{json:()=>ZI});var U={};n.r(U),n.d(U,{json:()=>JI});var V={};n.r(V),n.d(V,{json:()=>QI});var W={};n.r(W),n.d(W,{json:()=>eS});var j={};n.r(j),n.d(j,{CSVDataset:()=>CN,Dataset:()=>mN,FileDataSource:()=>zN,TextLineDataset:()=>wN,URLDataSource:()=>BN,array:()=>yN,csv:()=>UN,func:()=>VN,generator:()=>WN,microphone:()=>GN,version_data:()=>HN,webcam:()=>jN,zip:()=>bN});var G={};n.r(G),n.d(G,{addImpl:()=>TT,bincountImpl:()=>bC,bincountReduceImpl:()=>xC,ceilImpl:()=>kC,concatImpl:()=>EC,equalImpl:()=>cE,expImpl:()=>vE,expm1Impl:()=>TE,floorImpl:()=>WE,gatherNdImpl:()=>ZE,gatherV2Impl:()=>QE,greaterEqualImpl:()=>s$,greaterImpl:()=>t$,lessEqualImpl:()=>y$,lessImpl:()=>f$,linSpaceImpl:()=>w$,logImpl:()=>k$,maxImpl:()=>L$,maximumImpl:()=>B$,minimumImpl:()=>Y$,multiplyImpl:()=>nE,negImpl:()=>oA,notEqualImpl:()=>fA,prodImpl:()=>CA,rangeImpl:()=>$A,rsqrtImpl:()=>UA,sigmoidImpl:()=>dT,simpleAbsImpl:()=>DT,sliceImpl:()=>fC,sparseFillEmptyRowsImpl:()=>iR,sparseReshapeImpl:()=>uR,sparseSegmentReductionImpl:()=>hR,sqrtImpl:()=>gR,squaredDifferenceImpl:()=>wR,stridedSliceImpl:()=>NR,stringNGramsImpl:()=>ER,stringSplitImpl:()=>RR,stringToHashBucketFastImpl:()=>_R,subImpl:()=>ME,tileImpl:()=>PR,topKImpl:()=>UR,transposeImpl:()=>VT,uniqueImpl:()=>HR});class H{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class q{refCount(e){return K("refCount")}incRef(e){return K("incRef")}timerAvailable(){return!0}time(e){return K("time")}read(e){return K("read")}readSync(e){return K("readSync")}readToGPU(e,t){return K("readToGPU")}numDataIds(){return K("numDataIds")}disposeData(e,t){return K("disposeData")}write(e,t,n){return K("write")}move(e,t,n,r,s){return K("move")}memory(){return K("memory")}floatPrecision(){return K("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return K("dispose")}}function K(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function X(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Q(e,t,n)}function Y(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Q(e,n,r),Q(t,n,r)}function Z(e,t,n){return Math.max(e,Math.min(t,n))}function J(e){return e%2==0?e:e+1}function Q(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function ee(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function te(e,t){const n=Math.random();return t*n+(1-n)*e}function ne(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function re(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function se(e,t,n=""){re(ue(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ae(e){re(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function oe(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Se(e)&&!n)for(let r=0;r<e.length;++r)oe(e[r],t,n);else t.push(e);return t}function ie(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function le(e){return 0===e.length}function ue(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ce(e){return e%1==0}function he(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function pe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function de(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return X(t),t}function fe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function me(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const o=()=>{if(e())return void r();a++;const i=t(a);null!=n&&a>=n?s():setTimeout(o,i)};o()}))}function ge(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function ye(e,t){const n=t.length;return re((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),re(e.every((e=>ce(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function be(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:ye(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=a){if(a[o]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==a[o]||a[o]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),a[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function xe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function we(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ve(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ke(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ie(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Se(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Te(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Ce(e){return"string"==typeof e||e instanceof String}function Ee(e){return"boolean"==typeof e}function $e(e){return"number"==typeof e}function Ae(e){return Array.isArray(e)?Ae(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":$e(e)?"float32":Ce(e)?"string":Ee(e)?"bool":"float32"}function Re(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Me(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function _e(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Fe(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=Fe(e+t*i,o,n,r)}return s}function De(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Fe(0,e,t,n)}function Oe(e,t){const n=Le(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Le(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Pe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return De(e,new Float32Array(n));if("int32"===t)return De(e,new Int32Array(n));if("bool"===t)return De(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ze(e){e.forEach((t=>{re(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Be(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function Ue(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Ve(e){return e&&e.then&&"function"==typeof e.then}class We{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=je,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ge().getBool("IS_TEST")||Ge().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ge().getBool("IS_TEST")||Ge().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ve(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function je(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Ge(){return qe}let He,qe=null;function Ke(){if(null==He){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}He=e}return He}function Xe(e,t){const n=function(){const e=Ke();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Ye="Abs",Ze="Acos",Je="Acosh",Qe="Add",et="AddN",tt="All",nt="Any",rt="ArgMax",st="ArgMin",at="Asin",ot="Asinh",it="Atan",lt="Atanh",ut="Atan2",ct="AvgPool",ht="AvgPoolGrad",pt="AvgPool3D",dt="AvgPool3DGrad",ft="BatchMatMul",mt="BatchToSpaceND",gt="Bincount",yt="BroadcastTo",bt="BroadcastArgs",xt="Cast",wt="Ceil",vt="ClipByValue",kt="Complex",It="ComplexAbs",St="Concat",Nt="Conv2D",Tt="Conv2DBackpropFilter",Ct="Conv2DBackpropInput",Et="Conv3D",$t="Conv3DBackpropFilterV2",At="Conv3DBackpropInputV2",Rt="Cos",Mt="Cosh",_t="Cumsum",Ft="CropAndResize",Dt="DenseBincount",Ot="DepthToSpace",Lt="DepthwiseConv2dNative",Pt="DepthwiseConv2dNativeBackpropFilter",zt="DepthwiseConv2dNativeBackpropInput",Bt="Diag",Ut="Dilation2D",Vt="Dilation2DBackpropInput",Wt="Dilation2DBackpropFilter",jt="RealDiv",Gt="Einsum",Ht="Elu",qt="EluGrad",Kt="Erf",Xt="Equal",Yt="Exp",Zt="ExpandDims",Jt="Expm1",Qt="FFT",en="Fill",tn="FlipLeftRight",nn="Floor",rn="FloorDiv",sn="FusedBatchNorm",an="GatherV2",on="GatherNd",ln="Greater",un="GreaterEqual",cn="Identity",hn="IFFT",pn="Imag",dn="IsFinite",fn="IsInf",mn="IsNan",gn="LeakyRelu",yn="Less",bn="LessEqual",xn="LinSpace",wn="Log",vn="Log1p",kn="LogicalAnd",In="LogicalNot",Sn="LogicalOr",Nn="LogSoftmax",Tn="LRN",Cn="LRNGrad",En="Max",$n="Maximum",An="MaxPool",Rn="MaxPoolGrad",Mn="MaxPool3D",_n="MaxPool3DGrad",Fn="MaxPoolWithArgmax",Dn="Mean",On="Min",Ln="Minimum",Pn="MirrorPad",zn="Mod",Bn="Multinomial",Un="Multiply",Vn="Neg",Wn="NotEqual",jn="NonMaxSuppressionV3",Gn="NonMaxSuppressionV4",Hn="NonMaxSuppressionV5",qn="OnesLike",Kn="OneHot",Xn="Pack",Yn="PadV2",Zn="Pool",Jn="Pow",Qn="Prelu",er="Prod",tr="Range",nr="Real",rr="Reciprocal",sr="Relu",ar="Reshape",or="ResizeNearestNeighbor",ir="ResizeNearestNeighborGrad",lr="ResizeBilinear",ur="ResizeBilinearGrad",cr="Relu6",hr="Reverse",pr="Round",dr="Rsqrt",fr="ScatterNd",mr="Select",gr="Selu",yr="Slice",br="Sin",xr="Sinh",wr="Sign",vr="Sigmoid",kr="Softplus",Ir="Sqrt",Sr="Sum",Nr="SpaceToBatchND",Tr="SplitV",Cr="Softmax",Er="SparseFillEmptyRows",$r="SparseReshape",Ar="SparseSegmentMean",Rr="SparseSegmentSum",Mr="SparseToDense",_r="SquaredDifference",Fr="Square",Dr="StridedSlice",Or="StringNGrams",Lr="StringSplit",Pr="StringToHashBucketFast",zr="Sub",Br="Tan",Ur="Tanh",Vr="Tile",Wr="TopK",jr="Transform",Gr="Transpose",Hr="Unique",qr="Unpack",Kr="UnsortedSegmentSum",Xr="ZerosLike",Yr="Step",Zr="FromPixels",Jr="RotateWithOffset",Qr="_FusedMatMul",es="FusedConv2D",ts="FusedDepthwiseConv2D";function ns(...e){Ge().getBool("IS_TEST")||Ge().getBool("PROD")||console.warn(...e)}function rs(...e){Ge().getBool("IS_TEST")||Ge().getBool("PROD")||console.log(...e)}const ss=Xe("kernelRegistry",(()=>new Map)),as=Xe("gradRegistry",(()=>new Map));function os(e,t){const n=fs(e,t);return ss.get(n)}function is(e){return as.get(e)}function ls(e){const t=ss.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function us(e){const{kernelName:t,backendName:n}=e,r=fs(t,n);ss.has(r)&&ns(`The kernel '${t}' for backend '${n}' is already registered`),ss.set(r,e)}function cs(e){const{kernelName:t}=e;as.has(t)&&Ge().getBool("DEBUG")&&ns(`Overriding the gradient for '${t}'`),as.set(t,e)}function hs(e,t){const n=fs(e,t);if(!ss.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ss.delete(n)}function ps(e){if(!as.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);as.delete(e)}function ds(e,t){ls(e).forEach((e=>{us(Object.assign({},e,{backendName:t}))}))}function fs(e,t){return`${t}_${e}`}var ms=n(3720);const gs=n.n(ms)()||ms;function ys(e){return gs.fromString(e,!0,16)}const bs=ys("c3a5c85c97cb3127"),xs=ys("b492b66fbe98f273"),ws=ys("9ae16a3b2f90404f");function vs(e){return e.xor(e.shru(47))}function ks(e,t,n){const r=e.slice(t,t+n);return gs.fromBytes(Array.from(r),!0,!0)}function Is(e,t){return ks(e,t,8)}function Ss(e,t){return ks(e,t,4)}function Ns(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ts(e,t,n=ys("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Cs(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Ns(a.add(s).add(r),21);const o=s;return s=(s=s.add(t)).add(n),a=a.add(Ns(s,44)),[s.add(r),a.add(o)]}(Is(e,t),Is(e,t+8),Is(e,t+16),Is(e,t+24),n,r)}function Es(e,t=e.length){const n=gs.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=ws.add(2*t),r=Is(e,0).add(ws),s=Is(e,t-8);return Ts(Ns(s,37).mul(n).add(r),Ns(r,25).add(s).mul(n),n)}if(t>=4){const n=ws.add(2*t);return Ts(Ss(e,0).shl(3).add(t),Ss(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return vs(ws.mul(n).xor(bs.mul(r))).mul(ws)}return ws}(e,t):function(e,t=e.length){const n=ws.add(2*t),r=Is(e,0).mul(xs),s=Is(e,8),a=Is(e,t-8).mul(n),o=Is(e,t-16).mul(ws);return Ts(Ns(r.add(s),43).add(Ns(a,30)).add(o),r.add(Ns(s.add(ws),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=ws.add(2*t),r=Is(e,0).mul(ws),s=Is(e,8),a=Is(e,t-8).mul(n),o=Is(e,t-16).mul(ws),i=Ns(r.add(s),43).add(Ns(a,30)).add(o),l=Ts(i,r.add(Ns(s.add(ws),18)).add(a),n),u=Is(e,16).mul(n),c=Is(e,24),h=i.add(Is(e,t-32)).mul(n),p=l.add(Is(e,t-24)).mul(n);return Ts(Ns(u.add(c),43).add(Ns(h,30)).add(p),u.add(Ns(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(xs).add(113),a=vs(s.mul(ws).add(113)).mul(ws),o=[gs.UZERO,gs.UZERO],i=[gs.UZERO,gs.UZERO];r=r.mul(ws).add(Is(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Ns(r.add(s).add(o[0]).add(Is(e,l+8)),37).mul(xs),s=Ns(s.add(o[1]).add(Is(e,l+48)),42).mul(xs),r=r.xor(i[1]),s=s.add(o[0]).add(Is(e,l+40)),a=Ns(a.add(i[0]),33).mul(xs),o=Cs(e,l,o[1].mul(xs),r.add(i[0])),i=Cs(e,l+32,a.add(i[1]),s.add(Is(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=xs.add(a.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),r=Ns(r.add(s).add(o[0]).add(Is(e,l+8)),37).mul(h),s=Ns(s.add(o[1]).add(Is(e,l+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(o[0].mul(9).add(Is(e,l+40))),a=Ns(a.add(i[0]),33).mul(h),o=Cs(e,l,o[1].mul(h),r.add(i[0])),i=Cs(e,l+32,a.add(i[1]),s.add(Is(e,l+16))),[a,r]=[r,a],Ts(Ts(o[0],i[0],h).add(vs(s).mul(bs)).add(a),Ts(o[1],i[1],h).add(r),h)}function $s(e,t){return"string"===t?_s(e):As([e],t)}function As(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=oe(e)),Ge().getBool("DEBUG")&&ve(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Rs(){return Ge().platform.now()}function Ms(e,t){return Ge().platform.fetch(e,t)}function _s(e,t="utf-8"){return t=t||"utf-8",Ge().platform.encode(e,t)}function Fs(e,t="utf-8"){return t=t||"utf-8",Ge().platform.decode(e,t)}class Ds{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ls)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const o=Rs();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Rs()-o})}if(Ge().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<r.length;i++){const t=r[i];t.data().then((n=>{Os(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Os(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class Ls{logKernelProfile(e,t,n,r,s,a){const o="number"==typeof r?fe(`${r}ms`,9):r.error,i=fe(e,25),l=t.rank,u=t.size,c=fe(t.shape.toString(),14);let h="";for(const p in s){const e=s[p];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${p}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${o}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ps(e,t,n,r){const s=_e(t),a=function(e,t,n,r){const s=ie(t),a=r[r.length-1],o=new Array(a).fill(0),i=t.length,l="complex64"===n?Vs(e):e;if(i>1)for(let u=0;u<s/a;u++){const e=u*a;for(let t=0;t<a;t++)o[t]=Math.max(o[t],zs(l[e+t],0,n).length)}return o}(e,t,n,s),o=t.length,i=Us(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map((e=>"    "+e)).join("\n")),l.join("\n")}function zs(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ce(e)?`'${e}'`:"bool"===n?Bs(e):parseFloat(e.toFixed(7)).toString(),fe(r,t)}function Bs(e){return 0===e?"false":"true"}function Us(e,t,n,r,s,a=!0){const o="complex64"===n?2:1,i=t[0],l=t.length;if(0===l)return"complex64"===n?[zs(Vs(e)[0],0,n)]:"bool"===n?[Bs(e[0])]:[e[0].toString()];if(1===l){if(i>20){const t=3*o;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((i-3)*o,i*o));return"complex64"===n&&(r=Vs(r),a=Vs(a)),["["+r.map(((e,t)=>zs(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>zs(e,s[i-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Vs(e):Array.from(e)).map(((e,t)=>zs(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*o,p=[];if(i>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;p.push(...Us(e.slice(r,a),u,n,c,s,!1))}p.push("...");for(let t=i-3;t<i;t++){const r=t*h,a=r+h;p.push(...Us(e.slice(r,a),u,n,c,s,t===i-1))}}else for(let m=0;m<i;m++){const t=m*h,r=t+h;p.push(...Us(e.slice(t,r),u,n,c,s,m===i-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+d;let f=",\n";for(let m=2;m<l;m++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Vs(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Ws{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ie(e),null!=n){const e=n.length;re(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||we(t,this.size),this.strides=_e(e)}set(e,...t){0===t.length&&(t=[0]),re(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return js().makeTensor(this.values,this.shape,this.dtype)}}let js=null,Gs=null,Hs=null;class qs{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ie(e),this.strides=_e(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Gs.buffer(this.shape,this.dtype,e)}bufferSync(){return Gs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return De(this.shape,e,"complex64"===this.dtype)}arraySync(){return De(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=js().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Fs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),js().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=js().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Fs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await js().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(js().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Gs.print(this,e)}clone(){return this.throwIfDisposed(),Gs.clone(this)}toString(e=!1){return Ps(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Gs.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),js().makeVariable(this,e,t,n)}}function Ks(){return Xe("Tensor",(()=>qs))}Object.defineProperty(qs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ks();class Xs extends qs{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ue(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);js().disposeTensor(this),this.dataId=e.dataId,js().incRef(this,null)}dispose(){js().disposeVariable(this),this.isDisposedInternal=!0}}var Ys,Zs,Js,Qs,ea;Object.defineProperty(Xs,Symbol.hasInstance,{value:e=>e instanceof qs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ys||(Ys={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Zs||(Zs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Js||(Js={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Qs||(Qs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ea||(ea={}));const ta={float32:Qs,int32:Zs,bool:Js,complex64:ea};function na(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ta[e][t]}function ra(e){return na(e,"int32")}function sa(e,t){if(e.dtype===t.dtype)return[e,t];const n=na(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function aa(e,t){re(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function oa(e,t){return t.some((t=>t.id===e.id))}function ia(e){const t=[];return la(e,t,new Set),t}function la(e,t,n){if(null==e)return;if(e instanceof qs)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),la(e,t,n))}}function ua(e){return null!=e.kernelName}class ca{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ha{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ca}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ns(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ds(this.backendInstance),!0}setupRegisteredKernels(){ls(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ls(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof q||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ns(`Initialization of backend ${e} failed`),ns(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return ns(`Initialization of backend ${e} failed`),ns(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ha.nextTensorId++}nextVariableId(){return ha.nextVariableId++}clone(e){const t=da.runKernel(cn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return da.runKernel(xt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==os(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ua(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ua(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=os(t,this.backendName);re(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();i=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const u=o.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=ua(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=o()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=is(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(re(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return a.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&Ce(e[0])&&(s=e.map((e=>_s(e))));const a=r.write(s,t,n),o=new qs(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(a),t=Te(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const s=new qs(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Xs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Xs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=is(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Le(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ia(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(re(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));re(s instanceof qs,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],a=n.inputs;for(const e in a){const o=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[o.id]){n.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[n.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&o[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Oe(ie(e),"float32");return da.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],o=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const t in a.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const o=a.inputs[t];if(!ue(s.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=s;else{const t=e[o.id];e[o.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),fa);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return re(Re(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;re(t.every((e=>e instanceof qs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),re(n.value instanceof qs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),re(Re(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];re(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),re(a.every((e=>e instanceof qs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Rs(),n=await this.backend.time(e);return n.wallMs=Rs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ca;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function pa(){const e=Ke();if(null==e._tfengine){const t=new We(e);e._tfengine=new ha(t)}var t;return t=e._tfengine.ENV,qe=t,js=()=>e._tfengine,e._tfengine}ha.nextTensorId=0,ha.nextVariableId=0;const da=pa();function fa(e,t){const n={a:e,b:t};return da.runKernel(Qe,n)}let ma;function ga(e){ma=e}function ya(e){if(void 0!==ma)return ma;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ba(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const xa=Ge();function wa(e,t){let n=e;if(Se(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Se(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ge().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&va(e,r,[]),r}function va(e,t,n){if(n=n||[],!Array.isArray(e)&&!Se(e))return void re(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));re(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),re(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)va(e[s],r,n.concat(s))}function ka(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ia(e,t,n,r="numeric"){if(e instanceof qs)return ka(r,e.dtype,t,n),e;let s=Ae(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),ka(r,s,t,n),null==e||!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=wa(e,s);Se(e)||Array.isArray(e)||(e=[e]);const o="string"!==s?As(e,s):oe(e,[],!0);return da.makeTensor(o,a,s)}function Sa(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Ia(e,`${t}[${s}]`,n,r)))}xa.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),xa.registerFlag("IS_BROWSER",(()=>ba())),xa.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),xa.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),xa.registerFlag("PROD",(()=>!1)),xa.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>xa.getBool("DEBUG"))),xa.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),xa.registerFlag("IS_TEST",(()=>!1)),xa.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),xa.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Na="__op";function Ta(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Na;const s=(...e)=>{da.startScope(n);try{const t=r(...e);return Ve(t)&&console.error("Cannot return a Promise inside of tidy."),da.endScope(t),t}catch(e){throw da.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Ca=Ta({complex_:function(e,t){const n=Ia(e,"real","complex"),r=Ia(t,"imag","complex");se(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return da.runKernel(kt,s)}});function Ea(e,t,n,r){if(null==r&&(r=Ae(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ze(t);const e=ie(t),r=ie(n);re(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==ie(t.slice(s));re(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Se(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?As(e,r):oe(e,[],!0),da.makeTensor(e,t,r)}function $a(e,t,n){return Ea(e,t,wa(e,n),n)}const Aa={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ra(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const o=s[a],i=Array.isArray(e)?e[a].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const l={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=4,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(l.group=t),n.push(l)}return{data:_a(await Promise.all(r)),specs:n}}function Ma(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,o=a.dtype,i=a.shape,l=ie(i);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=Aa[n.dtype],c=e.slice(s,s+l*i),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Ua()),u=r(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}s+=l*i}else if("string"===o){const t=ie(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=Aa[o],a=e.slice(s,s+l*r);if("float32"===o)u=new Float32Array(a);else if("int32"===o)u=new Int32Array(a);else if("bool"===o)u=new Uint8Array(a);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=$a(e,i,"float32"),o=$a(r,i,"float32");n[t]=Ca(s,o),s.dispose(),o.dispose()}}s+=l*r}"complex64"!==o&&(n[t]=$a(u,i,o))}return n}function _a(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Fa="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Da(e){return Fa?Buffer.byteLength(e):new Blob([e]).size}function Oa(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function La(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Pa(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function za(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Ba(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Da(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Da(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ua(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let o=0;o<r.length;o++){const s=r[o],i=e[n[s>>10]+(1023&s)]+t[s>>10];a[o]=i}return new Float32Array(s)}}class Va{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Va.instance&&(Va.instance=new Va),Va.instance}static registerSaveRouter(e){Va.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Va.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Va.getHandlers(e,"save")}static getLoadHandlers(e,t){return Va.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Va.getInstance().loadRouters:Va.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Wa=e=>Va.registerSaveRouter(e),ja=e=>Va.registerLoadRouter(e),Ga=e=>Va.getSaveHandlers(e),Ha=(e,t)=>Va.getLoadHandlers(e,t),qa="tensorflowjs",Ka="models_store",Xa="model_info_store";function Ya(){if(!Ge().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Za(e){const t=e.result;t.createObjectStore(Ka,{keyPath:"modelPath"}),t.createObjectStore(Xa,{keyPath:"modelPath"})}class Ja{constructor(e){if(this.indexedDB=Ya(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(qa,1);r.onupgradeneeded=()=>Za(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Ka,"readonly"),r=t.objectStore(Ka).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Ba(t),a=s.transaction(Xa,"readwrite");let o=a.objectStore(Xa);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;i.onsuccess=()=>{l=s.transaction(Ka,"readwrite");const i=l.objectStore(Ka).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=a.objectStore(Xa);const t=o.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(i.error)),t.onerror=e=>(s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Ja.URL_SCHEME="indexeddb://";const Qa=e=>{return Ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ja.URL_SCHEME)?(t=e.slice(Ja.URL_SCHEME.length),new Ja(t)):null;var t};Va.registerSaveRouter(Qa),Va.registerLoadRouter(Qa);class eo{constructor(){this.indexedDB=Ya()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(qa,1);n.onupgradeneeded=()=>Za(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Xa,"readonly"),a=s.objectStore(Xa).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ja.URL_SCHEME)?t.slice(Ja.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(qa,1);r.onupgradeneeded=()=>Za(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Xa,"readwrite"),o=a.objectStore(Xa),i=o.get(e);let l;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),a=()=>{l=s.transaction(Ka,"readwrite");const r=l.objectStore(Ka).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const to="/",no="tensorflowjs_models",ro="info",so="model_topology",ao="weight_specs",oo="weight_data",io="model_metadata";function lo(e){return{info:[no,e,ro].join(to),topology:[no,e,so].join(to),weightSpecs:[no,e,ao].join(to),weightData:[no,e,oo].join(to),modelMetadata:[no,e,io].join(to)}}function uo(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function co(e){const t=e.split(to);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(to)}class ho{constructor(e){if(!Ge().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=lo(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ba(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Fa)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw uo(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Fa){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(a),t}}ho.URL_SCHEME="localstorage://";const po=e=>{return Ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ho.URL_SCHEME)?(t=e.slice(ho.URL_SCHEME.length),new ho(t)):null;var t};Va.registerSaveRouter(po),Va.registerLoadRouter(po);class fo{constructor(){re(Ge().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),re("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=no+to,n=to+ro;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[co(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=lo(e=(t=e).startsWith(ho.URL_SCHEME)?t.slice(ho.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return uo(n),r}}const mo="://";class go{constructor(){this.managers={}}static getInstance(){return null==go.instance&&(go.instance=new go),go.instance}static registerManager(e,t){re(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(mo)&&(e=e.slice(0,e.indexOf(mo))),re(e.length>0,(()=>"scheme must not be an empty string."));const n=go.getInstance();re(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function yo(e){if(-1===e.indexOf(mo))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${go.getSchemes().join(",")}`);return{scheme:e.split(mo)[0],path:e.split(mo)[1]}}async function bo(e,t,n=!1){re(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Va.getLoadHandlers(e);re(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),re(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=Va.getSaveHandlers(t);re(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),re(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=a[0],i=yo(e).scheme,l=yo(e).path,u=i===yo(e).scheme,c=await s.load();n&&u&&await go.getManager(i).removeModel(l);const h=await o.save(c);return n&&!u&&await go.getManager(i).removeModel(l),h.modelArtifactsInfo}async function xo(){const e=go.getSchemes(),t={};for(const n of e){const e=await go.getManager(n).listModels();for(const r in e)t[n+mo+r]=e[r]}return t}async function wo(e){const t=yo(e);return go.getManager(t.scheme).removeModel(t.path)}async function vo(e,t){return bo(e,t,!1)}async function ko(e,t){return bo(e,t,!0)}class Io{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Ge().get("IS_BROWSER")){Ge().setPlatform("browser",new Io);try{go.registerManager(ho.URL_SCHEME,new fo)}catch(e){}try{go.registerManager(Ja.URL_SCHEME,new eo)}catch(e){}}let So;function No(e,t="float32",n){return t=t||"float32",ze(e),new Ws(e,t,n)}Ge().get("IS_NODE")&&Ge().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ge().global.fetch?Ge().global.fetch(e,t):(null==So&&(So=n(8352)),So(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const To=Ta({cast_:function(e,t){const n=Ia(e,"x","cast");if(!ke(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return da.runKernel(xt,r,s)}}),Co=Ta({clone_:function(e){const t={x:Ia(e,"x","clone","string_or_numeric")};return da.runKernel(cn,t)}});function Eo(e,t=!1){console.log(e.toString(t))}function $o(e){return new Promise((e=>setTimeout(e))).then(e)}pa(),Gs={buffer:No,cast:To,clone:Co,print:Eo};class Ao{constructor(e){if(!Ge().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ao.URL_SCHEME)&&(e=e.slice(Ao.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Pa(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await $o((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await $o((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ba(e)}}}}Ao.URL_SCHEME="downloads://";class Ro{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=za(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,Oa(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>La(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=La(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Mo(e){return new Ro(e)}function _o(e,t,n,r){!function(e){re(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){re(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),re(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),re(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const o=n+ ++s/e.length*(r-n);return t(o),a})),a))))}async function Fo(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ge().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await _o(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await _o(s,t.onProgress,.5,1)}async function Do(e,t="",n,r){return Oo((e=>Fo(e,{requestInit:r})))(e,t,n)}function Oo(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Aa[l]*ie(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=u}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let p=0;return l.forEach((e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[p+t].byteLength;const s=new ArrayBuffer(r),o=new Uint8Array(s);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[p+t]);o.set(e,i),i+=e.byteLength}a[e].forEach((e=>{const t=Ma(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),p+=n})),h}}Va.registerSaveRouter((e=>Ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ao.URL_SCHEME)?function(e="model"){return new Ao(e)}(e.slice(Ao.URL_SCHEME.length)):null));class Lo{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(re("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ge().platform.fetch,re(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&re(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Pa(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ba(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return za(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const l of e)a.push(...l.weights);const o=[],i=[];for(const l of e)for(const e of l.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(s+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[a,Oa(await Fo(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Po(e){return null!=e.match(Lo.URL_SCHEME_REGEX)}Lo.URL_SCHEME_REGEX=/^https?:\/\//;const zo=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Po(e))):Po(e),n)return Bo(e,t)}return null};function Bo(e,t){return new Lo(e,t)}function Uo(e,t){return Bo(e,t)}Va.registerSaveRouter(zo),Va.registerLoadRouter(zo);class Vo{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Wo{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function jo(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Vo(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Vo({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Vo({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Go(e){return new Wo(e)}const Ho=Ta({matMul_:function(e,t,n=!1,r=!1){let s=Ia(e,"a","matMul"),a=Ia(t,"b","matMul");[s,a]=sa(s,a);const o={a:s,b:a},i={transposeA:n,transposeB:r};return da.runKernel(ft,o,i)}}),qo=Ta({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Ia(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return da.runKernel(Kn,s,a)}}),Ko=Ta({transpose_:function(e,t){const n=Ia(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{re(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return da.runKernel(Gr,r,s)}}),Xo=Ta({confusionMatrix_:function(e,t,n){const r=Ia(e,"labels","confusionMatrix"),s=Ia(t,"predictions","confusionMatrix");re(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),re(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),re(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),re(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),re(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=qo(To(r,"int32"),n),o=qo(To(s,"int32"),n),i=Ko(a),l=Ho(i,o);return To(l,"int32")}});function Yo(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&1===o&&r.unshift(a)}return r}function Zo(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,o=t[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function Jo(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}function Qo(e,t,n){if(ae(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=wa(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ea(e,t,r,n)}let ei;function ti(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=os(Zr,da.backendName)){const n={pixels:e},r={numChannels:t};return da.runKernel(Zr,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(o)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||i){if(null==ei)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");ei=new OffscreenCanvas(1,1).getContext("2d")}else ei=document.createElement("canvas").getContext("2d");ei.canvas.width=l,ei.canvas.height=u,ei.drawImage(e,0,0,l,u),c=ei.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Qo(h,[u,l,t],"int32")}async function ni(e,t=3){let n=null;if(Ge().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ti(n,t)}async function ri(e,t){let n=Ia(e,"img","toPixels");if(!(e instanceof qs)){const e=n;n=To(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=o[u*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const si=Ta({fromPixels_:ti});function ai(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ie(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let o=1;for(let h=0;h<s.length-1;++h)o*=s[h];const i=e.shape,l=s.slice();l.pop();let u=1;for(let h=a;h<n;++h)u*=i[h],l.push(i[h]);const c=[..._e(e.shape).map((e=>e/u)),1].slice(0,a);return[l,o,u,c]}function oi(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let o=0;o<s;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==e[o+r])throw new Error(a+` updates.shape[${o+s}] (${n.shape[o+s]}) != shape[${o+s}] (${e[o+s]})`)}function ii(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}oi(n,t,e)}function li(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let o=1;for(let l=s;l<a;++l)o*=n[l];const i=s<1?1:s;return{sliceRank:s,numUpdates:ie(t.shape)/i,sliceSize:o,strides:[..._e(n.slice(0,s)),1],outputSize:ie(n)}}function ui(e,t,n){const r=e.shape.length;re(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),re(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)re(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function ci(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function hi(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function pi(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function di(e,t,n){return n<=e?n:n-(t-1)}function fi(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function mi(e,t,n,r,s,a,o,i,l){const u=e.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=gi(o,l,u,r,e),h=yi(i,l,u,s,e),p=pi(a,l,u,e)}else for(let d=0;d<u;d++)c[d]=xi(o,r,a,e,d,l),h[d]=wi(i,s,a,e,d,l),p[d]=bi(a,d,l);return{begin:c,end:h,strides:p}}function gi(e,t,n,r,s){const a=[...s],o=fi(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{const s=di(t,n,i);let o=r[s];e&1<<s&&(o=0),a[i]=o}return a}function yi(e,t,n,r,s){const a=[...s],o=fi(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{const s=di(t,n,i);let o=r[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),a[i]=o}for(let i=0;i<a.length;i++){const e=s[i];a[i]<0&&(a[i]+=e),a[i]=Z(0,a[i],s[i])}return a}function bi(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function xi(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=Z(0,o,l-1),o}function wi(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=i>0?Z(0,o,l):Z(-1,o,l-1),o}function vi(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function ki(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ii(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{re(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(re(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Si(e,t,n,r,s,a,o,i,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)c&&0!=(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===p.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(p.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const r=[p.beginMask&1<<b,p.endMask&1<<b],s=[p.strides[b]>0?0:-1,p.strides[b]>0?n:n-1];if(t&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[b];const a=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if(t){const e=p.begin[b]<0?n+p.begin[b]:p.begin[b];if(p.begin[b]=e,p.end[b]=p.begin[b]+1,e<0||e>=n)throw Error(`slice index ${p.begin[b]} of dimension ${b} out of bounds.`)}else p.begin[b]=Ni(p.begin[b],0,p.strides[b],n,r,s),p.end[b]=Ni(p.end[b],1,p.strides[b],n,r,s);const e=1===p.strides[b]&&0===p.begin[b]&&p.end[b]===n;d=d&&e,f=f&&(0===b&&1===p.strides[b]||e)}else d=d&&1===p.strides[b]&&a,f=f&&(0===b&&1===p.strides[b]||a);let o,i=!1;if(p.beginValid&&p.endValid?(o=p.end[b]-p.begin[b],i=!0):t?(o=1,i=!0):a&&n>=0&&(o=p.strides[b]<0?-n:n,i=!0),i){let e;e=0===o||o<0!=p.strides[b]<0?0:Math.trunc(o/p.strides[b])+(o%p.strides[b]!=0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){const e=p.finalShapeGatherIndices[b];e>=0?y.push(g[e]):-2===e&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Ni(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}class Ti{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ci{constructor(){this.classNameMap={}}static getMap(){return null==Ci.instance&&(Ci.instance=new Ci),Ci.instance}static register(e){Ci.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ei(e){re(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),re("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),re(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ci.register(e)}const $i=.1;function Ai(e,t,n){return null==n&&(n=Ri()),Mi(e,t,((e,t)=>Oi(e,t,n)))}function Ri(){return 32===da.backend.floatPrecision()?.001:$i}function Mi(e,t,n){let r=!0;if((Se(e)||Se(t))&&(r=!1),Se(e)&&Se(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=wa(e),r=wa(t);if(!ue(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Se(e)?e:oe(e),a=Se(t)?t:oe(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let o=0;o<a.length;++o){const e=s[o],t=a[o];if(!n(e,t))throw new Error(`Arrays differ: actual[${o}] = ${e}, expected[${o}] = ${t}.\nActual:   ${s}.\nExpected: ${a}.`)}}function _i(e,t){e().then((()=>t.fail()),(()=>t()))}function Fi(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ce(e)||Ce(e[0])||Ce(t)||Ce(t[0])?Mi(e,n,((e,t)=>e==t)):Mi(e,t,((e,t)=>Oi(e,t,0)))}function Di(e,t,n){if(null==n&&(n=Ri()),!Oi(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Oi(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Li(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Pi(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let s=0;s<r.length;s++)if(n[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${n[s]} instead`)}function zi(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?zi(n):e[t]=_s(n)}return e}const Bi="3.13.0";function Ui(){Ge().set("PROD",!0)}function Vi(){Ge().set("DEBUG",!0)}function Wi(){Ge().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ji(e){Ge().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Gi(){da.disposeVariables()}function Hi(){return da}function qi(){return da.memory()}function Ki(e){return da.profile(e)}function Xi(e,t){return da.tidy(e,t)}function Yi(e){ia(e).forEach((e=>e.dispose()))}function Zi(e){return da.keep(e)}function Ji(e){return da.time(e)}function Qi(e){return da.setBackend(e)}function el(){return da.ready()}function tl(){return da.backendName}function nl(e){da.removeBackend(e)}function rl(e){return da.findBackend(e)}function sl(e){return da.findBackendFactory(e)}function al(e,t,n=1){return da.registerBackend(e,t,n)}function ol(){return da.backend}function il(e,t){Ge().setPlatform(e,t)}Hs=ji;const ll=Ta({add_:function(e,t){let n=Ia(e,"a","add"),r=Ia(t,"b","add");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(Qe,s)}}),ul=Ta({floorDiv_:function(e,t){let n=Ia(e,"a","floorDiv"),r=Ia(t,"b","floorDiv");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(rn,s)}}),cl=Ta({div_:function(e,t){let n=Ia(e,"a","div"),r=Ia(t,"b","div");if([n,r]=sa(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ul(n,r);const s={a:n,b:r};return da.runKernel(jt,s,{})}}),hl=Ta({mul_:function(e,t){let n=Ia(e,"a","mul"),r=Ia(t,"b","mul");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(Un,s)}}),pl=Ta({sqrt_:function(e){const t={x:Ia(e,"x","sqrt","float32")};return da.runKernel(Ir,t)}}),dl=Ta({square_:function(e){const t=Ia(e,"x","square");return da.runKernel("Square",{x:t},{})}}),fl=Ta({zerosLike_:function(e){const t={x:Ia(e,"x","zerosLike")};return da.runKernel(Xr,t)}});function ml(e){return re(Re(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Ia(t,"x","tf.grad","string_or_numeric"),s=null!=n?Ia(n,"dy","tf.grad"):null;return da.tidy((()=>{const{value:t,grads:n}=da.gradients((()=>e(r)),[r],s);return null!=s&&se(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),vl(n),n[0]}))}}function gl(e){return re(Re(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{re(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Sa(t,"args","tf.grads","string_or_numeric"),s=null!=n?Ia(n,"dy","tf.grads"):null;return da.tidy((()=>{const{value:t,grads:n}=da.gradients((()=>e(...r)),r,s);return null!=s&&se(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vl(n),n}))}}function yl(e){return re(Re(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{re(t instanceof qs,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),re(null==n||n instanceof qs,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=da.gradients((()=>e(t)),[t],n);return vl(r),{grad:r[0],value:s}}}function bl(e){return re(Re(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{re(Array.isArray(t)&&t.every((e=>e instanceof qs)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),re(null==n||n instanceof qs,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=da.gradients((()=>e(...t)),t,n);return null!=n&&se(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vl(r.grads),r}}function xl(e,t){re(Re(e),(()=>"The f passed in variableGrads(f) must be a function")),re(null==t||Array.isArray(t)&&t.every((e=>e instanceof Xs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in da.registeredVariables)t.push(da.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;re((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:o}=da.gradients(e,t,null,!0);re(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),re(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=r&&r.forEach((e=>i[e.name]=null)),{value:a,grads:i}}function wl(e){return da.customGrad(e)}function vl(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function kl(e,t){if((Se(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Se(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ea(e,[],[],t)}class Il extends Ti{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Yi(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return xl(e,t)}dispose(){null!=this.iterations_&&Yi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:kl(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Il,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Sl extends Il{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=da.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=da.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Xi((()=>fl(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Xi((()=>fl(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Xi((()=>{const e=ll(hl(a,this.rho),hl(dl(s),1-this.rho)),t=hl(cl(pl(ll(o,this.epsilon)),pl(ll(a,this.epsilon))),s),n=ll(hl(o,this.rho),hl(dl(t),1-this.rho));a.assign(e),o.assign(n);const i=ll(hl(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Yi(this.accumulatedGrads.map((e=>e.variable))),Yi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Nl(e,t,n){const r={shape:e,value:t,dtype:n};return da.runKernel(en,{},r)}Sl.className="Adadelta",Ei(Sl);class Tl extends Il{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=da.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Xi((()=>Nl(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Xi((()=>{const e=ll(a,dl(s));a.assign(e);const t=ll(hl(cl(s,pl(ll(e,da.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Yi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Tl.className="Adagrad",Ei(Tl);const Cl=Ta({pow_:function(e,t){let n=Ia(e,"base","pow"),r=Ia(t,"exp","pow");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(Jn,s)}}),El=Ta({sub_:function(e,t){let n=Ia(e,"a","sub"),r=Ia(t,"b","sub");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(zr,s)}});class $l extends Il{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Xi((()=>{this.accBeta1=kl(t).variable(),this.accBeta2=kl(n).variable()})),null==r&&(this.epsilon=da.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Xi((()=>{const n=El(1,this.accBeta1),r=El(1,this.accBeta2);t.forEach(((t,s)=>{const a=da.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Xi((()=>fl(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Xi((()=>fl(a).variable(!1)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=ll(hl(i,this.beta1),hl(o,1-this.beta1)),c=ll(hl(l,this.beta2),hl(dl(o),1-this.beta2)),h=cl(u,n),p=cl(c,r);i.assign(u),l.assign(c);const d=ll(hl(cl(h,ll(pl(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(hl(this.accBeta1,this.beta1)),this.accBeta2.assign(hl(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Yi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Yi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Xi((()=>{this.accBeta1.assign(Cl(this.beta1,this.iterations_+1)),this.accBeta2.assign(Cl(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}$l.className="Adam",Ei($l);const Al=Ta({abs_:function(e){const t=Ia(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return da.runKernel(It,e)}{const e={x:t};return da.runKernel(Ye,e)}}}),Rl=Ta({maximum_:function(e,t){let n=Ia(e,"a","maximum"),r=Ia(t,"b","maximum");[n,r]=sa(n,r),"bool"===n.dtype&&(n=To(n,"int32"),r=To(r,"int32")),Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel($n,s)}});class Ml extends Il{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Xi((()=>{this.iteration=kl(0).variable(),this.accBeta1=kl(t).variable()})),null==r&&(this.epsilon=da.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Xi((()=>{const n=El(1,this.accBeta1),r=cl(-this.learningRate,ll(hl(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=da.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:fl(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:fl(a).variable(!1)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=ll(hl(i,this.beta1),hl(o,1-this.beta1)),c=hl(l,this.beta2),h=Al(o),p=Rl(c,h);i.assign(u),l.assign(p);const d=ll(hl(cl(r,n),cl(u,ll(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(ll(this.iteration,1)),this.accBeta1.assign(hl(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Yi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Yi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ml.className="Adamax",Ei(Ml);class _l extends Il{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=da.registeredVariables[t];Xi((()=>{const e=ll(hl(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Zi(kl(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}_l.className="SGD",Ei(_l);class Fl extends _l{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=kl(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=da.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Xi((()=>fl(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Xi((()=>{let e;const t=ll(hl(this.m,s),a);e=this.useNesterov?ll(hl(this.c,ll(a,hl(t,this.m))),r):ll(hl(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Yi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Fl.className="Momentum",Ei(Fl);class Dl extends Il{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=da.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=da.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Xi((()=>fl(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Xi((()=>fl(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Xi((()=>fl(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Xi((()=>{const e=ll(hl(o,this.decay),hl(dl(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=ll(hl(t,this.decay),hl(a,1-this.decay)),l=cl(hl(a,this.learningRate),pl(El(e,ll(dl(s),this.epsilon)))),u=ll(hl(i,this.momentum),l);o.assign(e),t.assign(s),i.assign(u);const c=El(r,u);r.assign(c)}else{const e=ll(hl(o,this.decay),hl(dl(a),1-this.decay)),t=ll(hl(i,this.momentum),cl(hl(a,this.learningRate),pl(ll(e,this.epsilon))));o.assign(e),i.assign(t);const n=El(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Yi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Yi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Yi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Dl.className="RMSProp",Ei(Dl);class Ol{static sgd(e){return new _l(e)}static momentum(e,t,n=!1){return new Fl(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Dl(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new $l(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Sl(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Ml(e,t,n,r,s)}static adagrad(e,t=.1){return new Tl(e,t)}}const Ll=Ta({acos_:function(e){const t={x:Ia(e,"x","acos")};return da.runKernel(Ze,t)}}),Pl=Ta({acosh_:function(e){const t={x:Ia(e,"x","acosh")};return da.runKernel(Je,t)}}),zl=Ta({addN_:function(e){re(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),re(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ia(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ue(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return da.runKernel(et,r)}}),Bl=Ta({all_:function(e,t=null,n=!1){const r={x:Ia(e,"x","all","bool")},s={axis:t,keepDims:n};return da.runKernel(tt,r,s)}}),Ul=Ta({any_:function(e,t=null,n=!1){const r={x:Ia(e,"x","any","bool")},s={axis:t,keepDims:n};return da.runKernel(nt,r,s)}}),Vl=Ta({argMax_:function(e,t=0){const n={x:Ia(e,"x","argMax")},r={axis:t};return da.runKernel(rt,n,r)}}),Wl=Ta({argMin_:function(e,t=0){const n={x:Ia(e,"x","argMin")},r={axis:t};return da.runKernel(st,n,r)}}),jl=Ta({asin_:function(e){const t={x:Ia(e,"x","asin")};return da.runKernel(at,t)}}),Gl=Ta({asinh_:function(e){const t={x:Ia(e,"x","asinh")};return da.runKernel(ot,t)}}),Hl=Ta({atan_:function(e){const t={x:Ia(e,"x","atan")};return da.runKernel(it,t)}}),ql=Ta({atan2_:function(e,t){let n=Ia(e,"a","atan2"),r=Ia(t,"b","atan2");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(ut,s)}}),Kl=Ta({atanh_:function(e){const t={x:Ia(e,"x","atanh")};return da.runKernel(lt,t)}});function Xl(e,t,n,r,s="NHWC",a){return Jl(e,[...t,e[3]],n,a,r,null,null,iu(s))}function Yl(e,t,n,r,s,a,o="channelsLast"){const[i,l]=tu(t);let u;if("channelsLast"===o)u=[i,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);u=[i,l,e[1],e[1]]}return Jl(e,u,n,r,s,a,!1,o)}function Zl(e,t,n,r,s,a,o="NDHWC"){const[i,l,u]=nu(t);let c,h;if("NDHWC"===o)h="channelsLast",c=[i,l,u,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[i,l,u,e[1],e[1]]}return Ql(e,c,n,r,s,!1,h,a)}function Jl(e,t,n,r,s,a,o=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,c]=e}const[p,d,,f]=t,[m,g]=tu(n),[y,b]=tu(r),x=ru(p,y),w=ru(d,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,o,i,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=eu(e,t,n));const a=e[1];return[su((e[0]-t+2*r)/n+1,s),su((a-t+2*r)/n+1,s)]}([t,n],a,r,e,i);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),i=Math.max(0,(h-1)*s+o-n),l=Math.floor(e/2),p=e-l,d=Math.floor(i/2);u={top:l,bottom:p,left:d,right:i-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],d="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=su((t-a+p+d)/r+1,i),h=su((n-o+f+m)/s+1,i)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,w,a,i),S=o?f*h:f;let N;return"channelsFirst"===i?N=[l,S,k,I]:"channelsLast"===i&&(N=[l,k,I,S]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function Ql(e,t,n,r,s,a=!1,o="channelsLast",i){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=nu(n),[w,v,k]=nu(r),I=ru(d,w),S=ru(f,v),N=ru(m,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,r,s,a,o,i,l,u,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=eu(e,t,r));const o=e[1],i=e[2];return[su((e[0]-t+2*s)/r+1,a),su((o-t+2*s)/r+1,a),su((i-t+2*s)/r+1,a),1]}([t,n,r,1],i,0,s,e,c);p=a[0],d=a[1],f=a[2]}else if("same"===e){p=Math.ceil(t/s),d=Math.ceil(n/a),f=Math.ceil(r/o);const e=(p-1)*s+i-t,c=(d-1)*a+l-n,m=(f-1)*o+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/s),d=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/o)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,u,c,h,y,b,x,I,S,N,i),A=a?g*p:g;let R;return"channelsFirst"===o?R=[l,A,C,E,$]:"channelsLast"===o&&(R=[l,C,E,$,A]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:E,outWidth:$,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function eu(e,t,n,r=1){const s=ru(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function tu(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function nu(e){return"number"==typeof e?[e,e,e]:e}function ru(e,t){return t<=1?e:e+(e-1)*(t-1)}function su(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function au(e){const[t,n,r]=tu(e);return 1===t&&1===n&&1===r}function ou(e,t){return au(e)||au(t)}function iu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function lu(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)re(ce(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{re(ce(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const uu=Ta({reshape_:function(e,t){const n={x:Ia(e,"x","reshape","string_or_numeric")},r={shape:t};return da.runKernel(ar,n,r)}}),cu=Ta({avgPool_:function(e,t,n,r,s){const a=Ia(e,"x","avgPool","float32");re(ou(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=a,i=!1;3===a.rank&&(i=!0,o=uu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),re(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),lu("avgPool",r,s);const l={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=da.runKernel(ct,l,u);return c=To(c,a.dtype),i?uu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),hu=Ta({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const o=Ia(e,"x","avgPool3d","float32");let i=o,l=!1;4===o.rank&&(l=!0,i=uu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),re(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),re("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),lu("avgPool3d",r,s);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=da.runKernel(pt,u,c);return h=To(h,i.dtype),l?uu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),pu=Ta({concat_:function(e,t=0){re(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Sa(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Co(n[0]);const r=n,s={axis:t};return da.runKernel(St,r,s)}}),du=Ta({sigmoid_:function(e){const t={x:Ia(e,"x","sigmoid","float32")};return da.runKernel(vr,t)}}),fu=Ta({slice_:function(e,t,n){const r=Ia(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return da.runKernel(yr,s,a)}}),mu=Ta({tanh_:function(e){const t={x:Ia(e,"x","tanh","float32")};return da.runKernel(Ur,t)}}),gu=Ta({basicLSTMCell_:function(e,t,n,r,s,a){const o=Ia(e,"forgetBias","basicLSTMCell"),i=Ia(t,"lstmKernel","basicLSTMCell"),l=Ia(n,"lstmBias","basicLSTMCell"),u=Ia(r,"data","basicLSTMCell"),c=Ia(s,"c","basicLSTMCell"),h=Ia(a,"h","basicLSTMCell"),p=pu([u,h],1),d=Ho(p,i),f=ll(d,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=fu(f,[0,0],y),x=fu(f,[0,g],y),w=fu(f,[0,2*g],y),v=fu(f,[0,3*g],y),k=ll(hl(du(b),mu(x)),hl(c,du(ll(o,w))));return[k,hl(mu(k),du(v))]}}),yu=Ta({batchToSpaceND_:function(e,t,n){const r=Ia(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));re(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),re(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),re(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},o={blockShape:t,crops:n};return da.runKernel(mt,a,o)}}),bu=Ta({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const o=Ia(e,"x","batchNorm"),i=Ia(t,"mean","batchNorm"),l=Ia(n,"variance","batchNorm");let u,c;null!=s&&(u=Ia(s,"scale","batchNorm")),null!=r&&(c=Ia(r,"offset","batchNorm")),re(i.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?uu(e,[1,1,1,e.size]):2===e.rank?uu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?uu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:u,offset:c,mean:i,variance:l},p={varianceEpsilon:a},d=da.runKernel(sn,h,p);return uu(d,o.shape)}}),xu=Ta({batchNorm2d_:function(e,t,n,r,s,a){const o=Ia(e,"x","batchNorm"),i=Ia(t,"mean","batchNorm"),l=Ia(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ia(s,"scale","batchNorm")),null!=r&&(c=Ia(r,"offset","batchNorm")),re(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),re(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),re(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&re(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&re(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),bu(o,i,l,c,u,a)}}),wu=Ta({batchNorm3d_:function(e,t,n,r,s,a){const o=Ia(e,"x","batchNorm"),i=Ia(t,"mean","batchNorm"),l=Ia(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ia(s,"scale","batchNorm")),null!=r&&(c=Ia(r,"offset","batchNorm")),re(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),re(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),re(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&re(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&re(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),bu(o,i,l,c,u,a)}}),vu=Ta({batchNorm4d_:function(e,t,n,r,s,a){const o=Ia(e,"x","batchNorm"),i=Ia(t,"mean","batchNorm"),l=Ia(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ia(s,"scale","batchNorm")),null!=r&&(c=Ia(r,"offset","batchNorm")),re(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),re(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),re(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&re(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&re(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),bu(o,i,l,c,u,a)}}),ku=Ta({bincount_:function(e,t,n){const r=Ia(e,"x","bincount"),s=Ia(t,"weights","bincount");re("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},o={size:n};return da.runKernel(gt,a,o)}}),Iu=Ta({broadcastArgs_:function(e,t){const n=Ia(e,"s0","broadcastArgs","int32"),r=Ia(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return da.runKernel(bt,s)}}),Su=Ta({broadcastTo_:function(e,t){let n=Ia(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=uu(n,e)}const s=n.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(s[l]===t[l])a[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Co(n);const o={x:n},i={reps:a};return da.runKernel(Vr,o,i)}}),Nu=Ta({ceil_:function(e){const t={x:Ia(e,"x","ceil","float32")};return da.runKernel(wt,t)}}),Tu=Ta({clipByValue_:function(e,t,n){const r=Ia(e,"x","clipByValue");re(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return da.runKernel(vt,s,a)}}),Cu=Ta({concat1d_:function(e){return pu(e,0)}}),Eu=Ta({concat2d_:function(e,t){return pu(e,t)}}),$u=Ta({concat3d_:function(e,t){return pu(e,t)}}),Au=Ta({concat4d_:function(e,t){return pu(e,t)}}),Ru=Ta({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=Ia(e,"x","conv2d","float32"),l=Ia(t,"filter","conv2d","float32");let u=i,c=!1;3===i.rank&&(c=!0,u=uu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),re(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),lu("conv2d",r,o);const h="NHWC"===s?u.shape[3]:u.shape[1];re(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),re(ou(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=da.runKernel(Nt,p,d);return c?uu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Mu=Ta({conv1d_:function(e,t,n,r,s="NWC",a=1,o){const i=Ia(e,"x","conv1d"),l=Ia(t,"filter","conv1d");let u=i,c=!1;2===i.rank&&(c=!0,u=uu(i,[1,i.shape[0],i.shape[1]])),re(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),re(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),lu("conv1d",r,o),re(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),re(ou(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),re("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=uu(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=uu(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=Ru(p,h,[1,n],r,"NHWC",[1,a],o);return uu(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),_u=Ta({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",o){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,l=t,u=!1;3===t.rank&&(u=!0,l=uu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),re(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),re(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),re(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?i[3]:i[1],h="NHWC"===a?l.shape[3]:l.shape[1];re(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),re(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),lu("conv2dDerInput",s,o);const p={dy:l,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,inputShape:i},f=da.runKernel(Ct,p,d);return u?uu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Fu=Ta({conv2dTranspose_:function(e,t,n,r,s,a){const o=Ia(e,"x","conv2dTranspose"),i=Ia(t,"filter","conv2dTranspose");return _u(n,o,i,r,s,"NHWC",a)}}),Du=Ta({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const o=Ia(e,"x","conv3d"),i=Ia(t,"filter","conv3d");let l=o,u=!1;4===o.rank&&(u=!0,l=uu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),re(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),re(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),re(l.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),re(ou(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),re("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:i},h={strides:n,pad:r,dataFormat:s,dilations:a},p=da.runKernel(Et,c,h);return u?uu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Ou=Ta({conv3DBackpropInput_:function(e,t,n,r,s){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,o=t,i=!1;4===t.rank&&(i=!0,o=uu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=o.shape[4];re(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),re(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),re(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),re(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),re(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o,filter:n},h={pad:s,strides:r,inputShape:a},p=da.runKernel(At,c,h);return i?uu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Lu=Ta({conv3dTranspose_:function(e,t,n,r,s){const a=Ia(e,"x","conv3dTranspose"),o=Ia(t,"filter","conv3dTranspose");return Ou(n,a,o,r,s)}}),Pu=Ta({cos_:function(e){const t={x:Ia(e,"x","cos","float32")};return da.runKernel(Rt,t)}}),zu=Ta({cosh_:function(e){const t={x:Ia(e,"x","cosh","float32")};return da.runKernel(Mt,t)}}),Bu=Ta({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Ia(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return da.runKernel(_t,s,a)}}),Uu=Ta({denseBincount_:function(e,t,n,r=!1){const s=Ia(e,"x","denseBincount"),a=Ia(t,"weights","denseBincount");re("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),re(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const o={x:s,weights:a},i={size:n,binaryOutput:r};return da.runKernel(Dt,o,i)}}),Vu=Ta({depthToSpace_:function(e,t,n="NHWC"){const r=Ia(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];re(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),re(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),re(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),re(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},l={blockSize:t,dataFormat:n};return da.runKernel(Ot,i,l)}}),Wu=Ta({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],o){const i=Ia(e,"x","depthwiseConv2d","float32"),l=Ia(t,"filter","depthwiseConv2d","float32");let u=i,c=!1;3===i.rank&&(c=!0,u=uu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),re(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),re(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),lu("depthwiseConv2d",r,o);const h={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},d=da.runKernel(Lt,h,p);return c?uu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ju=Ta({diag_:function(e){const t={x:Ia(e,"x","diag")};return da.runKernel(Bt,t)}}),Gu=Ta({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const o=Ia(e,"x","dilation2d"),i=Ia(t,"filter","dilation2d");re(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),re(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),re("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=o,u=!1;3===o.rank&&(l=uu(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0);const c={x:l,filter:i},h={strides:n,pad:r,dilations:s},p=da.runKernel(Ut,c,h);return u?uu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Hu=Ta({equal_:function(e,t){let n=Ia(e,"a","equal","string_or_numeric"),r=Ia(t,"b","equal","string_or_numeric");[n,r]=sa(n,r),Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(Xt,s)}}),qu=Ta({where_:function(e,t,n){const r=Ia(t,"a","where"),s=Ia(n,"b","where"),a=Ia(e,"condition","where","bool"),o=Jo(Jo(a.shape,r.shape),s.shape),i={condition:Su(a,o),t:Su(r,o),e:Su(s,o)};return da.runKernel(mr,i)}}),Ku=Ta({divNoNan_:function(e,t){let n=Ia(e,"a","div"),r=Ia(t,"b","div");[n,r]=sa(n,r);const s=cl(n,r),a=fl(s),o=Hu(r,a);return qu(o,a,s)}}),Xu=Ta({dot_:function(e,t){const n=Ia(e,"t1","dot"),r=Ia(t,"t2","dot");re(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(re(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=uu(n,[1,-1]),t=uu(r,[-1,1]),s=Ho(e,t);return uu(s,[])}if(1===n.rank&&2===r.rank){const e=uu(n,[1,-1]),t=uu(r,[r.shape[0],r.shape[1]]),s=Ho(e,t);return uu(s,[s.size])}if(2===n.rank&&1===r.rank){const e=uu(r,[-1,1]),t=Ho(n,e);return uu(t,[t.size])}{const e=uu(r,[r.shape[0],r.shape[1]]);return Ho(n,e)}}}),Yu=Ta({einsum_:function(e,...t){const n=t.map(((e,t)=>Ia(e,`tensors${t}`,"einsum"))),r={equation:e};return da.runKernel(Gt,n,r)}}),Zu=Ta({elu_:function(e){const t={x:Ia(e,"x","elu","float32")};return da.runKernel(Ht,t)}}),Ju=Ta({erf_:function(e){let t=Ia(e,"x","erf");re("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=To(t,"float32"));const n={x:t};return da.runKernel(Kt,n)}}),Qu=Ta({exp_:function(e){const t={x:Ia(e,"x","exp")};return da.runKernel(Yt,t)}}),ec=Ta({expandDims_:function(e,t=0){const n=Ia(e,"x","expandDims","string_or_numeric");re(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return da.runKernel(Zt,r,s)}}),tc=Ta({expm1_:function(e){const t={x:Ia(e,"x","expm1")};return da.runKernel(Jt,t)}}),nc=Ta({tile_:function(e,t){const n=Ia(e,"x","tile","string_or_numeric");re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return da.runKernel(Vr,r,s)}}),rc=Ta({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=No([e,t],r),a=e<=t?e:t;for(let i=0;i<a;++i)s.set(1,i,i);const o=uu(s.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return nc(ec(o,0),[n[0],1,1]);if(2===n.length)return nc(ec(ec(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return nc(ec(ec(ec(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),sc=Ta({floor_:function(e){const t={x:Ia(e,"x","floor","float32")};return da.runKernel(nn,t)}}),ac=Ta({gather_:function(e,t,n=0,r=0){const s={x:Ia(e,"x","gather"),indices:Ia(t,"indices","gather","int32")},a={axis:n,batchDims:r};return da.runKernel(an,s,a)}}),oc=Ta({greater_:function(e,t){let n=Ia(e,"a","greater","string_or_numeric"),r=Ia(t,"b","greater","string_or_numeric");[n,r]=sa(n,r),Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(ln,s)}}),ic=Ta({greaterEqual_:function(e,t){let n=Ia(e,"a","greaterEqual","string_or_numeric"),r=Ia(t,"b","greaterEqual","string_or_numeric");[n,r]=sa(n,r),Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(un,s)}}),lc=Ta({imag_:function(e){const t={input:Ia(e,"input","imag")};return da.runKernel(pn,t)}}),uc=Ta({isFinite_:function(e){const t={x:Ia(e,"x","isFinite")};return da.runKernel(dn,t)}}),cc=Ta({isInf_:function(e){const t={x:Ia(e,"x","isInf")};return da.runKernel(fn,t)}}),hc=Ta({isNaN_:function(e){const t={x:Ia(e,"x","isNaN")};return da.runKernel(mn,t)}}),pc=Ta({leakyRelu_:function(e,t=.2){const n={x:Ia(e,"x","leakyRelu")},r={alpha:t};return da.runKernel(gn,n,r)}}),dc=Ta({less_:function(e,t){let n=Ia(e,"a","less","string_or_numeric"),r=Ia(t,"b","less","string_or_numeric");[n,r]=sa(n,r),Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(yn,s)}}),fc=Ta({lessEqual_:function(e,t){let n=Ia(e,"a","lessEqual","string_or_numeric"),r=Ia(t,"b","lessEqual","string_or_numeric");[n,r]=sa(n,r),Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(bn,s)}});function mc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return da.runKernel(xn,{},r)}const gc=Ta({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Ia(e,"x","localResponseNormalization");re(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),re(ce(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=a,i=!1;3===a.rank&&(i=!0,o=uu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:o},u={depthRadius:t,bias:n,alpha:r,beta:s},c=da.runKernel(Tn,l,u);return i?uu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),yc=Ta({log_:function(e){const t={x:Ia(e,"x","log","float32")};return da.runKernel(wn,t)}}),bc=Ta({log1p_:function(e){const t={x:Ia(e,"x","log1p")};return da.runKernel(vn,t)}}),xc=Ta({neg_:function(e){const t={x:Ia(e,"x","neg")};return da.runKernel(Vn,t)}}),wc=Ta({softplus_:function(e){const t={x:Ia(e,"x","softplus")};return da.runKernel(kr,t)}}),vc=Ta({logSigmoid_:function(e){const t=Ia(e,"x","logSigmoid");return wl((e=>({value:xc(wc(xc(e))),gradFunc:t=>hl(t,du(xc(e)))})))(t)}}),kc=Ta({max_:function(e,t=null,n=!1){const r={x:Ia(e,"x","max")},s={reductionIndices:t,keepDims:n};return da.runKernel(En,r,s)}}),Ic=Ta({sum_:function(e,t=null,n=!1){let r=Ia(e,"x","sum");"bool"===r.dtype&&(r=To(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return da.runKernel(Sr,s,a)}}),Sc=Ta({logSoftmax_:function(e,t=-1){const n=Ia(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return wl(((e,n)=>{const r=kc(e,t,!0),s=El(e,r),a=El(To(s,"float32"),yc(Ic(Qu(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=Qu(r);return El(e,hl(Ic(e,t,!0),s))}}}))(n)}});function Nc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Tc(e,t,n){const r=e.length+t.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[a++]):s.push(t[o++]);return s}function Cc(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Ec(e,t){return Tc(e,t.map((e=>1)),t)}function $c(e,t,n){re(Nc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Ac(e,t){if(Nc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Rc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Mc(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const _c=Ta({logSumExp_:function(e,t=null,n=!1){const r=Ia(e,"x","logSumExp"),s=ye(t,r.shape),a=kc(r,s,!0),o=El(r,a),i=Qu(o),l=Ic(i,s),u=yc(l),c=ll(uu(a,u.shape),u);if(n){const e=Ec(c.shape,s);return uu(c,e)}return c}}),Fc=Ta({logicalAnd_:function(e,t){const n=Ia(e,"a","logicalAnd","bool"),r=Ia(t,"b","logicalAnd","bool");Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(kn,s)}}),Dc=Ta({logicalNot_:function(e){const t={x:Ia(e,"x","logicalNot","bool")};return da.runKernel(In,t)}}),Oc=Ta({logicalOr_:function(e,t){const n=Ia(e,"a","logicalOr","bool"),r=Ia(t,"b","logicalOr","bool");Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(Sn,s)}}),Lc=Ta({logicalXor_:function(e,t){const n=Ia(e,"a","logicalXor","bool"),r=Ia(t,"b","logicalXor","bool");return Jo(n.shape,r.shape),Fc(Oc(e,t),Dc(Fc(e,t)))}}),Pc=Ta({maxPool_:function(e,t,n,r,s){const a=Ia(e,"x","maxPool");let o=a,i=!1;3===a.rank&&(i=!0,o=uu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),re(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),re(ou(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),lu("maxPool",r,s);const l={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=da.runKernel(An,l,u);return i?uu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),zc=Ta({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const o=Ia(e,"x","maxPool3d");let i=o,l=!1;4===o.rank&&(l=!0,i=uu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),re(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),re("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),lu("maxPool3d",r,s);const u={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=da.runKernel(Mn,u,c);return l?uu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Bc=Ta({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:Ia(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},i=da.runKernel(Fn,a,o);return{result:i[0],indexes:i[1]}}}),Uc=Ta({mean_:function(e,t=null,n=!1){const r={x:Ia(e,"x","mean")},s={axis:t,keepDims:n};return da.runKernel(Dn,r,s)}});function Vc(e,t="float32"){if("complex64"===t){const t=Vc(e,"float32"),n=Vc(e,"float32");return Ca(t,n)}const n=Le(ie(e),t);return da.makeTensor(n,e,t)}function Wc(e,t="float32"){if("complex64"===t){const t=Wc(e,"float32"),n=Vc(e,"float32");return Ca(t,n)}const n=Oe(ie(e),t);return da.makeTensor(n,e,t)}function jc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ia(e,"x","meshgrid",e instanceof qs?e.dtype:"float32");if(void 0===t)return[r];let s=Ia(t,"y","meshgrid",t instanceof qs?t.dtype:"float32");const a=ie(r.shape),o=ie(s.shape);return"xy"===n?(r=uu(r,[1,-1]),s=uu(s,[-1,1]),[Ho(Wc([o,1],r.dtype),r),Ho(s,Wc([1,a],s.dtype))]):(r=uu(r,[-1,1]),s=uu(s,[1,-1]),[Ho(r,Wc([1,o],r.dtype)),Ho(Wc([a,1],s.dtype),s)])}const Gc=Ta({min_:function(e,t=null,n=!1){const r={x:Ia(e,"x","min")},s={axis:t,keepDims:n};return da.runKernel(On,r,s)}}),Hc=Ta({minimum_:function(e,t){let n=Ia(e,"a","minimum"),r=Ia(t,"b","minimum");[n,r]=sa(n,r),"bool"===n.dtype&&(n=To(n,"int32"),r=To(r,"int32")),Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(Ln,s)}}),qc=Ta({mirrorPad_:function(e,t,n){re("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ia(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");re(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let i=0;i<r.rank;i++)re(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),re(t[i][0]>=0&&t[i][0]<=r.shape[i]-s&&t[i][1]>=0&&t[i][1]<=r.shape[i]-s,(()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},o={x:r};return da.runKernel(Pn,o,a)}}),Kc=Ta({mod_:function(e,t){let n=Ia(e,"a","mod"),r=Ia(t,"b","mod");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(zn,s)}}),Xc=Ta({moments_:function(e,t=null,n=!1){const r=ye(t,(e=Ia(e,"x","moments")).shape),s=Uc(e,r,n);let a=s.shape;n||(a=Ec(s.shape,r));const o=dl(El(To(e,"float32"),uu(s,a)));return{mean:s,variance:Uc(o,r,n)}}}),Yc=Ta({multiRNNCell_:function(e,t,n,r){const s=Ia(t,"data","multiRNNCell"),a=Sa(n,"c","multiRNNCell"),o=Sa(r,"h","multiRNNCell");let i=s;const l=[];for(let h=0;h<e.length;h++){const t=e[h](i,a[h],o[h]);l.push(t[0]),l.push(t[1]),i=t[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}}),Zc=Ta({multinomial_:function(e,t,n,r=!1){const s=Ia(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?uu(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=da.runKernel(Bn,i,l);return 1===o?uu(u,[u.size]):u}}),Jc=Ta({notEqual_:function(e,t){let n=Ia(e,"a","notEqual","string_or_numeric"),r=Ia(t,"b","notEqual","string_or_numeric");[n,r]=sa(n,r),Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(Wn,s)}}),Qc=Ta({onesLike_:function(e){const t={x:Ia(e,"x","onesLike")};return da.runKernel(qn,t)}}),eh=Ta({outerProduct_:function(e,t){const n=Ia(e,"v1","outerProduct"),r=Ia(t,"v2","outerProduct");re(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=uu(n,[-1,1]),a=uu(r,[1,-1]);return Ho(s,a)}}),th=Ta({pad_:function(e,t,n=0){const r=Ia(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return da.runKernel(Yn,a,s)}}),nh=Ta({pad1d_:function(e,t,n=0){return re(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),th(e,[t],n)}}),rh=Ta({pad2d_:function(e,t,n=0){return re(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),th(e,t,n)}}),sh=Ta({pad3d_:function(e,t,n=0){return re(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),th(e,t,n)}}),ah=Ta({pad4d_:function(e,t,n=0){return re(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),th(e,t,n)}}),oh=Ta({spaceToBatchND_:function(e,t,n){const r=Ia(e,"x","spaceToBatchND");re(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),re(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),re(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return da.runKernel(Nr,s,a)}}),ih=Ta({pool_:function(e,t,n,r,s,a,o){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Ia(e,"x","maxPool");let l=i,u=!1;3===i.rank&&(u=!0,l=uu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),re(ou(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=Yl(l.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),o=t.map(((e,t)=>(e-a[t]%e)%e)),i=s.map(((e,t)=>e+o[t]));return[t.map(((e,t)=>[r[t],i[t]])),t.map(((e,t)=>[0,o[t]]))]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?l:oh(l,h,f),b=("avg"===n?()=>cu(y,t,a,g,o):()=>Pc(y,t,a,g,o))(),x=d?b:yu(b,h,m);return u?uu(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),lh=Ta({prelu_:function(e,t){const n={x:Ia(e,"x","prelu"),alpha:Ia(t,"alpha","prelu")};return da.runKernel(Qn,n)}}),uh=Ta({prod_:function(e,t=null,n=!1){let r=Ia(e,"x","prod");"bool"===r.dtype&&(r=To(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return da.runKernel(er,s,a)}}),ch=Ta({rand_:function(e,t,n){const r=ie(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return da.makeTensor(s,e,n)}});var hh=n(6377);class ph{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=hh.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class dh{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=hh.alea(s.toString()),this.randn=new ph(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class fh{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=hh.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const mh=Ta({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new dh(t,n,r,s),o=No(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),gh=Ta({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new ph(t,n,r,!1,s),o=No(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),yh=Ta({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=No(e,r),o=new fh(t,n,null,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}});function bh(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return da.runKernel(tr,{},s)}const xh=Ta({real_:function(e){const t={input:Ia(e,"input","real")};return da.runKernel(nr,t)}}),wh=Ta({reciprocal_:function(e){const t={x:Ia(e,"x","reciprocal")};return da.runKernel(rr,t)}}),vh=Ta({relu_:function(e){const t={x:Ia(e,"x","relu")};return da.runKernel(sr,t)}}),kh=Ta({relu6_:function(e){const t={x:Ia(e,"x","relu6")};return da.runKernel(cr,t)}}),Ih=Ta({reverse_:function(e,t){const n={x:Ia(e,"x","reverse")},r={dims:t};return da.runKernel(hr,n,r)}}),Sh=Ta({reverse1d_:function(e){const t=Ia(e,"x","reverse");return re(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Ih(t,0)}}),Nh=Ta({reverse2d_:function(e,t){const n=Ia(e,"x","reverse");return re(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Ih(n,t)}}),Th=Ta({reverse3d_:function(e,t){const n=Ia(e,"x","reverse");return re(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Ih(n,t)}}),Ch=Ta({reverse4d_:function(e,t){const n=Ia(e,"x","reverse");return re(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Ih(n,t)}}),Eh=Ta({round_:function(e){const t={x:Ia(e,"x","round")};return da.runKernel(pr,t)}}),$h=Ta({rsqrt_:function(e){const t={x:Ia(e,"x","rsqrt","float32")};return da.runKernel(dr,t)}}),Ah=Ta({selu_:function(e){const t={x:Ia(e,"x","selu")};return da.runKernel(gr,t)}}),Rh=Ta({separableConv2d_:function(e,t,n,r,s,a=[1,1],o="NHWC"){const i=Ia(e,"x","separableConv2d"),l=Ia(t,"depthwiseFilter","separableConv2d"),u=Ia(n,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=uu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");re(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),re(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),re(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),re(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];re(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=Wu(c,l,r,s,o,a),m=Ru(f,u,1,"valid",o);return h?uu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Mh=async function(e,t){const n=Ia(e,"x","setdiff1d"),r=Ia(t,"y","setdiff1d");re(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),re(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),re(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),o=new Set(a);let i=0;for(let c=0;c<s.length;c++)o.has(s[c])||i++;const l=new Ws([i],n.dtype),u=new Ws([i],"int32");for(let c=0,h=0;c<s.length;c++)o.has(s[c])||(l.values[h]=s[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]},_h=Ta({sign_:function(e){const t={x:Ia(e,"x","sign")};return da.runKernel(wr,t)}}),Fh=Ta({sin_:function(e){const t={x:Ia(e,"x","sin","float32")};return da.runKernel(br,t)}}),Dh=Ta({sinh_:function(e){const t={x:Ia(e,"x","sinh")};return da.runKernel(xr,t)}}),Oh=Ta({slice1d_:function(e,t,n){const r=Ia(e,"x","slice1d");return re(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),fu(r,[t],[n])}}),Lh=Ta({slice2d_:function(e,t,n){const r=Ia(e,"x","slice2d");return re(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),fu(r,t,n)}}),Ph=Ta({slice3d_:function(e,t,n){const r=Ia(e,"x","slice3d");return re(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),fu(r,t,n)}}),zh=Ta({slice4d_:function(e,t,n){const r=Ia(e,"x","slice4d");return re(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),fu(r,t,n)}}),Bh=Ta({softmax_:function(e,t=-1){const n=Ia(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return da.runKernel(Cr,r,s)}}),Uh=Ta({fft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return da.runKernel(Qt,t)}}),Vh=Ta({ifft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return da.runKernel(hn,t)}}),Wh=Ta({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=uu(e,[n,t]);r=Vh(s)}else{const s=[n,2*(t-1)],a=uu(xh(e),[n,t]),o=uu(lc(e),[n,t]),i=Ih(fu(a,[0,1],[n,t-2]),1),l=hl(Ih(fu(o,[0,1],[n,t-2]),1),kl(-1)),u=pu([a,i],1),c=pu([o,l],1),h=uu(Ca(u,c),[s[0],s[1]]);r=Vh(h)}if(r=xh(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=uu(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),jh=Ta({split_:function(e,t,n=0){const r={x:Ia(e,"x","split")},s={numOrSizeSplits:t,axis:n};return da.runKernel(Tr,r,s)}}),Gh=Ta({rfft_:function(e,t){re("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=fu(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=pu([e,Vc(r)],e.shape.length-1),n=t}else s=e;const a=fl(s),o=uu(Ca(s,a),[r,n]),i=Uh(o),l=Math.floor(n/2)+1,u=xh(i),c=lc(i),h=jh(u,[l,n-l],u.shape.length-1),p=jh(c,[l,n-l],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=l,uu(Ca(h[0],p[0]),d)}}),Hh=Ta({squaredDifference_:function(e,t){let n=Ia(e,"a","squaredDifference"),r=Ia(t,"b","squaredDifference");[n,r]=sa(n,r),Jo(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(_r,s,{})}}),qh=Ta({squeeze_:function(e,t){const n=Ia(e,"x","squeeze");return uu(n,be(n.shape,t).newShape)}}),Kh=Ta({stack_:function(e,t=0){const n=Sa(e,"tensors","stack","string_or_numeric");re(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&re(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return da.runKernel(Xn,r,s)}}),Xh=Ta({step_:function(e,t=0){const n={x:Ia(e,"x","step")},r={alpha:t};return da.runKernel(Yr,n,r)}}),Yh=Ta({stridedSlice_:function(e,t,n,r,s=0,a=0,o=0,i=0,l=0){const u={x:Ia(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return da.runKernel(Dr,u,c)}}),Zh=Ta({tan_:function(e){const t={x:Ia(e,"x","tan","float32")};return da.runKernel(Br,t)}});function Jh(e,t){ae(e);const n=wa(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ea(e,null,n,t)}function Qh(e,t,n){if(ae(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=wa(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ea(e,t,r,n)}function ep(e,t,n){if(ae(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=wa(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ea(e,t,r,n)}function tp(e,t,n){if(ae(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=wa(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ea(e,t,r,n)}function np(e,t,n){if(ae(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=wa(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ea(e,t=t||r,r,n)}const rp=Ta({topk_:function(e,t=1,n=!0){const r=Ia(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},o={k:t,sorted:n},[i,l]=da.runKernel(Wr,a,o);return{values:i,indices:l}}}),sp=Ta({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new ph(t,n,r,!0,s),o=No(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),ap=Ta({unique_:function(e,t=0){const n=Ia(e,"x","unique","string_or_numeric");re(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,o]=da.runKernel(Hr,r,s);return{values:a,indices:o}}}),op=Ta({unsortedSegmentSum_:function(e,t,n){const r=Ia(e,"x","unsortedSegmentSum"),s=Ia(t,"segmentIds","unsortedSegmentSum","int32");re(ce(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},o={numSegments:n};return da.runKernel(Kr,a,o)}}),ip=Ta({unstack_:function(e,t=0){const n=Ia(e,"x","unstack","string_or_numeric");re(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return da.runKernel(qr,r,s)}});function lp(e,t=!0,n,r){return da.makeVariable(e,t,n,r)}function up(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=No(e,"int32"),s=No([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),o=a*e.length;s.values.set(t,o)}return s.toTensor()}const cp=async function(e){const t=Ia(e,"condition","whereAsync","bool"),n=await t.data(),r=up(t.shape,n);return e!==t&&t.dispose(),r},hp=async function(e,t,n){const r=Ia(e,"tensor","boolMask"),s=Ia(t,"mask","boolMask","bool"),a=null==n?0:n,o=s.rank,i=r.shape;re(o>0,(()=>"mask cannot be scalar")),se(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];const u=i.slice(0,a).concat([l],i.slice(a+o)),c=uu(r,u),h=uu(s,[-1]),p=await cp(h),d=qh(p,[1]),f=ac(c,d,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};function pp(e,t,n=null){if(0===e.rank)return Al(e);if(1!==e.rank&&null===n)return pp(uu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Ic(Al(e),n);if(t===1/0)return kc(Al(e),n);if(t===-1/0)return Gc(Al(e),n);if("euclidean"===t||2===t)return pl(Ic(Cl(Al(e),kl(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return kc(Ic(Al(e),n[0]),n[1]-1);if(t===1/0)return kc(Ic(Al(e),n[1]),n[0]);if(t===-1/0)return Gc(Ic(Al(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return pl(Ic(dl(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const dp=Ta({norm_:function(e,t="euclidean",n=null,r=!1){const s=pp(e=Ia(e,"x","norm"),t,n);let a=s.shape;if(r){const t=ye(n,e.shape);a=Ec(s.shape,t)}return uu(s,a)}}),fp=Ta({movingAverage_:function(e,t,n,r,s=!0){const a=Ia(e,"v","movingAverage"),o=Ia(t,"x","movingAverage"),i=Ia(n,"decay","movingAverage");aa(a,o),re(ue(a.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=kl(1),u=El(l,i);let c=hl(El(o,a),u);if(s){re(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Ia(r,"step","movingAverage");c=cl(c,El(l,Cl(i,e)))}return ll(a,c)}}),mp=Ta({scatterND_:function(e,t,n){const r=Ia(e,"indices","scatterND","int32"),s=Ia(t,"updates","scatterND");ii(s,r,n);const a={indices:r,updates:s},o={shape:n};return da.runKernel(fr,a,o)}}),gp=Ta({sparseToDense_:function(e,t,n,r=0){const s=Ia(e,"sparseIndices","sparseToDense","int32"),a=Ia(t,"sparseValues","sparseToDense"),o=Ia(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,o);const i={sparseIndices:s,sparseValues:a,defaultValue:o},l={outputShape:n};return da.runKernel(Mr,i,l)}}),yp=Ta({gatherND_:function(e,t){const n=Ia(t,"indices","gatherND","int32"),r={params:Ia(e,"x","gatherND","string_or_numeric"),indices:n};return da.runKernel(on,r)}}),bp=Ta({dropout_:function(e,t,n,r){const s=Ia(e,"x","dropout");if(re("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),re(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof qs?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(ue(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),o=1-t,i=cl(sc(ll(yh(a,0,1,"float32",r),o)),o);return hl(s,i)}});function xp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function wp(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return Jh(s,"float32")}const vp=async function(e,t,n=1){const r=Ia(e,"predictions","inTopK"),s=Ia(t,"targets","inTopK");re(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),re(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),se(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];re(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const o=await r.data(),i=await s.data(),[l,u]=[o.length/a,a],c=xe("bool",l);for(let h=0;h<l;h++){const e=h*u,t=o.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),c[h]=0;for(let s=0;s<n;s++)if(r[s].index===i[h]){c[h]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),$a(c,s.shape,"bool")},kp=Ta({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",o){let i=e;3===e.rank&&(i=uu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=uu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),re(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),re(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),re(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?i.shape[3]:i.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];re(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),re(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),lu("conv2dDerFilter",s,o);const h={x:i,dy:l},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,filterShape:n};return da.runKernel(Tt,h,p)}});function Ip(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return hl(e,Xh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Sp(e,t){let n=t;const r=Zo(e.shape,t.shape);return r.length>0&&(n=Ic(n,r)),uu(n,e.shape)}function Np(e,t,n,r){if("linear"===t)return e;if("relu"===t)return vh(e);if("elu"===t)return Zu(e);if("relu6"===t)return kh(e);if("prelu"===t)return lh(e,n);if("leakyrelu"===t)return pc(e,r);if("sigmoid"===t)return du(e);throw new Error(`Unknown fused activation ${t}.`)}const Tp=(e,t)=>!(e>0)||"linear"===t,Cp=Ta({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Tp(da.state.gradientDepth,l)){let h=Ru(e,t,n,r,s,a,o);return null!=i&&(h=ll(h,i)),Np(h,l,u,c)}const h=Ia(e,"x","conv2d","float32"),p=Ia(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=uu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),re(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),re(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),lu("fused conv2d",r,o),re(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),re(ou(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),re("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=Jl(d.shape,p.shape,n,a,r,o);let g,y;null!=i&&(g=Ia(i,"bias","fused conv2d"),[g]=sa(g,h),Jo(m.outShape,g.shape)),null!=u&&(y=Ia(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[s,o,i,u]=t,c=Ip(e,i,l);re(au(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[_u(o.shape,c,s,n,r),kp(o,c,s.shape,n,r)];if(null!=u){const e=Sp(u,c);h.push(e)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return null==i?wl(((e,t,n)=>{let r=da.runKernel(es,x,w);return n([t,e,r]),f&&(r=uu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p):wl(((e,t,n,r)=>{let s=da.runKernel(es,x,w);return r([t,e,s,n]),f&&(s=uu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,p,g)}}),Ep=Ta({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],o){let i=e;3===e.rank&&(i=uu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=uu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:i,dy:l},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,filterShape:n};return da.runKernel(Pt,u,c)}}),$p=Ta({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],o){let i=t,l=!1;3===t.rank&&(l=!0,i=uu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,inputShape:e},h=da.runKernel(zt,u,c);return l?uu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Ap=Ta({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Tp(da.state.gradientDepth,l)){let h=Wu(e,t,n,r,s,a,o);return null!=i&&(h=ll(h,i)),Np(h,l,u,c)}const h=Ia(e,"x","depthwiseConv2d","float32"),p=Ia(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=uu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),re(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),re(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),re(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),re(ou(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),lu("fused depthwiseConv2d",r,o);const m=Jl(d.shape,p.shape,n,a,r,o,!0);let g,y;null!=i&&(g=Ia(i,"bias","fused conv2d"),[g]=sa(g,h),Jo(m.outShape,g.shape)),null!=u&&(y=Ia(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{re(au(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,i,u,c]=t,h=Ip(e,u,l),p=$p(i.shape,h,s,n,r,a,o),d=Ep(i,h,s.shape,n,r,a,o);return null!=c?[p,d,Sp(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return null==i?wl(((e,t,n)=>{let r=da.runKernel(ts,x,w);return n([t,e,r]),f&&(r=uu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p):wl(((e,t,n,r)=>{let s=da.runKernel(ts,x,w);return r([t,e,s,n]),f&&(s=uu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,p,g)}}),Rp=Ta({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(!1===Tp(da.state.gradientDepth,a)){let l=Ho(e,t,n,r);return null!=s&&(l=ll(l,s)),Np(l,a,o,i)}let l=Ia(e,"a","fused matMul"),u=Ia(t,"b","fused matMul");[l,u]=sa(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ie(f),y=ie(m);re(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Jo(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,d]),x=uu(l,n?[g,c,p]:[g,p,c]),w=uu(u,r?[y,d,h]:[y,h,d]);let v,k;null!=s&&(v=Ia(s,"bias","fused matMul"),[v]=sa(v,l),Jo(b,v.shape)),null!=o&&(k=Ia(o,"prelu weights","fused matMul"));const I=(e,t)=>{const[o,i,l,u]=t,c=Ip(uu(e,l.shape),l,a);let h,p;return n||r?!n&&r?(h=Ho(c,i,!1,!1),p=Ho(c,o,!0,!1)):n&&!r?(h=Ho(i,c,!1,!0),p=Ho(o,c,!1,!1)):(h=Ho(i,c,!0,!0),p=Ho(c,o,!0,!0)):(h=Ho(c,i,!1,!0),p=Ho(o,c,!0,!1)),null!=s?[h,p,Sp(u,c)]:[h,p]},S={a:x,b:w,bias:v,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:i};return null==s?wl(((e,t,n)=>{const r=da.runKernel(Qr,S,N);return n([e,t,r]),{value:uu(r,b),gradFunc:I}}))(x,w):wl(((e,t,n,r)=>{const s=da.runKernel(Qr,S,N);return r([e,t,s,n]),{value:uu(s,b),gradFunc:I}}))(x,w,v)}}),Mp=Ta({hammingWindow_:function(e){return wp(e,.54,.46)}}),_p=Ta({hannWindow_:function(e){return wp(e,.5,.5)}}),Fp=Ta({frame_:function(e,t,n,r=!1,s=0){let a=0;const o=[];for(;a+t<=e.size;)o.push(fu(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,i=pu([fu(e,a,t-r),Nl([r],s)]);o.push(i),a+=n}return 0===o.length?Qh([],[0,t]):uu(pu(o),[o.length,t])}}),Dp=Ta({stft_:function(e,t,n,r,s=_p){null==r&&(r=xp(t));const a=Fp(e,t,n),o=hl(a,s(t));return Gh(o,r)}}),Op=Ta({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const o=Ia(e,"image","cropAndResize"),i=Ia(t,"boxes","cropAndResize","float32"),l=Ia(n,"boxInd","cropAndResize","int32"),u=i.shape[0];re(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),re(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`)),re(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`)),re(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),re(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),re("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:o,boxes:i,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return da.runKernel(Ft,c,h)}}),Lp=Ta({flipLeftRight_:function(e){const t=Ia(e,"image","flipLeftRight","float32");re(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return da.runKernel(tn,n,{})}}),Pp=Ta({grayscaleToRGB_:function(e){const t=Ia(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];re(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),re(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,nc(t,s)}}),zp=Ta({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Ia(e,"image","rotateWithOffset","float32");re(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},o={radians:t,fillValue:n,center:r};return da.runKernel(Jr,a,o)}});function Bp(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),re(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),re(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),re(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),re(1===t.rank,(()=>"scores must be a 1D tensor")),re(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),re(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Up=Ta({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ia(e,"boxes","nonMaxSuppression","float32"),o=Ia(t,"scores","nonMaxSuppression","float32"),i=Bp(a,o,n,r,s),l={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return da.runKernel(jn,{boxes:a,scores:o},l)}});function Vp(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);const i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}(e,t,n||Wp)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Wp(e,t){return e>t?1:e<t?-1:0}function jp(e,t,n,r,s){return qp(e,t,n,r,s,0)}function Gp(e,t,n,r,s,a){return qp(e,t,n,r,s,0,!1,a,!0)}function Hp(e,t,n,r,s,a){return qp(e,t,n,r,s,a,!0)}function qp(e,t,n,r,s,a,o=!1,i=!1,l=!1){const u=[];for(let g=0;g<t.length;g++)t[g]>s&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Yp);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:o}=t;if(n<s)break;let i=!1;for(let l=h.length-1;l>=o;--l){const n=Kp(e,a,h[l]);if(n>=r){i=!0;break}if(t.score=t.score*Xp(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(a),p.push(t.score)):t.score>s&&Vp(u,t,Yp))}const d=h.length,f=n-d;i&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function Kp(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(i-a)*(l-o),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(o,c),y=Math.min(i,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function Xp(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Yp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Zp=Ta({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=Ia(e,"boxes","nonMaxSuppression"),i=Ia(t,"scores","nonMaxSuppression"),l=Bp(o,i,n,r,s,a),u={boxes:o,scores:i},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=da.runKernel(Hn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Jp=Ta({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=Ia(e,"boxes","nonMaxSuppression"),i=Ia(t,"scores","nonMaxSuppression"),l=Bp(o,i,n,r,s,null),u={boxes:o,scores:i},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=da.runKernel(Gn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Qp=Ta({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Ia(e,"images","resizeBilinear");re(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),re(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),re(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=uu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=da.runKernel(lr,i,l);return o?uu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),ed=Ta({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Ia(e,"images","resizeNearestNeighbor");re(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),re(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),re("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),re(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=uu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=da.runKernel(or,i,l);return o?uu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),td=Ta({threshold_:function(e,t="binary",n=!1,r=.5){const s=Ia(e,"image","threshold"),a=s.shape[0]*s.shape[1];let o,i,l,u,c=hl(Jh([r]),255);if(re(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),re(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),re("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),re("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[o,i,l]=jh(s,[1,1,1],-1);const e=hl(o,.2989),t=hl(i,.587),n=hl(l,.114);u=ll(ll(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,o,i,l=Jh([-1]),u=Jh([0]),c=Jh([0]);for(let h=0;h<e.size-1;h++){n=fu(e,0,h+1),r=fu(e,h+1),o=cl(Ic(n),t),i=cl(Ic(r),t);const p=Ic(hl(n,bh(0,n.size)));s=cl(p,Ic(n));const d=Nl(r.shape,n.size),f=ll(bh(0,r.size),d),m=hl(r,f);a=cl(Ic(m),Ic(r));const g=El(s,a),y=El(s,a),b=hl(o,i);c=hl(hl(b,g),y);const x=oc(c,u);u=qu(x,c,u),l=qu(x,Jh([h]),l)}return l}(ku(To(Eh(u),"int32"),$a([]),256),a));const h=n?fc(u,c):oc(u,c);return To(hl(h,255),"int32")}}),nd=Ta({transform_:function(e,t,n="nearest",r="constant",s=0,a){const o=Ia(e,"image","transform","float32"),i=Ia(t,"transforms","transform","float32");re(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),re(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),re(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:o,transforms:i},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return da.runKernel(jr,l,u)}}),rd=Ta({bandPart_:function(e,t,n){re(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),re(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Ia(e,"a","bandPart");re(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);const i=uu(bh(0,a,1,"int32"),[-1,1]),l=bh(0,o,1,"int32"),u=El(i,l),c=Fc(fc(u,kl(+t,"int32")),ic(u,kl(-n,"int32"))),h=Vc([a,o],r.dtype);return uu(Kh(ip(uu(r,[-1,a,o])).map((e=>qu(c,e,h)))),s)}}),sd=Ta({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,re(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)re(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=jh(e,e.shape[0],0).map((e=>qh(e,[0])));re(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(da.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=hl(Ic(hl(n[t],e)),n[t]);e=El(e,r)}return cl(e,dp(e,"euclidean"))})));return t?Kh(n,0):n}});function ad(e,t=!1){return da.tidy((()=>{re(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=rc(n),a=Co(e);const o=Qh([[1]],[1,1]);let i=Co(o);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=i,u=s;[i,a,s]=da.tidy((()=>{const t=fu(a,[e,e],[n-e,1]),l=dp(t),u=fu(a,[e,e],[1,1]),c=qu(oc(u,0),Qh([[-1]]),Qh([[1]])),h=El(u,hl(c,l)),p=cl(t,h);i=1===p.shape[0]?Co(o):pu([o,fu(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=xc(cl(Ho(c,h),l)),f=fu(a,[e,0],[n-e,r]),m=hl(d,i),g=Ko(i);if(0===e)a=El(f,Ho(m,Ho(g,f)));else{const t=El(f,Ho(m,Ho(g,f)));a=pu([fu(a,[0,0],[e,r]),t],0)}const y=Ko(m),b=fu(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=El(b,Ho(Ho(b,i),y));else{const t=El(b,Ho(Ho(b,i),y));s=pu([fu(s,[0,0],[n,e]),t],1)}return[i,a,s]})),Yi([t,l,u])}return!t&&n>r&&(s=fu(s,[0,0],[n,r]),a=fu(a,[0,0],[r,r])),[s,a]}))}const od=Ta({qr_:function(e,t=!1){if(re(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ad(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=ip(uu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=ad(e,t);s.push(n),a.push(r)})),[uu(Kh(s,0),e.shape),uu(Kh(a,0),e.shape)]}}});var id;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(id||(id={}));const ld=Ta({computeWeightedLoss_:function(e,t,n=id.SUM_BY_NONZERO_WEIGHTS){const r=Ia(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Ia(t,"weights","computeWeightedLoss"));const a=null==s?r:hl(r,s);if(n===id.NONE)return a;if(n===id.SUM)return Ic(a);if(n===id.MEAN){if(null==s)return Uc(a);{const e=r.size/s.size,t=cl(Ic(a),Ic(s));return e>1?cl(t,kl(e)):t}}if(n===id.SUM_BY_NONZERO_WEIGHTS){if(null==s)return cl(Ic(a),kl(r.size));{const e=hl(s,Wc(r.shape)),t=To(Ic(Jc(e,kl(0))),"float32");return cl(Ic(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),ud=Ta({absoluteDifference_:function(e,t,n,r=id.SUM_BY_NONZERO_WEIGHTS){const s=Ia(e,"labels","absoluteDifference"),a=Ia(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Ia(n,"weights","absoluteDifference")),se(s.shape,a.shape,"Error in absoluteDifference: ");const i=Al(El(s,a));return ld(i,o,r)}}),cd=Ta({cosineDistance_:function(e,t,n,r,s=id.SUM_BY_NONZERO_WEIGHTS){const a=Ia(e,"labels","cosineDistance"),o=Ia(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Ia(r,"weights","cosineDistance")),se(a.shape,o.shape,"Error in cosineDistance: ");const l=kl(1),u=El(l,Ic(hl(a,o),n,!0));return ld(u,i,s)}}),hd=Ta({hingeLoss_:function(e,t,n,r=id.SUM_BY_NONZERO_WEIGHTS){let s=Ia(e,"labels","hingeLoss");const a=Ia(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Ia(n,"weights","hingeLoss")),se(s.shape,a.shape,"Error in hingeLoss: ");const i=kl(1);s=El(hl(kl(2),s),i);const l=vh(El(i,hl(s,a)));return ld(l,o,r)}}),pd=Ta({huberLoss_:function(e,t,n,r=1,s=id.SUM_BY_NONZERO_WEIGHTS){const a=Ia(e,"labels","huberLoss"),o=Ia(t,"predictions","huberLoss");let i=null;null!=n&&(i=Ia(n,"weights","huberLoss")),se(a.shape,o.shape,"Error in huberLoss: ");const l=kl(r),u=Al(El(o,a)),c=Hc(u,l),h=El(u,c),p=ll(hl(kl(.5),dl(c)),hl(l,h));return ld(p,i,s)}}),dd=Ta({logLoss_:function(e,t,n,r=1e-7,s=id.SUM_BY_NONZERO_WEIGHTS){const a=Ia(e,"labels","logLoss"),o=Ia(t,"predictions","logLoss");let i=null;null!=n&&(i=Ia(n,"weights","logLoss")),se(a.shape,o.shape,"Error in logLoss: ");const l=kl(1),u=kl(r),c=xc(hl(a,yc(ll(o,u)))),h=hl(El(l,a),yc(ll(El(l,o),u))),p=El(c,h);return ld(p,i,s)}}),fd=Ta({meanSquaredError_:function(e,t,n,r=id.SUM_BY_NONZERO_WEIGHTS){const s=Ia(e,"labels","meanSquaredError"),a=Ia(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Ia(n,"weights","meanSquaredError")),se(s.shape,a.shape,"Error in meanSquaredError: ");const i=Hh(s,a);return ld(i,o,r)}}),md=Ta({sigmoidCrossEntropy_:function(e,t,n,r=0,s=id.SUM_BY_NONZERO_WEIGHTS){let a=Ia(e,"multiClassLabels","sigmoidCrossEntropy");const o=Ia(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=Ia(n,"weights","sigmoidCrossEntropy")),se(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=kl(r),t=kl(1),n=kl(.5);a=ll(hl(a,El(t,e)),hl(n,e))}const l=function(e,t){const n=Ia(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ia(t,"logits","sigmoidCrossEntropyWithLogits");se(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=vh(r),a=hl(r,n),o=bc(Qu(xc(Al(r))));return ll(El(s,a),o)}(a,o);return ld(l,i,s)}}),gd=Ta({softmaxCrossEntropy_:function(e,t,n,r=0,s=id.SUM_BY_NONZERO_WEIGHTS){let a=Ia(e,"onehotLabels","softmaxCrossEntropy");const o=Ia(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=Ia(n,"weights","softmaxCrossEntropy")),se(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=kl(r),t=kl(1),n=kl(a.shape[1]);a=ll(hl(a,El(t,e)),cl(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return wl(((e,t,r)=>{const s=_c(t,[n],!0),a=El(To(t,"float32"),s);r([e,a]);const o=xc(hl(a,e));return{value:Ic(o,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Ec(e.shape,[n]);return[hl(uu(e,a),El(To(r,"float32"),Qu(s))),hl(uu(e,a),El(Qu(s),To(r,"float32")))]}}}))(e,t)}(a,o);return ld(l,i,s)}}),yd=Ta({sparseFillEmptyRows_:function(e,t,n,r){const s=Ia(e,"indices","sparseFillEmptyRows","int32"),a=Ia(t,"values","sparseFillEmptyRows"),o=Ia(n,"denseShape","sparseFillEmptyRows","int32"),i=Ia(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const l={indices:s,values:a,denseShape:o,defaultValue:i},u=da.runKernel(Er,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),bd=Ta({sparseReshape_:function(e,t,n){const r=Ia(e,"inputIndices","sparseReshape","int32"),s=Ia(t,"inputShape","sparseReshape","int32"),a=Ia(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o={inputIndices:r,inputShape:s,newShape:a},i=da.runKernel($r,o);return{outputIndices:i[0],outputShape:i[1]}}}),xd=Ta({sparseSegmentMean_:function(e,t,n){const r=Ia(e,"data","sparseSegmentMean"),s=Ia(t,"indices","sparseSegmentMean","int32"),a=Ia(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return da.runKernel(Ar,o)}}),wd=Ta({sparseSegmentSum_:function(e,t,n){const r=Ia(e,"data","sparseSegmentSum"),s=Ia(t,"indices","sparseSegmentSum","int32"),a=Ia(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return da.runKernel(Rr,o)}}),vd=Ta({stringNGrams_:function(e,t,n,r,s,a,o,i){const l=Ia(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Ia(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:o,preserveShortSequences:i},h={data:l,dataSplits:u},p=da.runKernel(Or,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),kd=Ta({stringSplit_:function(e,t,n=!0){const r=Ia(e,"input","stringSplit","string"),s=Ia(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},o={input:r,delimiter:s},i=da.runKernel(Lr,o,a);return{indices:i[0],values:i[1],shape:i[2]}}}),Id=Ta({stringToHashBucketFast_:function(e,t){const n=Ia(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return da.runKernel(Pr,s,r)}}),Sd={fft:Uh,ifft:Vh,rfft:Gh,irfft:Wh},Nd={hammingWindow:Mp,hannWindow:_p,frame:Fp,stft:Dp},Td={flipLeftRight:Lp,grayscaleToRGB:Pp,resizeNearestNeighbor:ed,resizeBilinear:Qp,rotateWithOffset:zp,cropAndResize:Op,nonMaxSuppression:Up,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ia(e,"boxes","nonMaxSuppressionAsync"),o=Ia(t,"scores","nonMaxSuppressionAsync"),i=Bp(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const l=await Promise.all([a.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:h}=jp(u,c,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),Jh(h,"int32")},nonMaxSuppressionWithScore:Zp,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=Ia(e,"boxes","nonMaxSuppressionAsync"),i=Ia(t,"scores","nonMaxSuppressionAsync"),l=Bp(o,i,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([o.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=Hp(c,h,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Jh(p,"int32"),selectedScores:Jh(d)}},nonMaxSuppressionPadded:Jp,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=Ia(e,"boxes","nonMaxSuppressionAsync"),i=Ia(t,"scores","nonMaxSuppressionAsync"),l=Bp(o,i,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Gp(p,d,u,c,h,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Jh(f,"int32"),validOutputs:kl(m,"int32")}},threshold:td,transform:nd},Cd={bandPart:rd,gramSchmidt:sd,qr:od},Ed={absoluteDifference:ud,computeWeightedLoss:ld,cosineDistance:cd,hingeLoss:hd,huberLoss:pd,logLoss:dd,meanSquaredError:fd,sigmoidCrossEntropy:md,softmaxCrossEntropy:gd},$d={sparseFillEmptyRows:yd,sparseReshape:bd,sparseSegmentMean:xd,sparseSegmentSum:wd},Ad={stringNGrams:vd,stringSplit:kd,stringToHashBucketFast:Id},Rd={sgd:Ol.sgd,momentum:Ol.momentum,adadelta:Ol.adadelta,adagrad:Ol.adagrad,rmsprop:Ol.rmsprop,adamax:Ol.adamax,adam:Ol.adam},Md="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function _d(){return new Promise((e=>Md((()=>e()))))}function Fd(e,t){const n=e[0].length;e.forEach(((e,t)=>{re(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),re(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)re(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Dd(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Od=30;function Ld(e){return e<=Od?e:Me(e,Math.floor(Math.sqrt(e)))}function Pd(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function zd(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Bd(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Ud(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function Vd(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Wd(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const jd=1.7580993408473768,Gd=1.0507009873554805,Hd=.3275911,qd=.254829592,Kd=-.284496736,Xd=1.421413741,Yd=-1.453152027,Zd=1.061405429;function Jd(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Qd(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ef(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function tf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function nf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function rf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function sf(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function af(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const of=/->/g;function lf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(of,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");re(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<s.length;++h){const e=s[h];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let h=0;h<r.length;++h){const e=r[h];-1===i.indexOf(e)&&","!==e&&i.push(e)}const l=new Array(a.length);for(let h=0;h<o;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let e=0;e<a[h].length;++e)l[h].push(i.indexOf(a[h][e]))}const u=i.length,c=[];for(let h=s.length;h<u;++h)c.push(h);return{allDims:i,summedDims:c,idDims:l}}function uf(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function cf(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:re(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function hf(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let o=0;o<s;++o)r.push([]);const a=[];for(let o=0;o<n.length;++o){const e=df(t,n[o]);for(const t of e)-1===a.indexOf(t)&&(r[o].push(t),a.push(t))}return{path:n,steps:r}}function pf(e){return e.every(((e,t)=>e===t))}function df(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function ff(e,t,n=0){let r=[];if("number"==typeof t)re(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{re(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}re(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function mf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function gf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function yf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function bf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function xf(e,t){return`size ${e} must be non-negative, not ${t}`}function wf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function vf(e,t){return`Input to reshape is a SparseTensor with ${ie(e)}\n  dense values, but the requested shape requires a multiple of ${ie(t)}. inputShape=${e} outputShape= ${t}`}function kf(e,t){return`Input to reshape is a tensor with ${ie(e)} dense values, but the requested shape has ${ie(t)}. inputShape=${e} outputShape=${t}`}function If(){return"segment ids must be >= 0"}function Sf(){return"segment ids are not increasing"}function Nf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Tf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Cf(e,t){let n,r=!1;for(e<=Od?(n=e,r=!0):n=Me(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Me(e,n+1);return n}function Ef(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function $f(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=e.shape[n],i=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)i.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)i.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<s;h++)i.push(t.shape[h]);for(let h=n+1;h<a;h++)i.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function Af(e){try{return e.map((e=>Fs(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Rf(e){return e.map((e=>_s(e)))}const Mf={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,Xh(To(n,"float32"),-1))}}},_f={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=dl(To(n,"float32")),r=pl(El(kl(1),t));return xc(cl(e,r))}}}},Ff={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=pl(El(dl(To(n,"float32")),1));return cl(e,t)}}}},Df={kernelName:Qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Jo(n.shape,r.shape);return{a:()=>{let t=e;const r=Zo(n.shape,s);return r.length>0&&(t=Ic(t,r)),uu(t,n.shape)},b:()=>{let t=e;const n=Zo(r.shape,s);return n.length>0&&(t=Ic(t,n)),uu(t,r.shape)}}}},Of={kernelName:et,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Lf={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(n)}}},Pf={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(n)}}},zf={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,pl(El(kl(1),dl(To(n,"float32")))))}}},Bf={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=pl(ll(kl(1),dl(To(n,"float32"))));return cl(e,t)}}}},Uf={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Jo(n.shape,r.shape);return{a:()=>{const t=ll(dl(n),dl(r));let a=hl(e,cl(r,t));const o=Zo(n.shape,s);return o.length>0&&(a=Ic(a,o)),uu(a,n.shape)},b:()=>{const t=ll(dl(n),dl(r));let a=xc(hl(e,cl(n,t)));const o=Zo(r.shape,s);return o.length>0&&(a=Ic(a,o)),uu(a,r.shape)}}}},Vf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,ll(dl(To(n,"float32")),1))}}},Wf={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,El(kl(1),dl(To(n,"float32"))))}}},jf=Ta({avgPool3dGrad_:function(e,t,n,r,s,a){const o=Ia(e,"dy","avgPool3dGrad"),i=Ia(t,"input","avgPool3dGrad");let l=o,u=i,c=!1;4===i.rank&&(c=!0,l=uu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=uu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),re(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),lu("avgPool3dGrad",s,a);const h={dy:l,input:u},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},d=da.runKernel(dt,h,p);return c?uu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Gf={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>jf(e,r,s,a,o,i)}}},Hf=Ta({avgPoolGrad_:function(e,t,n,r,s){const a=Ia(e,"dy","avgPoolGrad"),o=Ia(t,"input","avgPoolGrad");re(o.rank===a.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`));let i=o,l=a,u=!1;3===o.rank&&(u=!0,i=uu(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=uu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),re(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),re(4===i.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`));const c={dy:l,input:i},h={filterSize:n,strides:r,pad:s},p=da.runKernel(ht,c,h);return u?uu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),qf={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>Hf(e,r,s,a,o)}}},Kf={kernelName:ft,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:o}=n;return a||o?!a&&o?{a:()=>Ho(e,s,!1,!1),b:()=>Ho(e,r,!0,!1)}:a&&!o?{a:()=>Ho(s,e,!1,!0),b:()=>Ho(r,e,!1,!1)}:{a:()=>Ho(s,e,!0,!0),b:()=>Ho(e,r,!0,!0)}:{a:()=>Ho(e,s,!1,!0),b:()=>Ho(r,e,!0,!1)}}},Xf={kernelName:mt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>oh(e,r,s)}}},Yf={kernelName:yt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let l=s.length-1;l>=0;l--)if(s[l]===a[l])o[l]=1;else if(1!==s[l])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>Ic(e,i,!0)}}},Zf={kernelName:xt,gradFunc:e=>({x:()=>e.clone()})},Jf={kernelName:wt,gradFunc:e=>({x:()=>fl(e)})},Qf={kernelName:vt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>qu(Fc(ic(r,s),fc(r,a)),e,fl(e))}}},em={kernelName:It,inputsToSave:["x"],gradFunc:Mf.gradFunc},tm={kernelName:St,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=ye(s,t[0].shape)[0],o=r.map((e=>e[a]));return jh(e,o,a).map((e=>()=>e))}},nm={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return re(au(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>_u(r.shape,e,s,o,i,l),filter:()=>kp(r,e,s.shape,o,i,l)}}},rm={kernelName:Ct,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>Ru(e,s,a,o,i,1,l),filter:()=>kp(e,r,s.shape,a,o,i,l)}}},sm=Ta({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=uu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=uu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),re(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),re(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),re(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),re(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),re(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:a,dy:o},l={strides:r,pad:s,filterShape:n};return da.runKernel($t,i,l)}}),am={kernelName:Et,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;re(au(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=t;return{x:()=>Ou(o.shape,e,i,s,a),filter:()=>sm(o,e,i.shape,s,a)}}},om={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(xc(Fh(To(n,"float32"))),e)}}},im={kernelName:Mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(Dh(To(n,"float32")),e)}}},lm={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{const t=Ac([s],r.rank);let n=Bu(e,s,a,!o);return null!=t&&(n=Ko(n,t)),n}}}},um={kernelName:Lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=null==r?[1,1]:r;re(au(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[l,u]=t;return re(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),re(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),re(ou(s,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`)),lu("depthwiseConv2d",a,o),{x:()=>$p(l.shape,e,u,s,a,i,o),filter:()=>Ep(l,e,u.shape,s,a,i,o)}}},cm={kernelName:Ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>da.runKernel(Vt,a,n),filter:()=>da.runKernel(Wt,o,n)}}},hm={kernelName:Ht,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>da.runKernel(qt,r)}}},pm={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=hl(Qu(xc(dl(n))),2/Math.sqrt(Math.PI));return{x:()=>hl(e,r)}}},dm={kernelName:Yt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,n)}}},fm={kernelName:Zt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>uu(e,n.shape)}}},mm={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,Qu(n))}}},gm={kernelName:nn,gradFunc:e=>({x:()=>fl(e)})},ym={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Jo(n.shape,r.shape);return{a:()=>{const t=cl(e,To(r,"float32")),a=Zo(n.shape,s);return a.length>0?uu(Ic(t,a),n.shape):t},b:()=>{let t=hl(e,To(n,"float32"));const a=Zo(r.shape,s);a.length>0&&(t=uu(Ic(t,a),r.shape));const o=dl(r);return xc(cl(t,To(o,"float32")))}}}},bm={kernelName:sn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,o,i]=t,l=null==i?kl(1):i,u=Zo(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=El(s,a),p=hl(e,l),d=$h(ll(o,kl(r))),f=hl(hl(hl(d,d),d),kl(-.5));return{x:()=>1===a.rank?uu(hl(hl(e,nc(uu(d,[1,1,1,a.shape[0]]),c)),l),s.shape):uu(hl(hl(e,d),l),s.shape),mean:()=>{let e=hl(hl(d,kl(-1)),p);return 1===a.rank&&(e=Ic(e,u)),uu(e,a.shape)},variance:()=>{let e=hl(hl(f,h),p);return 1===a.rank&&(e=Ic(e,u)),uu(e,a.shape)},scale:()=>{const t=hl(h,d);let n=hl(e,t);return 1===a.rank&&(n=Ic(n,u)),uu(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Ic(t,u)),uu(t,a.shape)}}}},xm={kernelName:an,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,o=ye(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,i=t.slice(0,o),l=i.length,u=t.slice(a,t.length).slice(1),c=u.length,h=wm(0,l),p=wm(l+1,l+1+c),d=vm([i,[n],u]),f=uu(e,d),m=uu(s,[n]),g=vm([[l],h,p]),y=Ko(f,g);let b=op(y,m,r.shape[o]);const x=Rc(g);return b=Ko(b,x),b},indices:()=>s}}};function wm(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function vm(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const km={kernelName:un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>fl(n),b:()=>fl(r)}}},Im={kernelName:cn,gradFunc:e=>({x:()=>To(e,"float32")})},Sm={kernelName:dn,gradFunc:e=>({x:()=>fl(e)})},Nm={kernelName:fn,gradFunc:e=>({x:()=>fl(e)})},Tm={kernelName:mn,gradFunc:e=>({x:()=>fl(e)})},Cm={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=oc(r,0);return{x:()=>qu(a,e,hl(e,s))}}},Em={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,ll(n,1))}}},$m={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,To(n,"float32"))}}},Am={kernelName:Nn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Qu(r);return El(e,hl(Ic(e,s,!0),t))}}}},Rm=Ta({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,o=.5){const i={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:o};return da.runKernel(Cn,i,l)}}),Mm={kernelName:Tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>Rm(r,s,e,a,o,i,l)}}};function _m(e,t,n,r){return t.rank<n.rank&&(t=uu(t,Ec(t.shape,r))),e.rank<n.rank&&(e=uu(e,Ec(e.shape,r))),{x:()=>hl(e,To(Hu(n,t),e.dtype))}}const Fm={kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],o=_m(e,t[1],a,ye(s,a.shape));return{x:()=>o.x()}}},Dm={kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>hl(e,To(ic(n,r),"float32")),b:()=>hl(e,To(dc(n,r),"float32"))}}},Om=Ta({maxPool3dGrad_:function(e,t,n,r,s,a,o){const i=Ia(e,"dy","maxPool3dGrad"),l=Ia(t,"input","maxPool3dGrad"),u=Ia(n,"output","maxPool3dGrad");let c=i,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=uu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=uu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=uu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),re(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),re(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),re(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),lu("maxPool3dGrad",a,o);const f={dy:c,input:h,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:o},g=da.runKernel(_n,f,m);return d?uu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Lm={kernelName:Mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>Om(e,r,s,a,o,i,l)}}},Pm=Ta({maxPoolGrad_:function(e,t,n,r,s,a,o){const i=Ia(e,"dy","maxPoolGrad"),l=Ia(t,"input","maxPoolGrad"),u=Ia(n,"output","maxPoolGrad");re(l.rank===i.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`)),re(4===i.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`)),re(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),lu("maxPoolGrad",a,o);const c={dy:i,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return da.runKernel(Rn,c,h)}}),zm={kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>fu(e,a,r.shape)}}},Bm={kernelName:Nr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>yu(e,r,s)}}},Um={kernelName:Tr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>pu(e,r)}}},Vm=[Mf,_f,Ff,Df,Of,Lf,Pf,zf,Bf,Uf,Vf,Wf,Gf,qf,Kf,Xf,Yf,Zf,Jf,Qf,em,tm,rm,nm,am,om,im,lm,um,cm,{kernelName:jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Jo(n.shape,r.shape);return{a:()=>{const t=cl(e,To(r,"float32")),a=Zo(n.shape,s);return a.length>0?uu(Ic(t,a),n.shape):t},b:()=>{let t=hl(e,To(n,"float32"));const a=Zo(r.shape,s);a.length>0&&(t=uu(Ic(t,a),r.shape));const o=dl(r);return xc(cl(t,To(o,"float32")))}}}},hm,pm,dm,fm,mm,ym,gm,bm,xm,km,Im,Sm,Nm,Tm,Cm,Em,$m,Am,Mm,Fm,Fm,Dm,Lm,{kernelName:An,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>Pm(e,r,s,a,o,i)}}},{kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=ye(s,r.shape),o=ie(Cc(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=uu(e,t);return cl(hl(n,Wc(r.shape,"float32")),o)}}}},{kernelName:On,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,o]=t,i=_m(e,o,a,ye(s,a.shape));return{x:()=>i.x()}}},{kernelName:Ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>hl(e,To(fc(n,r),"float32")),b:()=>hl(e,To(oc(n,r),"float32"))}}},{kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>fu(e,a,r.shape)}}},{kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Jo(n.shape,r.shape);return{a:()=>{const t=Zo(n.shape,s);return t.length>0?uu(Ic(e,t),n.shape):e},b:()=>{const t=hl(e,xc(sc(cl(n,r)))),a=Zo(r.shape,s);return a.length>0?uu(Ic(t,a),r.shape):t}}}},{kernelName:Un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Jo(n.shape,r.shape);return{a:()=>{const t=hl(e,To(r,"float32")),a=Zo(n.shape,s);return a.length>0?uu(Ic(t,a),n.shape):t},b:()=>{const t=hl(e,To(n,"float32")),a=Zo(r.shape,s);return a.length>0?uu(Ic(t,a),r.shape):t}}}},{kernelName:Vn,gradFunc:e=>({x:()=>xc(e)})},{kernelName:Kn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Vc(n.shape,"float32")}}},{kernelName:qn,gradFunc:e=>({x:()=>fl(e)})},{kernelName:Xn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return ip(e,r).map((e=>()=>e))}},zm,zm,{kernelName:Jn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,o=r,i=Jo(a.shape,o.shape);return{a:()=>{const t=To(o,"float32");let n=hl(e,hl(t,Cl(a,El(t,kl(1)))));const r=Zo(a.shape,i);return r.length>0&&(n=Ic(n,r)),uu(n,a.shape)},b:()=>{const t=oc(a,0),n=qu(t,yc(a),fl(a));let r=hl(e,hl(s,n));const l=Zo(o.shape,i);return l.length>0&&(r=Ic(r,l)),uu(r,o.shape)}}}},{kernelName:Qn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=oc(n,0);return{x:()=>qu(s,e,hl(e,r)),alpha:()=>{let t=qu(s,fl(e),hl(e,n));const a=Zo(r.shape,e.shape);return a.length>0&&(t=Ic(t,a)),uu(t,r.shape)}}}},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,xc(dl(n)))}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=hl(fc(n,6),Xh(n));return{x:()=>hl(e,To(r,"float32"))}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,To(Xh(n),"float32"))}}},{kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uu(e,n.shape)}}},{kernelName:lr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>da.runKernel(ur,s,n)}}},{kernelName:or,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>da.runKernel(ir,s,n)}}},{kernelName:hr,gradFunc:(e,t,n)=>{const{dims:r}=n,s=ye(r,e.shape);return{x:()=>Ih(e,s)}}},{kernelName:pr,gradFunc:e=>({x:()=>fl(e)})},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xc(cl(e,hl(Cl(n,1.5),2)))}}},{kernelName:mr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>To(fl(n),"float32"),t:()=>hl(e,To(n,e.dtype)),e:()=>hl(e,To(Dc(n),e.dtype))}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=oc(n,kl(0)),r=kl(jd),s=kl(Gd),a=hl(e,s),o=hl(hl(e,r),Qu(To(n,"float32")));return qu(t,a,o)}}}},{kernelName:vr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,hl(n,El(kl(1),n)))}}},{kernelName:wr,gradFunc:e=>({x:()=>fl(e)})},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(Pu(To(n,"float32")),e)}}},{kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(zu(To(n,"float32")),e)}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,o=r.shape,[i,l]=Ii(r,s,a),u=[];for(let c=0;c<e.rank;c++)u.push([i[c],o[c]-i[c]-l[c]]);return{x:()=>th(e,u)}}},{kernelName:Cr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=hl(e,r);return{logits:()=>El(a,hl(Ic(a,[s],!0),r))}}},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,du(n))}}},Bm,Bm,Um,Um,{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,hl(pl(To(n,"float32")),2))}}},{kernelName:_r,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=kl(2);return{a:()=>hl(e,hl(s,El(n,r))),b:()=>hl(e,hl(s,El(r,n)))}}},{kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,hl(To(n,"float32"),2))}}},{kernelName:Yr,gradFunc:e=>({x:()=>fl(e)})},{kernelName:zr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Jo(n.shape,r.shape);return{a:()=>{let t=e;const r=Zo(n.shape,s);return r.length>0&&(t=Ic(t,r)),uu(t,n.shape)},b:()=>{let t=e;const n=Zo(r.shape,s);return n.length>0&&(t=Ic(t,n)),uu(xc(t),r.shape)}}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;ye(a,r.shape).forEach((e=>{s[e]=1}));const o=uu(e,s),i=hl(o,Wc(r.shape,"float32"));return{x:()=>i}}},{kernelName:Br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cl(e,dl(Pu(n)))}}},{kernelName:Ur,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(El(kl(1),dl(n)),e)}}},{kernelName:Vr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=fl(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=ll(t,fu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=ll(t,fu(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)t=ll(t,fu(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)t=ll(t,fu(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Gr,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Rc(s);return{x:()=>Ko(e,a)}}},{kernelName:qr,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Kh(e,s)}}},{kernelName:Kr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Rl(t,fl(t)),r=ac(e,n);let s=ic(t,kl(0,"int32"));const a=r.rank-s.rank;for(let i=0;i<a;++i)s=ec(s,i+1);s=Fc(s,Wc(r.shape,"bool"));const o=fl(r);return qu(s,r,o)}(e,n)}}},{kernelName:Xr,gradFunc:e=>({x:()=>fl(e)})}];for(const OB of Vm)cs(OB);let Wm;function jm(){return null==Wm&&(Wm=ol().epsilon()),Wm}Ks().prototype.abs=function(){return this.throwIfDisposed(),Al(this)},Ks().prototype.acos=function(){return this.throwIfDisposed(),Ll(this)},Ks().prototype.acosh=function(){return this.throwIfDisposed(),Pl(this)},Ks().prototype.add=function(e){return this.throwIfDisposed(),ll(this,e)},Ks().prototype.all=function(e,t){return this.throwIfDisposed(),Bl(this,e,t)},Ks().prototype.any=function(e,t){return this.throwIfDisposed(),Ul(this,e,t)},Ks().prototype.argMax=function(e){return this.throwIfDisposed(),Vl(this,e)},Ks().prototype.argMin=function(e){return this.throwIfDisposed(),Wl(this,e)},Ks().prototype.asScalar=function(){return this.throwIfDisposed(),re(1===this.size,(()=>"The array must have only 1 element.")),uu(this,[])},Ks().prototype.asType=function(e){return this.throwIfDisposed(),To(this,e)},Ks().prototype.as1D=function(){return this.throwIfDisposed(),uu(this,[this.size])},Ks().prototype.as2D=function(e,t){return this.throwIfDisposed(),uu(this,[e,t])},Ks().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),uu(this,[e,t,n])},Ks().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),uu(this,[e,t,n,r])},Ks().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),uu(this,[e,t,n,r,s])},Ks().prototype.asin=function(){return this.throwIfDisposed(),jl(this)},Ks().prototype.asinh=function(){return this.throwIfDisposed(),Gl(this)},Ks().prototype.atan=function(){return this.throwIfDisposed(),Hl(this)},Ks().prototype.atan2=function(e){return this.throwIfDisposed(),ql(this,e)},Ks().prototype.atanh=function(){return this.throwIfDisposed(),Kl(this)},Ks().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),cu(this,e,t,n,r)},Ks().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),yu(this,e,t)},Ks().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),bu(this,e,t,n,r,s)},Ks().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Su(this,e)},Ks().prototype.cast=function(e){return this.throwIfDisposed(),To(this,e)},Ks().prototype.ceil=function(){return this.throwIfDisposed(),Nu(this)},Ks().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Tu(this,e,t)},Ks().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof qs&&(e=[e]),pu([this,...e],t)},Ks().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Mu(this,e,t,n,r,s,a)},Ks().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Fu(this,e,t,n,r,s)},Ks().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ru(this,e,t,n,r,s,a)},Ks().prototype.cos=function(){return this.throwIfDisposed(),Pu(this)},Ks().prototype.cosh=function(){return this.throwIfDisposed(),zu(this)},Ks().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Bu(this,e,t,n)},Ks().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Vu(this,e,t)},Ks().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Wu(this,e,t,n,r,s,a)},Ks().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Gu(this,e,t,n,r,s)},Ks().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ku(this,e)},Ks().prototype.div=function(e){return this.throwIfDisposed(),cl(this,e)},Ks().prototype.dot=function(e){return this.throwIfDisposed(),Xu(this,e)},Ks().prototype.elu=function(){return this.throwIfDisposed(),Zu(this)},Ks().prototype.equal=function(e){return this.throwIfDisposed(),Hu(this,e)},Ks().prototype.erf=function(){return this.throwIfDisposed(),Ju(this)},Ks().prototype.exp=function(){return this.throwIfDisposed(),Qu(this)},Ks().prototype.expandDims=function(e){return this.throwIfDisposed(),ec(this,e)},Ks().prototype.expm1=function(){return this.throwIfDisposed(),tc(this)},Ks().prototype.fft=function(){return this.throwIfDisposed(),Uh(this)},Ks().prototype.flatten=function(){return this.throwIfDisposed(),uu(this,[this.size])},Ks().prototype.floor=function(){return this.throwIfDisposed(),sc(this)},Ks().prototype.floorDiv=function(e){return this.throwIfDisposed(),ul(this,e)},Ks().prototype.gather=function(e,t){return this.throwIfDisposed(),ac(this,e,t)},Ks().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ic(this,e)},Ks().prototype.greater=function(e){return this.throwIfDisposed(),oc(this,e)},Ks().prototype.ifft=function(){return this.throwIfDisposed(),Vh(this)},Ks().prototype.irfft=function(){return this.throwIfDisposed(),Wh(this)},Ks().prototype.isFinite=function(){return this.throwIfDisposed(),uc(this)},Ks().prototype.isInf=function(){return this.throwIfDisposed(),cc(this)},Ks().prototype.isNaN=function(){return this.throwIfDisposed(),hc(this)},Ks().prototype.leakyRelu=function(e){return this.throwIfDisposed(),pc(this,e)},Ks().prototype.lessEqual=function(e){return this.throwIfDisposed(),fc(this,e)},Ks().prototype.less=function(e){return this.throwIfDisposed(),dc(this,e)},Ks().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),gc(this,e,t,n,r)},Ks().prototype.logSigmoid=function(){return this.throwIfDisposed(),vc(this)},Ks().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Sc(this,e)},Ks().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),_c(this,e,t)},Ks().prototype.log=function(){return this.throwIfDisposed(),yc(this)},Ks().prototype.log1p=function(){return this.throwIfDisposed(),bc(this)},Ks().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Fc(this,e)},Ks().prototype.logicalNot=function(){return this.throwIfDisposed(),Dc(this)},Ks().prototype.logicalOr=function(e){return this.throwIfDisposed(),Oc(this,e)},Ks().prototype.logicalXor=function(e){return this.throwIfDisposed(),Lc(this,e)},Ks().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Ho(this,e,t,n)},Ks().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Pc(this,e,t,n,r)},Ks().prototype.max=function(e,t){return this.throwIfDisposed(),kc(this,e,t)},Ks().prototype.maximum=function(e){return this.throwIfDisposed(),Rl(this,e)},Ks().prototype.mean=function(e,t){return this.throwIfDisposed(),Uc(this,e,t)},Ks().prototype.min=function(e,t){return this.throwIfDisposed(),Gc(this,e,t)},Ks().prototype.minimum=function(e){return this.throwIfDisposed(),Hc(this,e)},Ks().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),qc(this,e,t)},Ks().prototype.mod=function(e){return this.throwIfDisposed(),Kc(this,e)},Ks().prototype.mul=function(e){return this.throwIfDisposed(),hl(this,e)},Ks().prototype.neg=function(){return this.throwIfDisposed(),xc(this)},Ks().prototype.norm=function(e,t,n){return this.throwIfDisposed(),dp(this,e,t,n)},Ks().prototype.notEqual=function(e){return this.throwIfDisposed(),Jc(this,e)},Ks().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),qo(this,e,t,n)},Ks().prototype.onesLike=function(){return this.throwIfDisposed(),Qc(this)},Ks().prototype.pad=function(e,t){return this.throwIfDisposed(),th(this,e,t)},Ks().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),ih(this,e,t,n,r,s,a)},Ks().prototype.pow=function(e){return this.throwIfDisposed(),Cl(this,e)},Ks().prototype.prelu=function(e){return this.throwIfDisposed(),lh(this,e)},Ks().prototype.prod=function(e,t){return this.throwIfDisposed(),uh(this,e,t)},Ks().prototype.reciprocal=function(){return this.throwIfDisposed(),wh(this)},Ks().prototype.relu=function(){return this.throwIfDisposed(),vh(this)},Ks().prototype.relu6=function(){return this.throwIfDisposed(),kh(this)},Ks().prototype.reshapeAs=function(e){return this.throwIfDisposed(),uu(this,e.shape)},Ks().prototype.reshape=function(e){return this.throwIfDisposed(),uu(this,e)},Ks().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Qp(this,e,t,n)},Ks().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),ed(this,e,t,n)},Ks().prototype.reverse=function(e){return this.throwIfDisposed(),Ih(this,e)},Ks().prototype.rfft=function(){return this.throwIfDisposed(),Gh(this)},Ks().prototype.round=function(){return this.throwIfDisposed(),Eh(this)},Ks().prototype.rsqrt=function(){return this.throwIfDisposed(),$h(this)},Ks().prototype.selu=function(){return this.throwIfDisposed(),Ah(this)},Ks().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Rh(this,e,t,n,r,s,a)},Ks().prototype.sigmoid=function(){return this.throwIfDisposed(),du(this)},Ks().prototype.sign=function(){return this.throwIfDisposed(),_h(this)},Ks().prototype.sin=function(){return this.throwIfDisposed(),Fh(this)},Ks().prototype.sinh=function(){return this.throwIfDisposed(),Dh(this)},Ks().prototype.slice=function(e,t){return this.throwIfDisposed(),fu(this,e,t)},Ks().prototype.softmax=function(e){return this.throwIfDisposed(),Bh(this,e)},Ks().prototype.softplus=function(){return this.throwIfDisposed(),wc(this)},Ks().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),oh(this,e,t)},Ks().prototype.split=function(e,t){return this.throwIfDisposed(),jh(this,e,t)},Ks().prototype.sqrt=function(){return this.throwIfDisposed(),pl(this)},Ks().prototype.square=function(){return this.throwIfDisposed(),dl(this)},Ks().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Hh(this,e)},Ks().prototype.squeeze=function(e){return this.throwIfDisposed(),qh(this,e)},Ks().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof qs?[this,e]:[this,...e];return Kh(n,t)},Ks().prototype.step=function(e){return this.throwIfDisposed(),Xh(this,e)},Ks().prototype.stridedSlice=function(e,t,n,r,s,a,o,i){return this.throwIfDisposed(),Yh(this,e,t,n,r,s,a,o,i)},Ks().prototype.sub=function(e){return this.throwIfDisposed(),El(this,e)},Ks().prototype.sum=function(e,t){return this.throwIfDisposed(),Ic(this,e,t)},Ks().prototype.tan=function(){return this.throwIfDisposed(),Zh(this)},Ks().prototype.tanh=function(){return this.throwIfDisposed(),mu(this)},Ks().prototype.tile=function(e){return this.throwIfDisposed(),nc(this,e)},Ks().prototype.toBool=function(){return this.throwIfDisposed(),To(this,"bool")},Ks().prototype.toFloat=function(){return this.throwIfDisposed(),To(this,"float32")},Ks().prototype.toInt=function(){return this.throwIfDisposed(),To(this,"int32")},Ks().prototype.topk=function(e,t){return this.throwIfDisposed(),rp(this,e,t)},Ks().prototype.transpose=function(e){return this.throwIfDisposed(),Ko(this,e)},Ks().prototype.unique=function(e){return this.throwIfDisposed(),ap(this,e)},Ks().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),op(this,e,t)},Ks().prototype.unstack=function(e){return this.throwIfDisposed(),ip(this,e)},Ks().prototype.where=function(e,t){return this.throwIfDisposed(),qu(e,this,t)},Ks().prototype.zerosLike=function(){return this.throwIfDisposed(),fl(this)};class Gm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Gm.prototype)}}class Hm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hm.prototype)}}class qm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qm.prototype)}}class Km extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Km.prototype)}}class Xm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xm.prototype)}}function Ym(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Zm(e,t){if(!e)throw new Xm(t)}function Jm(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Qm(e){return 1===e.length?e[0]:e}function eg(e){return Array.isArray(e)?e:[e]}function tg(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ng(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let rg={};function sg(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ag(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>ag(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?ag(t):e[n]=t.value)}}}function og(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in rg)a=rg[s];else if(a=t[s],null==a)throw new qm(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new qm(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const o=a.className;let i,l;if(o in n?[i,l]=n[o]:o in rg?[i,l]=rg.className:o in t&&([i,l]=t[o]),null==i)throw new qm(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(rg))e[n]=rg[n];for(const s of Object.keys(n))e[s]=n[s];a.config.customObjects=e;const t=Object.assign({},rg);for(const s of Object.keys(n))rg[s]=n[s];ag(a.config);const r=l(i,a.config,n,s);return rg=Object.assign({},t),r}{const e=Object.assign({},rg);for(const r of Object.keys(n))rg[r]=n[r];const t=new i(a.config);return rg=Object.assign({},e),t}}}function ig(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function lg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function ug(e){if(null==e)throw new qm(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function cg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new qm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function hg(e,t,n=0,r=1/0){return Zm(n>=0),Zm(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function pg(e,t){Array.isArray(e)?(re(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>pg(e,`element ${n+1} of ${t}`)))):re(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${dg(e)}.`))}function dg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>dg(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function fg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function mg(e,t){return Xi((()=>pl(Ic(hl(e,e),t,!0))))}class gg extends Ti{getConfig(){return{}}}class yg extends gg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Xi((()=>{const t=mg(e,this.axis),n=Tu(t,0,this.maxValue);return hl(e,cl(n,ll(jm(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}yg.className="MaxNorm",Ei(yg);class bg extends gg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Xi((()=>cl(e,ll(jm(),mg(e,this.axis)))))}getConfig(){return{axis:this.axis}}}bg.className="UnitNorm",Ei(bg);class xg extends gg{apply(e){return vh(e)}}xg.className="NonNeg",Ei(xg);class wg extends gg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Xi((()=>{const t=mg(e,this.axis),n=ll(hl(this.rate,Tu(t,this.minValue,this.maxValue)),hl(1-this.rate,t));return hl(e,cl(n,ll(jm(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}wg.className="MinMaxNorm",Ei(wg);const vg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function kg(e){return sg(e)}function Ig(e,t={}){return og(e,Ci.getMap().classNameMap,t,"constraint")}function Sg(e){return null==e?null:"string"==typeof e?Ig({className:e in vg?vg[e]:e,config:{}}):e instanceof gg?e:Ig(e)}function Ng(e){return new yg(e)}function Tg(e){return new bg(e)}function Cg(){return new xg}function Eg(e){return new wg(e)}const $g=["channelsFirst","channelsLast"],Ag=["nearest","bilinear"],Rg=["valid","same","causal"],Mg=["max","avg"],_g=["sum","mul","concat","ave"],Fg=new Map;function Dg(e){cg($g,"DataFormat",e)}function Og(e){cg(Rg,"PaddingMode",e)}function Lg(e){cg(Mg,"PoolMode",e)}const Pg=[];function zg(e,t){Pg.push(e);try{const e=t();return Pg.pop(),e}catch(e){throw Pg.pop(),e}}function Bg(e){if(!Wg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Pg.length?"":Pg.join("/")+"/")+e}function Ug(e){if(!Wg(e))throw new Error("Not a valid tensor name: '"+e+"'");Fg.has(e)||Fg.set(e,0);const t=Fg.get(e);if(Fg.set(e,Fg.get(e)+1),t>0){const n=`${e}_${t}`;return Fg.set(n,1),n}return e}const Vg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Wg(e){return!!e.match(Vg)}function jg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Gg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Hg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function qg(e,t){if(t<e)throw new qm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Kg(e,t){return To(e,t)}function Xg(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),uu(e,n)}function Yg(e,t,n){return Xi((()=>{switch(e.rank){case 1:return Oh(e,t,n);case 2:return Lh(e,[t,0],[n,e.shape[1]]);case 3:return Ph(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return zh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return fu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return fu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new qm(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Zg(e,t,n){return Xi((()=>{switch(e.rank){case 1:return Oh(e,t,n);case 2:return Lh(e,[0,t],[e.shape[0],n]);case 3:return Ph(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return zh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new qm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Jg(e,t,n,r){return Xi((()=>{switch(e.rank){case 1:return Oh(e,t,n);case 2:switch(r){case 1:return Yg(e,t,n);case 2:return Zg(e,t,n);default:throw new qm(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Yg(e,t,n);case 2:return Ph(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Zg(e,t,n);default:throw new qm(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Yg(e,t,n);case 2:return zh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return zh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Zg(e,t,n);default:throw new qm(`The axis is not within the rank of the tensor ${r}`)}default:throw new qm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Qg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),pu(e,t)}function ey(e,t){switch(e.rank){case 1:return Cu([e,t]);case 2:return Eu([e,t],0);case 3:return $u([e,t],0);case 4:return Au([e,t],0);default:throw new qm(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ty(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new qm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return nc(e,t)}function ny(e,t=0,n=1,r,s){return gh(e,t,n,r,s)}function ry(e,t,n,r){if(e.rank<2||t.rank<2)throw new Km(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Km(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Rp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?oy(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=uu(e,[-1,a]);const o=t.shape.slice(),i=o.pop(),l=o.pop(),u=[...o,i],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=uu(Ko(t,c),[l,-1]);const h=[...s,...u];return uu(Rp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?oy(e.rank,r,"channelsLast"):null,activation:n}),h)}}function sy(e,t,n){return Xi((()=>(t=Array.isArray(t)?Jh(t,"int32"):To(t,"int32"),ac(e,t,n))))}function ay(e){return hl(e,e)}function oy(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new qm(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?uu(t,[1,r[0],1,1,1]):uu(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?uu(t,[1,1,1,1,r[0]]):uu(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?uu(t,[1,r[0],1,1]):uu(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?uu(t,[1,1,1,r[0]]):uu(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?uu(t,[1,r[0],1]):uu(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?uu(t,[1,1,r[0]]):uu(t,[1].concat(r))}else if(e<3)return t;throw new qm(`Unsupported input rank by biasAdd: ${t.rank}`)}function iy(e,t,n){return Xi((()=>(null==n&&(n="channelsLast"),Dg(n),ll(e,oy(e.rank,t,n)))))}function ly(e,t,n,r){return Xi((()=>bp(e,t,n,r)))}function uy(e,t,n=!1){return n?e():t()}const cy=["fanIn","fanOut","fanAvg"],hy=["normal","uniform","truncatedNormal"];class py extends Ti{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class dy extends py{apply(e,t){return Vc(e,t)}}dy.className="Zeros",Ei(dy);class fy extends py{apply(e,t){return Wc(e,t)}}fy.className="Ones",Ei(fy);class my extends py{constructor(e){if(super(),"object"!=typeof e)throw new qm(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new qm(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Xi((()=>hl(kl(this.value),Wc(e,t))))}getConfig(){return{value:this.value}}}my.className="Constant",Ei(my);class gy extends py{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return yh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}gy.className="RandomUniform",Ei(gy);class yy extends py{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Km(`randomNormal does not support dType ${t}.`);return ny(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}yy.className="RandomNormal",Ei(yy);class by extends py{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Km(`truncatedNormal does not support dType ${t}.`);return sp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}by.className="TruncatedNormal",Ei(by);class xy extends py{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Xi((()=>{if(2!==e.length||e[0]!==e[1])throw new qm("Identity matrix initializer can only be used for 2D square matrices.");return hl(this.gain,rc(e[0]))}))}getConfig(){return{gain:this.gain}}}xy.className="Identity",Ei(xy);class wy extends py{constructor(e){if(super(),e.scale<0)throw new qm(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,cg(cy,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){cg(hy,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Dg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=jg(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=jg(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=jg(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Km(`${this.getClassName()} does not support dType ${t}.`);return sp(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return yh(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}wy.className="VarianceScaling",Ei(wy);class vy extends wy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wy.className}}vy.className="GlorotUniform",Ei(vy);class ky extends wy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wy.className}}ky.className="GlorotNormal",Ei(ky);class Iy extends wy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wy.className}}Iy.className="HeNormal",Ei(Iy);class Sy extends wy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wy.className}}Sy.className="HeUniform",Ei(Sy);class Ny extends wy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return wy.className}}Ny.className="LeCunNormal",Ei(Ny);class Ty extends wy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return wy.className}}Ty.className="LeCunNormal",Ei(Ty);class Cy extends py{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Km("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Xi((()=>{if(e.length<2)throw new Km("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=ny(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Cd.gramSchmidt(t);return e[0]>e[1]&&(n=Ko(n)),hl(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Cy.className="Orthogonal",Ei(Cy);const Ey={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function $y(e,t={}){return og(e,Ci.getMap().classNameMap,t,"initializer")}function Ay(e){return sg(e)}function Ry(e){if("string"==typeof e){const t=e in Ey?Ey[e]:e;if("GlorotNormal"===t)return new ky;if("GlorotUniform"===t)return new vy;if("HeNormal"===t)return new Iy;if("HeUniform"===t)return new Sy;if("LeCunNormal"===t)return new Ny;if("LeCunUniform"===t)return new Ty;{const e={};return e.className=t,e.config={},$y(e)}}return e instanceof py?e:$y(e)}function My(){return new dy}function _y(){return new fy}function Fy(e){return new my(e)}function Dy(e){return new gy(e)}function Oy(e){return new yy(e)}function Ly(e){return new by(e)}function Py(e){return new xy(e)}function zy(e){return new wy(e)}function By(e){return new vy(e)}function Uy(e){return new ky(e)}function Vy(e){return new Iy(e)}function Wy(e){return new Sy(e)}function jy(e){return new Ny(e)}function Gy(e){return new Ty(e)}function Hy(e){return new Cy(e)}let qy=0;function Ky(){return qy++}const Xy={};function Yy(e=""){return e in Xy||(Xy[e]=0),Xy[e]+=1,e+Xy[e].toString()}function Zy(e){return Array.isArray(e)&&Array.isArray(e[0])}function Jy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Qy(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new qm(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function eb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new qm(`Expected exactly 1 Shape; got ${e.length}`)}return e}function tb(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class nb{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ky(),n=null==n?"Variable":n,this.originalName=Bg(n),this.name=Ug(this.originalName),this.trainable_=r,this.constraint=s,this.val=lp(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function rb(e){return e.map((e=>e.read()))}function sb(e){e.forEach((e=>{e[0].write(e[1])}))}class ab{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ob{constructor(e,t,n,r,s,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=Ky(),null!=a&&(this.originalName=Bg(a),this.name=Ug(this.originalName)),this.rank=t.length}}let ib=0;class lb{constructor(e,t){this.callArgs=t,this.id=ib++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ub=0;class cb extends Ti{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ub++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=tg(e)+"_"+Yy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Hm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new qm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Qm(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Qm(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Gm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Gm(`Layer ${this.name} is not connected, no input to return.`);return Qm(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Gm(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Gm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Qm(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=eg(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=eg(this.inputSpec);if(e.length!==t.length)throw new qm(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new qm(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new qm(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new qm(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new qm(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],o=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(o))throw new qm(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new qm(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=eg(e);let r=!0;for(const a of n)if(!(a instanceof ob)){r=!1;break}let s=!0;for(const a of n)if(a instanceof ob){s=!1;break}if(r===s)throw new qm("Arguments to apply() must be all SymbolicTensors or all Tensors");return zg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of eg(e))t.push(n.shape);this.build(Qm(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=eg(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Qm(a),null!=this.activityRegularizer)throw new Km("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=eg(e);const t=[];for(const n of e)t.push(n.shape);return Qm(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new ob(a,n,this,eg(e),t,this.name,r))):new ob(a,r,this,eg(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Km("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Gm(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Gm(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Hm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return tb(this.weights)}build(e){this.built=!0}getWeights(e=!1){return rb(e?this.trainableWeights:this.weights)}setWeights(e){Xi((()=>{const t=this.weights;if(t.length!==e.length)throw new qm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=rb(t);for(let s=0;s<r.length;++s){const a=r[s],o=t[s],i=e[s];if(!ue(a.shape,i.shape))throw new qm(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}sb(n)}))}addWeight(e,t,n,r,s,a,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new qm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=i?i():Ry("zeros"));const l=r.apply(t,n),u=new nb(l,n,e,a,o);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=eg(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,o=null){const i=eg(e);t=eg(t),n=eg(n),r=eg(r),s=Jy(s),a=Jy(a);const l=[],u=[],c=[];for(const h of i)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new lb({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function hb(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=hb(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class pb extends cb{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Yy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new qm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new qm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new qm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new ob(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new lb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new qm(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function db(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new qm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new pb({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function fb(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Yi(r)}}function mb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var gb;pb.className="InputLayer",Ei(pb),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(gb||(gb={}));class yb{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class bb{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class xb extends yb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=Xi((()=>ll(this.totals[r],hl(e,n))));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Xi((()=>{const e=hl(cl(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Zi(t[n])})))}}class wb extends yb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const o=r[a];e.push(o.data()),t.push(s),n.push(a)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}class vb extends yb{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_d,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");$e(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Rs();return(...a)=>{const o=null!=n?n():Rs();return o-s<t||(s=o,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await fb(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await fb(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await fb(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await fb(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await fb(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):$e(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await fb(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await fb(e),await this.trainEnd(e))}}function kb(e,t){return null==e&&(e={}),e instanceof yb?[e]:Array.isArray(e)&&e[0]instanceof yb?e:eg(e).map((e=>new vb(e,t)))}class Ib{constructor(){}static registerCallbackConstructor(e,t){re(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Ib.checkForDuplicate(t),null==Ib.constructors[e]&&(Ib.constructors[e]=[]),Ib.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Ib.constructors)Ib.constructors[+t].forEach((t=>{if(t===e)throw new qm("Duplicate callback constructor.")}))}static clear(){Ib.constructors={}}static createCallbacks(e){const t=[];for(const n in Ib.constructors){const r=+n;e>=r&&t.push(...Ib.constructors[r])}return t.map((e=>new e))}}function Sb(e,t,n,r,s,a,o,i,l){const u=new wb,c=[new xb,...Ib.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new bb(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:h,history:u}}function Nb(e,t={},n=!1){return og(e,Ci.getMap().classNameMap,t,"layer",n)}function Tb(e,t){return Xi((()=>{"float32"!==e.dtype&&(e=To(e,"float32"));const n=Ic(ay(e),t,!0),r=Nl(n.shape,jm()),s=pl(Rl(n,r));return cl(e,s)}))}function Cb(e,t){return Xi((()=>Uc(ay(El(t,e)),-1)))}function Eb(e,t){return Xi((()=>Uc(Al(El(t,e)),-1)))}function $b(e,t){return Xi((()=>{const n=El(e,t),r=Tu(Al(e),jm(),Number.MAX_VALUE),s=Al(cl(n,r));return hl(100,Uc(s,-1))}))}function Ab(e,t,n=!1){return Xi((()=>{if(n)t=Bh(t);else{const e=Ic(t,t.shape.length-1,!0);t=cl(t,e)}return t=Tu(t,jm(),1-jm()),xc(Ic(hl(To(e,"float32"),yc(t)),t.shape.length-1))}))}function Rb(e,t,n=!1){return Xi((()=>{const r=To(sc(function(e){const t=[jg(e.shape)];return uu(e,t)}(e)),"int32"),s=(t=Tu(t,jm(),1-jm())).shape;return Ab(uu(qo(r,s[s.length-1]),s),t,n)}))}function Mb(e,t){return Xi((()=>{let n;return n=Tu(t,jm(),1-jm()),n=yc(cl(n,El(1,n))),Uc(function(e,t){if(!ue(e.shape,t.shape))throw new qm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Xi((()=>{const n=vh(t),r=xc(Al(t));return ll(El(n,hl(t,e)),bc(Qu(r)))}))}(e,n),-1)}))}function _b(e,t){return Xi((()=>{const n=Tb(e,-1),r=Tb(t,-1),s=hl(n,r);return xc(Ic(s,-1))}))}Ib.constructors={};const Fb={meanSquaredError:Cb,meanAbsoluteError:Eb,meanAbsolutePercentageError:$b,meanSquaredLogarithmicError:function(e,t){return Xi((()=>{const n=Tu(t,jm(),Number.MAX_VALUE),r=yc(ll(1,n)),s=Tu(e,jm(),Number.MAX_VALUE),a=yc(ll(1,s));return Uc(ay(El(r,a)),-1)}))},squaredHinge:function(e,t){return Xi((()=>{const n=Rl(0,El(1,hl(e,t)));return Uc(ay(n),-1)}))},hinge:function(e,t){return Xi((()=>{const n=Rl(0,El(1,hl(e,t)));return Uc(n,-1)}))},categoricalHinge:function(e,t){return Xi((()=>{const n=Ic(hl(e,t),-1),r=kc(hl(El(1,e),t),-1);return Rl(0,ll(1,El(r,n)))}))},logcosh:function(e,t){return Xi((()=>{const n=Math.log(2),r=El(t,e),s=El(ll(r,wc(hl(-2,r))),n);return Uc(s,-1)}))},categoricalCrossentropy:Ab,sparseCategoricalCrossentropy:Rb,binaryCrossentropy:Mb,kullbackLeiblerDivergence:function(e,t){return Xi((()=>{const n=Tu(e,jm(),1),r=Tu(t,jm(),1);return Ic(hl(e,yc(cl(n,r))),-1)}))},poisson:function(e,t){return Xi((()=>{const n=yc(ll(jm(),t));return Uc(El(t,hl(e,n)),-1)}))},cosineProximity:_b};function Db(e){if("string"==typeof e){if(e in Fb)return Fb[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new qm(t)}return e}function Ob(e,t){return Xi((()=>{const n=hl(.5,Qc(t)),r=Kg(oc(t,n),e.dtype);return Uc(Hu(e,r),-1)}))}function Lb(e,t){return Xi((()=>Kg(Hu(Vl(e,-1),Vl(t,-1)),"float32")))}function Pb(e,t){return Xi((()=>To(Ic(Fc(Hu(e,1),Hu(t,1))),"float32")))}function zb(e,t){return Xi((()=>{const n=Pb(e,t),r=function(e,t){return Xi((()=>To(Ic(Fc(Hu(e,0),Hu(t,1))),"float32")))}(e,t),s=ll(n,r);return To(qu(oc(s,0),cl(n,s),0),"float32")}))}function Bb(e,t){return Mb(e,t)}function Ub(e,t){return e.rank===t.rank&&(e=qh(e,[e.rank-1])),(t=Vl(t,-1)).dtype!==e.dtype&&(t=To(t,e.dtype)),To(Hu(e,t),"float32")}const Vb=Ab,Wb=Rb,jb={binaryAccuracy:Ob,categoricalAccuracy:Lb,precision:zb,categoricalCrossentropy:Vb,sparseCategoricalCrossentropy:Wb,mse:Cb,MSE:Cb,mae:Eb,MAE:Eb,mape:$b,MAPE:$b,cosine:_b};function Gb(e){if("string"==typeof e&&e in jb)return jb[e];if("string"!=typeof e&&null!=e)return e;throw new qm(`Unknown metric ${e}`)}function Hb(e){if(Zm(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Fb))if(Fb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(jb))if(jb[n]===e){t=n;break}return void 0!==t?t:e.name}}function qb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Kb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Kb(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Kb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Kb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Xb(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function Yb(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Xb([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Zb(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e){const t=u.inboundLayers[e].name,n=u.nodeIndices[e],r=u.tensorIndices[e];a.push(`${t}[${n}][${r}]`)}const o=e.name,i=e.getClassName(),l=0===a.length?"":a[0];Xb([`${o} (${i})`,s,e.countParams().toString(),l],t,r);for(let u=1;u<a.length;++u)Xb(["","","",a[u]],t,r)}function Jb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Qb(e,t){if(null===e)return null;if("string"==typeof e)return ng(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Jb(t,s,r)?n.push(r):n.push(Qb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=ng(n);t[e]=Qb(r,e)}}return t}}function ex(e,t){if(null==e)return null;if("string"==typeof e)return tg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Jb(t,s,r)?n.push(r):n.push(ex(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[tg(n)]="name"!==n&&"className"!==n||"string"!=typeof r?ex(r,n):r}return t}}const tx="3.13.0";class nx{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof nx)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new qm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return To(t,e.dtype)}catch(n){throw new qm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ob){if(null==this.id2Value[e.id])throw new qm(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new qm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ob){if(null==this.id2Value[e.id])throw new qm(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new qm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Yi(this.id2Mask)}}const rx={},sx={};function ax(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),o=a?e:[e],i=o.map((e=>e.name)),l=[],u=t.names();for(const f of i)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=i.join(",")+"|"+t.names().join(",");let h,p;if(null==rx[c]){const e=function(e,t){re(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=ix(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:o}=ix(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const t in o)null==r[t]&&(r[t]=new Set),o[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:ox(r)}}(o,t);h=e.sorted,p=e.recipientCounts,rx[c]=h,sx[c]=p}h=rx[c],p={},s||Object.assign(p,sx[c]);const d=new nx(t);for(let f=0;f<h.length;++f){if(null!=r){const e=qi().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=h[f],a=e.sourceLayer;if(a instanceof pb)continue;const o=[],u=[],c=[];let m=!1;for(const n of e.inputs){const e=d.getValue(n),r=d.getMask(n);o.push(e),u.push(r),null!=r&&(m=!0),s||(p[n.name]--,0!==p[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&((n=n||{}).mask=u[0]);const g=eg(a.apply(o,n));let y=null;a.supportsMasking&&(y=a.computeMask(o,u));const b=lx(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){d.hasKey(x[t])||d.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}s||Yi(c)}return d.disposeMasks(),a?l:l[0]}function ox(e){const t={};for(const n in e)t[n]=e[n].size;return t}function ix(e,t){const n=new Set,r=[],s={};for(const i of t.names())n.add(i);const a=[],o=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=o[o.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&o.pop();else{o.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function lx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class ux extends cb{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Yy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],lg(this.inputs).length!==this.inputs.length)throw new qm(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);lg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Zm(0===t,"input layer has >1 nodes"),Zm(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof pb))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},o=[],i=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Hm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(ux.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let a=0;a<c;a++){const e=u.inputTensors[a],r=u.inboundLayers[a],s=u.nodeIndices[a],o=u.tensorIndices[a];i(e,t,n,r,s,o)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);o.push(u)},l=[],u=[];for(const y of this.outputs)i(y,l,u);const c=o.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const a=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];e=Math.max(e,a),r[y.outboundLayer.id]=e,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r],a=y.nodeIndices[r],o=s.inboundNodes[a],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const p={};for(const y in r){const e=r[y];e in p||(p[e]=[]),p[e].push(s[y])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(ig);this.layers=[];for(const y of d){const e=p[y];e.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof ux&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(ig);const f=this.inputs.slice(),m=[];for(const y of d)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Hm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Hm(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new lb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new qm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const a of this.layers)for(const e of a.weights){if(null!=n[e.originalName])throw new qm(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[a]]);else if(t)throw new qm(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new qm(`${e.length} of ${r} weights are not set: ${e}`)}sb(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${tx}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=ex(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Xi((()=>{e=eg(e);const n=new nx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return ax(this.outputs,n,t)}))}computeMask(e,t){return Xi((()=>{let n;return e=eg(e),n=null==t?Ym(null,e.length):eg(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Jy(e);if(t.length!==this.inputLayers.length)throw new qm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],r=t[o];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ig);if(r.length>1)for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],s=t.nodeIndices[o],a=t.tensorIndices[o],i=n[`${e.name}_${s}_${a}`];r.push(i)}const s=Jy(e.computeOutputShape(Qm(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${a}_${t}`]=s[t]}}const s=[],a=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],r=`${e.name}_${t}_${n}`;a.push(r)}for(let o=0;o<a.length;o++){const e=a[o];Zm(e in n),s.push(n[e])}return Qm(s)}runInternalGraph(e,t){null==t&&(t=Ym(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],s=e[i],a=t[i];n[r.id]=[s,a]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ig);for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,o,i,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),i=eg(e.call(t,u)),l=eg(e.computeMask(t,n)),r=[t],o=[n]}else r=a.map((e=>e[0])),o=a.map((e=>e[1])),null==u.mask&&(u.mask=o),i=eg(e.call(r,u)),l=eg(e.computeMask(r,o));if(e.activityRegularizer)throw new Km("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=i[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],o=[];for(const i of this.outputs){Zm(i.id in n,`Could not compute output ${i.name} : ${i.id}`);const[e,t]=n[i.id];o.push(e.shape),s.push(e),a.push(t)}return[s,a,o]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof ux?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=ux.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new qm(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new qm("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new qm(`No such layer: ${e}`)}calculateLosses(){return Xi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=ux.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const e=a.getClassName(),r=a.getConfig(),s=[];for(let n=0;n<a.inboundNodes.length;n++){const e=a.inboundNodes[n],r=ux.nodeKey(a,n);let o={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(t){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.nodeIndices[r],i=e.tensorIndices[r];let l=t[ux.nodeKey(s,a)];null==l&&(l=0),n.push([s.name,l,i,o])}s.push(n)}}}const o={};o.name=a.name,o.className=e,o.config=r,o.inboundNodes=s,n.push(o)}e.layers=n;const r=[];for(let a=0;a<this.inputLayers.length;a++){const e=this.inputLayers[a],n=this.inputLayersNodeIndices[a],s=ux.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let o=t[s];null==o&&(o=0);const i=this.inputLayersTensorIndices[a];r.push([e.name,o,i])}e.inputLayers=r;const s=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],n=this.outputLayersNodeIndices[a],r=ux.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let o=t[r];null==o&&(o=0);const i=this.outputLayersTensorIndices[a];s.push([e.name,o,i])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function o(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){const n=[];let r;for(const a of t){const i=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(i in s))return void o(e,t);const c=s[i];if(c.inboundNodes.length<=l)return void o(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Qm(n),r)}function l(e){const n=e.name,a=Nb(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new qm(`Corrupted configuration, expected array for nodeData: ${e}`);o(a,e)}))}const u=t.name,c=t.layers;for(const m of c)l(m);for(;!ug(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)i(t,n)}}const h=[],p=[],d=t.inputLayers;for(const m of d){const e=m[0],t=m[1],n=m[2];Zm(e in s);const r=s[e].inboundNodes[t].outputTensors;h.push(r[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];Zm(e in s);const r=s[e].inboundNodes[t].outputTensors;p.push(r[n])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new qm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Xi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function cx(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function hx(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Xi((()=>{if(1===e.shape.length)return Co(e);if(2===e.shape.length){if(e.shape[1]>1)return Vl(e,1);if(1===e.shape[1])return uu(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Yi(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Jh(s,"float32")}return null}function px(e,t){return hl(e,t)}function dx(e,t){let n,r;const s=t;n=s.xs,r=s.ys,re(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=fx("input",e.inputNames,n),o=fx("output",e.outputNames,r),i=a[0].shape[0];re(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),re(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<a.length;l++)re(a[l].shape[0]===i,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));for(let l=0;l<o.length;l++)re(o[l].shape[0]===i,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));return{xs:a,ys:o}}function fx(e,t,n){if(n instanceof qs)return[n];if(Array.isArray(n))return re(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new qm(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function mx(e){return"function"==typeof e.iterator}function gx(e){re(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function yx(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Yg(e,t,n-t))):Yg(e,t,n-t)}function bx(e,t){return Xi((()=>null==e?null:Array.isArray(e)?e.map((e=>bx(e,t))):sy(e,"int32"===t.dtype?t:To(t,"int32"))))}function xx(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function wx(e){const t=[];e instanceof qs&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Xg(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function vx(e,t){if(null==e)return;const n=[];if(t instanceof qs)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const s in t){const e=t[s];n.push(e.id)}const r=[];if(e instanceof qs)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function kx(e){return Array.isArray(e)}function Ix(e){return!function(e){return e instanceof qs}(e)&&!kx(e)}function Sx(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(kx(e)&&e.length>0)t=!0;else if(Ix(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new qm(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Ix(e)){a=[];for(const n of t){if(null==e[n])throw new qm(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(kx(e)){if(e.length!==t.length)throw new qm(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new qm(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=wx(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new qm(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new qm(`${s} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${s} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return a}function Nx(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new qm(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new qm(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new qm(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],l=n[o][a];if(null!=l&&l!==i)throw new qm(`Error when checking ${s}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class Tx extends ux{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new qm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let o;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}r("_".repeat(t)),Xb(a,n,r),r("=".repeat(t));const i=e.layers;for(let c=0;c<i.length;++c)s?Yb(i[c],n,r):Zb(i[c],n,o,r),r((c===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?tb(e.collectedTrainableWeights):tb(e.trainableWeights),t}(e),u=tb(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Rd.adagrad(.01),Adadelta:()=>Rd.adadelta(1,.95,jm()),Adam:()=>Rd.adam(.001,.9,.999,jm()),Adamax:()=>Rd.adamax(.002,.9,.999,jm(),0),RMSProp:()=>Rd.rmsprop(.001,.9,0,jm()),SGD:()=>Rd.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new qm(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Il))throw new qm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new qm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Db(e)))}else{const n=Db(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new qm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Db(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a],t=this.outputNames[a];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],zg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};zg("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const o of t){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Mb?-1!==["accuracy","acc"].indexOf(o)?r=Ob:-1!==["crossentropy","ce"].indexOf(o)&&(r=Bb):this.lossFunctions[e]===Rb?-1!==["accuracy","acc"].indexOf(o)?r=Ub:-1!==["crossentropy","ce"].indexOf(o)&&(r=Wb):-1!==["accuracy","acc"].indexOf(o)?r=Lb:-1!==["crossentropy","ce"].indexOf(o)&&(r=Vb),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),a=r,n=""+s}else{const e=Gb(o);a=e,n=""+Hb(o)}let t;zg(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;gx(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const o=this.testFunction;return Qm(this.testLoop(o,a,r,n.verbose,n.steps))}finally{vx(s[0],e),vx(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Km("Verbose mode is not implemented yet.");re(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof t.next?t:await t.iterator();let i=0,l=0;for(;!r||l<n.batches;){const t=await o.next();if(a=Xi((()=>{if(t.value){const{xs:n,ys:r}=dx(e,t.value),o=n.concat(r),u=Xi((()=>s(o)));if(Yi(o),0===l)for(let e=0;e<u.length;++e)a.push(kl(0));const c=o[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Xi((()=>ll(a[e],hl(c,t)))),l>0&&Yi(n)}Yi(u),i+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){const e=a[u];a[u]=cl(a[u],i),Yi(e)}return Qm(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new qm(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new qm(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new qm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new nx;if(e instanceof qs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new qm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new qm(`No value is provided for the model's input ${i.name}`);a.add(i,t)}const o=ax(s,a);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Ym(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const o=a.indexOf(e[r]);if(-1!==o&&(t[r]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new qm(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Xi((()=>{const r=this.checkNumSamples(e);if(n)throw new Km("Verbose predictLoop() is not implemented yet.");const s=xx(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Xi((()=>{const n=s[t][0],r=s[t][1],a=yx(e,n,r),o=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)o.push({key:this.inputs[e],value:a[e]});else o.push({key:this.inputs[0],value:a});const i=new nx(o);return ax(this.outputs,i)})).forEach(((e,t)=>a[t].push(e)));return Qm(a.map((e=>pu(e,0))))}))}predict(e,t={}){const n=wx(e);Nx(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return gx(r),this.predictLoop(n,r)}finally{vx(n,e)}}predictOnBatch(e){Nx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Hm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let a=0;a<this.feedOutputShapes.length;++a){const e=this.feedOutputShapes[a];this.feedLossFns[a]===Rb?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(e,t,n){const r=lg(e.map((e=>e.shape[0])));r.sort();const s=lg(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new qm(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new qm(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!ue(r,s))throw new qm(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Sx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Sx(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[Cb,Mb,Ab];for(let s=0;s<e.length;++s){const a=e[s],o=t[s],i=n[s];if(null!=o){if(o===Ab&&1===a.shape[a.shape.length-1])throw new qm(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const e=a.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new qm(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new qm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[o,i]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=cx(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await hx(i[t],null,e[t]))}return[o,i,l]}testLoop(e,t,n,r=0,s){return Xi((()=>{const a=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new Km("Verbose mode is not implemented yet.");if(null!=s)throw new Km("steps mode in testLoop() is not implemented yet");{const r=xx(a,n),s=Jh(qg(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],i=r[n][1],l=Yg(s,a,i-a),u=bx(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)o.push(kl(0));for(let e=0;e<c.length;++e){const t=c[e];o[e]=ll(o[e],hl(i-a,t))}}for(let e=0;e<o.length;++e)o[e]=cl(o[e],a)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Jm(e,r)>1&&(s+=`_${Jm(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new nx(e),i=ax(this.outputs,o,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],i[n]);null!=s[n]&&(e=px(e,s[n]));const a=Uc(e);t.push(a),l=0===n?e:ll(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=Uc(t(r[s],i[s]))}Zi(e),a.push(e)}return l=Uc(l),this.calculateLosses().forEach((e=>{l=ll(l,e)})),l}),!0,o)].concat(a)}}makeTestFunction(){this.testFunction=e=>Xi((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const o=new nx(a),i=ax(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Uc(r(s[e],i[e]));n=0===e?a:ll(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Uc(n(s[r],i[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,o,i,l,u,c,h,p;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;gx(d);const f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,d);s=m[0],a=m[1],p=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Km("validationData including sample weights is not supported yet."):new qm(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];const t=!0,n=await e.standardizeUserData(l,u,null,null,t,d);c=n[0],h=n[1],g=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];c=yx(s,e,t),o=s,s=yx(s,0,e),h=yx(a,e,t),i=a,a=yx(a,0,e),g=c.concat(h)}else null!=r.validationSteps&&(y=!0);const b=s.concat(a).concat(p);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),w=e.getDedupedMetricsNames();let v,k;y?(e.makeTestFunction(),v=e.testFunction,k=w.slice().concat(w.map((e=>"val_"+e)))):(v=null,g=[],k=w.slice());const I=kb(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,s,a,o,i,l,u,c,h,p,d,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,s,d,"steps_per_epoch");let y;null!=g&&(y=qg(0,g)),null==o&&(o=1);const{callbackList:b,history:x}=Sb(i,o,a,p,g,d,s,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let w=p;w<a;++w){await b.onEpochBegin(w);const a={};{if("batch"===c)throw new Km("batch shuffling is not implemneted yet");c&&X(y);const o=Jh(y),i=xx(g,s);for(let c=0;c<i.length;++c){const h={};if(await b.onBatchBegin(c,h),Xi((()=>{const p=i[c][0],d=i[c][1],f=Yg(o,p,d-p);h.batch=c,h.size=d-p;const g=bx(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,Zi(n)}if(c===i.length-1&&m){const t=e.testLoop(l,u,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];Zi(s),a["val_"+n]=s}}})),await b.onBatchEnd(c,h),mb(h),e.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(w,a),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,b,w,d,r.epochs,r.verbose,I,v,g,r.shuffle,k,r.initialEpoch,null)}finally{e.isTraining=!1,vx(s,t),vx(a,n),vx(o,t),vx(i,n),vx(c,l),vx(h,u),null!=p&&Yi(p)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(re(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),re(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),re(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),re(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),re(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,o;if(s)if(mx(n.validationData))re(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Km("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,o=e.ys}const i=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=kb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=Sb(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=dx(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const o=[];if(null!=n.classWeight){const t=cx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await hx(s[e],null,t[e]))}const u=r.concat(s).concat(o),d=i(u);Yi(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];a[t]=n,Zi(n)}await p.onBatchEnd(h,a),mb(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=mx(n.validationData)?eg(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):eg(e.evaluate(a,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),o=[];for(const i of a){const e=await i.data();o.push(e[0])}return Yi(a),vx(n[0],e),vx(n[1],t),Qm(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=qi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-qi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=tg(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>tg(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=tg(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[tg(Hb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>tg(Hb(e))));{const e={};for(const t in this.metrics)e[t]=tg(Hb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Nb(Qb(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=ng(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>ng(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ng(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>ng(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=ng(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Ga(e);if(0===t.length)throw new qm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new qm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new qm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ra(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${tx}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await Ra(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=Oa([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;qb(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){qb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Tx.className="Model",Ei(Tx);class Cx extends Tx{}async function Ex(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=Nb(Qb(n),t);if(null!=e.weightsManifest){const t=await Do(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Yi(t)}return r}Cx.className="Functional",Ei(Cx);class $x extends Tx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Yy("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new qm(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof $x||e instanceof Tx;let n;if(t){if(n=e,1!==n.outputs.length)throw new qm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new qm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new qm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=db({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new qm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new qm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=hb(this.outputs[0])}this.inboundNodes=[],new lb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ym(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(eb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Tx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Hm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Hm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Hm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Hm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new qm("Legacy serialization format not supported yet.");s=t}else re(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const o=new e(a);if(!(o instanceof $x))throw new Km(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const i of s){const e=Nb(i,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new qm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new qm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Ax(e){return new Tx(e)}function Rx(e){return new $x(e)}function Mx(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Ha(e,t);if(0===n.length)n.push(Uo(e,t));else if(n.length>1)throw new qm(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new qm("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&a,i=Nb(Qb(s),void 0,o),l=r.trainingConfig;if(null!=l&&i.loadTrainingConfig(l),null!=r.userDefinedMetadata&&i.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new qm("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Ma(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);i.loadWeights(e,a),null!=i.optimizer&&t.length>0&&await i.optimizer.setWeights(t),Yi(e),Yi(t.map((e=>e.tensor)))}return i}(e,0,t)}(e,t)}function _x(e){return db(e)}function Fx(e,t){Ib.registerCallbackConstructor(e,t)}$x.className="Sequential",Ei($x);class Dx extends Ti{getConfig(){return{}}}class Ox extends Dx{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Km(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Zu(e)}(e,t)}}Ox.className="elu",Ei(Ox);class Lx extends Dx{apply(e){return Ah(e)}}Lx.className="selu",Ei(Lx);class Px extends Dx{apply(e){return vh(e)}}Px.className="relu",Ei(Px);class zx extends Dx{apply(e){return Xi((()=>Hc(6,vh(e))))}}zx.className="relu6",Ei(zx);class Bx extends Dx{apply(e){return e}}Bx.className="linear",Ei(Bx);class Ux extends Dx{apply(e){return du(e)}}Ux.className="sigmoid",Ei(Ux);class Vx extends Dx{apply(e){return function(e){return Xi((()=>{const t=ll(.5,hl(.2,e));return Tu(t,0,1)}))}(e)}}Vx.className="hardSigmoid",Ei(Vx);class Wx extends Dx{apply(e){return wc(e)}}Wx.className="softplus",Ei(Wx);class jx extends Dx{apply(e){return function(e){return Xi((()=>cl(e,ll(Al(e),1))))}(e)}}jx.className="softsign",Ei(jx);class Gx extends Dx{apply(e){return mu(e)}}Gx.className="tanh",Ei(Gx);class Hx extends Dx{apply(e,t=-1){return Bh(e,t)}}Hx.className="softmax",Ei(Hx);class qx extends Dx{apply(e,t=-1){return Sc(e,t)}}qx.className="logSoftmax",Ei(qx);class Kx extends Dx{apply(e,t=1){return Xi((()=>hl(du(hl(e,t)),e)))}}Kx.className="swish",Ei(Kx);class Xx extends Dx{apply(e){return Xi((()=>hl(e,mu(wc(e)))))}}function Yx(e){return e.getClassName()}function Zx(e,t={}){return og(e,Ci.getMap().classNameMap,t,"activation")}function Jx(e){if(null==e)return Zx({className:"linear",config:{}});if("string"==typeof e){const t={};return t.className=e,t.config={},Zx(t)}return e instanceof Dx?e:Zx(e)}function Qx(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Xx.className="mish",Ei(Xx);class ew extends Ti{}class tw extends ew{constructor(e){super(),Qx(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Xi((()=>{let t=Vc([1]);return this.hasL1&&(t=ll(t,Ic(hl(this.l1,Al(e))))),this.hasL2&&(t=ll(t,Ic(hl(this.l2,ay(e))))),uu(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}tw.className="L1L2",Ei(tw);const nw={l1l2:"L1L2"};function rw(e){return sg(e)}function sw(e,t={}){return og(e,Ci.getMap().classNameMap,t,"regularizer")}function aw(e){return null==e?null:"string"==typeof e?sw({className:e in nw?nw[e]:e,config:{}}):e instanceof ew?e:sw(e)}class ow extends cb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Qy(e);let n=vh(e);return null!=this.maxValue&&(n=Tu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}ow.className="ReLU",Ei(ow);class iw extends cb{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Qy(e);return pc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}iw.className="LeakyReLU",Ei(iw);class lw extends cb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ry(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=aw(e.alphaRegularizer),this.alphaConstraint=Sg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new qm(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=eb(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new ab({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Qy(e),lh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ay(this.alphaInitializer),alphaRegularizer:rw(this.alphaRegularizer),alphaConstraint:kg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}lw.className="PReLU",Ei(lw);class uw extends cb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Km(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Qy(e);return Zu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}uw.className="ELU",Ei(uw);class cw extends cb{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Qy(e);return hl(n,To(oc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}cw.className="ThresholdedReLU",Ei(cw);class hw extends cb{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Hx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Qy(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function pw(e,t,n){if("number"==typeof e)return Ym(e,t);if(e.length!==t)throw new qm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new qm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function dw(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function fw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Hg([n-t,0]);else{if("same"!==r)throw new qm(`Unsupport padding mode: ${r}.`);e*=t}return e}function mw(e,t){return Xi((()=>(Dg(t),"channelsFirst"===t?Ko(e,[0,2,3,1]):e)))}function gw(e,t){return Xi((()=>(Dg(t),"channelsFirst"===t?Ko(e,[0,2,3,4,1]):e)))}function yw(e,t,n,r=[1,1],s="valid",a,o,i=null){return Xi((()=>{if(null==a&&(a="channelsLast"),Dg(a),3!==e.rank&&4!==e.rank)throw new qm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new qm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=mw(e,a);if("causal"===s)throw new Km("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Cp({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===a&&(l=Ko(l,[0,3,1,2])),l}))}hw.className="Softmax",Ei(hw);class bw extends cb{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bw.verifyArgs(t),this.rank=e,pg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Km(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=pw(t.kernelSize,e,"kernelSize"),this.strides=pw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Og(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Dg(this.dataFormat),this.activation=Jx(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ry(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Sg(t.biasConstraint),this.biasRegularizer=aw(t.biasRegularizer),this.activityRegularizer=aw(t.activityRegularizer),this.dilationRate=pw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new qm(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new qm(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new qm(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Zm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!hg(e.kernelSize,"number",1,3))throw new qm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Yx(this.activation),useBias:this.useBias,biasInitializer:Ay(this.biasInitializer),biasRegularizer:rw(this.biasRegularizer),activityRegularizer:rw(this.activityRegularizer),biasConstraint:kg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class xw extends bw{constructor(e,t){super(e,t),this.kernel=null,xw.verifyArgs(t),this.filters=t.filters,pg(this.filters,"filters"),this.kernelInitializer=Ry(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Sg(t.kernelConstraint),this.kernelRegularizer=aw(t.kernelRegularizer)}build(e){e=eb(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qm(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Xi((()=>{let t;e=Qy(e);const n=null==this.bias?null:this.bias.read(),r=fg(this.activation.getClassName());if(null!=r&&2===this.rank)t=yw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,o=1){return Xi((()=>{if(null==a&&(a="channelsLast"),Dg(a),3!==e.shape.length)throw new qm(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new qm(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new qm(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=Ko(e,[0,2,1])),"causal"===s)throw new Km("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Mu(e,t,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(i=iy(i,n)),i}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=yw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Km("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,o){return Xi((()=>{if(null==a&&(a="channelsLast"),Dg(a),4!==e.rank&&5!==e.rank)throw new qm(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new qm(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=gw(e,a);if("causal"===s)throw new Km("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Du(i,t,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(i=iy(i,n)),"channelsFirst"===a&&(i=Ko(i,[0,4,1,2,3])),i}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=eb(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=dw(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ay(this.kernelInitializer),kernelRegularizer:rw(this.kernelRegularizer),kernelConstraint:kg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new qm(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class ww extends xw{constructor(e){super(2,e),ww.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!hg(e.kernelSize,"number",1,2))throw new qm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}ww.className="Conv2D",Ei(ww);class vw extends xw{constructor(e){super(3,e),vw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new qm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}vw.className="Conv3D",Ei(vw);class kw extends ww{constructor(e){if(super(e),this.inputSpec=[new ab({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new qm(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=eb(e)).length)throw new qm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ab({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Xi((()=>{let t=Qy(e);if(4!==t.shape.length)throw new qm(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const o=n[s],i=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,fw(o,c,l,this.padding),fw(i,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ko(t,[0,2,3,1]));let d=Fu(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Ko(d,[0,3,1,2])),null!=this.bias&&(d=iy(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=eb(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=fw(t[r],i,a,this.padding),t[s]=fw(t[s],l,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}kw.className="Conv2DTranspose",Ei(kw);class Iw extends vw{constructor(e){if(super(e),this.inputSpec=[new ab({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new qm(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=eb(e)).length)throw new qm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ab({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Xi((()=>{let t=Qy(e);if(5!==t.shape.length)throw new qm(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,o;"channelsFirst"===this.dataFormat?(o=2,s=3,a=4):(o=1,s=2,a=3);const i=n[o],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,fw(i,d,c,this.padding),fw(l,f,h,this.padding),fw(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ko(t,[0,2,3,4,1]));let y=Lu(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Ko(y,[0,4,1,2,3])),null!==this.bias&&(y=iy(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=eb(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=fw(t[r],u,o,this.padding),t[s]=fw(t[s],c,i,this.padding),t[a]=fw(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Iw.className="Conv3DTranspose",Ei(Iw);class Sw extends xw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new qm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new qm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new qm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ry(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=aw(t.depthwiseRegularizer),this.depthwiseConstraint=Sg(t.depthwiseConstraint),this.pointwiseInitializer=Ry(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=aw(t.pointwiseRegularizer),this.pointwiseConstraint=Sg(t.pointwiseConstraint)}build(e){if((e=eb(e)).length<this.rank+2)throw new qm(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new qm(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new ab({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Xi((()=>{let t;if(e=Qy(e),1===this.rank)throw new Km("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ko(e,[0,2,3,1])),t=Rh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=iy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ko(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ay(this.depthwiseInitializer),e.pointwiseInitializer=Ay(this.pointwiseInitializer),e.depthwiseRegularizer=rw(this.depthwiseRegularizer),e.pointwiseRegularizer=rw(this.pointwiseRegularizer),e.depthwiseConstraint=kg(this.depthwiseConstraint),e.pointwiseConstraint=kg(this.pointwiseConstraint),e}}Sw.className="SeparableConv";class Nw extends Sw{constructor(e){super(2,e)}}Nw.className="SeparableConv2D",Ei(Nw);class Tw extends xw{constructor(e){super(1,e),Tw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!hg(e.kernelSize,"number",1,1))throw new qm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Tw.className="Conv1D",Ei(Tw);class Cw extends cb{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Xi((()=>{if(e=Qy(e),"channelsLast"===this.dataFormat){const t=Jg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Jg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Jg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Jg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Cw.className="Cropping2D",Ei(Cw);class Ew extends cb{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,cg(Ag,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Xi((()=>{let t=Qy(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ko(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Td.resizeNearestNeighbor(t,[e,r]):Td.resizeBilinear(t,[e,r]);return Ko(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Td.resizeNearestNeighbor(t,[e,r]):Td.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ew.className="UpSampling2D",Ei(Ew);class $w extends bw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ry(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Sg(e.depthwiseConstraint),this.depthwiseRegularizer=aw(e.depthwiseRegularizer)}build(e){if((e=eb(e)).length<4)throw new qm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new qm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Xi((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Xi((()=>{null==s&&(s="channelsLast"),Dg(s);let o=mw(e,s);if(4!==e.rank)throw new qm(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new qm(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Wu(o,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(o=Ko(o,[0,3,1,2])),o}))}(e=Qy(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=iy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=eb(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=dw(t,this.kernelSize[0],this.padding,this.strides[0]),a=dw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ay(this.depthwiseInitializer),e.depthwiseRegularizer=rw(this.depthwiseRegularizer),e.depthwiseConstraint=kg(this.depthwiseRegularizer),e}}function Aw(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new qm("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Rw(e,t,n,r=!1,s,a,o=!1,i=!1){return Xi((()=>{const l=t.shape.length;if(l<3)throw new qm(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(qg(2,l));if(t=Ko(t,u),null!=a)throw new Km("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=To(To(s,"bool"),"float32")).rank===l-1&&(s=ec(s,-1)),s=Ko(s,u)),r&&(t=Ih(t,0),null!=s&&(s=Ih(s,0)));const c=[];let h,p=n;const d=t.shape[0],f=ip(t);let m,g;null!=s&&(m=ip(s));for(let t=0;t<d;++t){const n=f[t],r=Xi((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=Xi((()=>{const e=m[t],n=El(Qc(e),e);return{output:ll(hl(r[0],e),hl(p[0],n)),newStates:p.map(((t,s)=>ll(hl(r[1][s],e),hl(t,n))))}}));h=e.output,p=e.newStates}i&&c.push(h)}return i&&(g=Kh(c,1)),[h,g,p]}))}$w.className="DepthwiseConv2D",Ei($w);class Mw extends cb{constructor(e){let t;if(super(e),null==e.cell)throw new qm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Bw({cells:e.cell}):e.cell,null==t.stateSize)throw new qm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ab({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?qg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Zy(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Xi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Km("Constants support is not implemented in RNN yet.");Zy(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ab({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ue(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new qm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new ab({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Xi((()=>{if(!this.stateful)throw new Gm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new qm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vc([n,e]))):this.states_=[Vc([n,this.cell.stateSize])];else if(null==e)Yi(this.states_),null!=this.keptStates&&(Yi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vc([n,e]))):this.states_[0]=Vc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Yi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!ue(r.shape,a))throw new qm(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Zi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Aw(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],o=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new ab({shape:e.shape}));o=o.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof ob){const n=[e].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return Xi((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Qy(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new qm(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},i=Rw(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=i[0],u=i[1],c=i[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Xi((()=>{let t=Vc(e.shape);return t=Ic(t,[1,2]),t=Xg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?ty(t,[1,e]):t)):this.cell.stateSize>1?[ty(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Mw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Nb(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Mw.className="RNN",Ei(Mw);class _w extends cb{}class Fw extends _w{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,pg(this.units,"units"),this.activation=Jx(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ry(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ry(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ry(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=aw(e.kernelRegularizer),this.recurrentRegularizer=aw(e.recurrentRegularizer),this.biasRegularizer=aw(e.biasRegularizer),this.kernelConstraint=Sg(e.kernelConstraint),this.recurrentConstraint=Sg(e.recurrentConstraint),this.biasConstraint=Sg(e.biasConstraint),this.dropout=Gg([1,Hg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gg([1,Hg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=eb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Xi((()=>{if(2!==e.length)throw new qm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Uw({ones:()=>Qc(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Uw({ones:()=>Qc(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;s=ry(null!=a?hl(e,a):e,this.kernel.read()),null!=this.bias&&(s=iy(s,this.bias.read())),null!=o&&(n=hl(n,o));let i=ll(s,ry(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Yx(this.activation),useBias:this.useBias,kernelInitializer:Ay(this.kernelInitializer),recurrentInitializer:Ay(this.recurrentInitializer),biasInitializer:Ay(this.biasInitializer),kernelRegularizer:rw(this.kernelRegularizer),recurrentRegularizer:rw(this.recurrentRegularizer),biasRegularizer:rw(this.biasRegularizer),activityRegularizer:rw(this.activityRegularizer),kernelConstraint:kg(this.kernelConstraint),recurrentConstraint:kg(this.recurrentConstraint),biasConstraint:kg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Fw.className="SimpleRNNCell",Ei(Fw);class Dw extends Mw{constructor(e){e.cell=new Fw(e),super(e)}call(e,t){return Xi((()=>{null!=this.cell.dropoutMask&&(Yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Dw.className="SimpleRNN",Ei(Dw);class Ow extends _w{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new qm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,pg(this.units,"units"),this.activation=Jx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Jx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ry(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ry(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ry(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=aw(e.kernelRegularizer),this.recurrentRegularizer=aw(e.recurrentRegularizer),this.biasRegularizer=aw(e.biasRegularizer),this.kernelConstraint=Sg(e.kernelConstraint),this.recurrentConstraint=Sg(e.recurrentConstraint),this.biasConstraint=Sg(e.biasConstraint),this.dropout=Gg([1,Hg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gg([1,Hg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=eb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Xi((()=>{if(2!==e.length)throw new qm(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Uw({ones:()=>Qc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Uw({ones:()=>Qc(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let o,i,l;0<this.dropout&&this.dropout<1&&(e=hl(e,s[0]));let u=ry(e,this.kernel.read());this.useBias&&(u=iy(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=hl(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=jh(c,[2*this.units,this.units],c.rank-1),d=ry(r,h),[f,m,g]=jh(u,3,u.rank-1),[y,b]=jh(d,2,d.rank-1);o=this.recurrentActivation.apply(ll(f,y)),i=this.recurrentActivation.apply(ll(m,b));const x=ry(hl(i,r),p);l=this.activation.apply(ll(g,x));const w=ll(hl(o,r),hl(ll(1,xc(o)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Yx(this.activation),recurrentActivation:Yx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ay(this.kernelInitializer),recurrentInitializer:Ay(this.recurrentInitializer),biasInitializer:Ay(this.biasInitializer),kernelRegularizer:rw(this.kernelRegularizer),recurrentRegularizer:rw(this.recurrentRegularizer),biasRegularizer:rw(this.biasRegularizer),activityRegularizer:rw(this.activityRegularizer),kernelConstraint:kg(this.kernelConstraint),recurrentConstraint:kg(this.recurrentConstraint),biasConstraint:kg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Ow.className="GRUCell",Ei(Ow);class Lw extends Mw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ow(e),super(e)}call(e,t){return Xi((()=>{null!=this.cell.dropoutMask&&(Yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Lw.className="GRU",Ei(Lw);class Pw extends _w{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,pg(this.units,"units"),this.activation=Jx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Jx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ry(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ry(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ry(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=aw(e.kernelRegularizer),this.recurrentRegularizer=aw(e.recurrentRegularizer),this.biasRegularizer=aw(e.biasRegularizer),this.kernelConstraint=Sg(e.kernelConstraint),this.recurrentConstraint=Sg(e.recurrentConstraint),this.biasConstraint=Sg(e.biasConstraint),this.dropout=Gg([1,Hg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gg([1,Hg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=eb(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends py{apply(t,r){const s=e.apply([n]),a=(new fy).apply([n]),o=e.apply([2*n]);return ey(ey(s,a),o)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Xi((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new qm(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Uw({ones:()=>Qc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Uw({ones:()=>Qc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let i,l,u,c;0<this.dropout&&this.dropout<1&&(e=hl(e,a[0]));let h=ry(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=hl(r,o[0])),h=ll(h,ry(r,this.recurrentKernel.read())),this.useBias&&(h=iy(h,this.bias.read()));const[p,d,f,m]=jh(h,4,h.rank-1);i=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=ll(hl(l,s),hl(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=hl(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Yx(this.activation),recurrentActivation:Yx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ay(this.kernelInitializer),recurrentInitializer:Ay(this.recurrentInitializer),biasInitializer:Ay(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:rw(this.kernelRegularizer),recurrentRegularizer:rw(this.recurrentRegularizer),biasRegularizer:rw(this.biasRegularizer),activityRegularizer:rw(this.activityRegularizer),kernelConstraint:kg(this.kernelConstraint),recurrentConstraint:kg(this.recurrentConstraint),biasConstraint:kg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Pw.className="LSTMCell",Ei(Pw);class zw extends Mw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Pw(e),super(e)}call(e,t){return Xi((()=>{null!=this.cell.dropoutMask&&(Yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}zw.className="LSTM",Ei(zw);class Bw extends _w{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Xi((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=r[o],a=0===o?[e[0]].concat(n):[a[0]].concat(n),a=i.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Zy(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{zg(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const s of t.cells)r.push(Nb(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return rb(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}sb(t)}}function Uw(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,o=()=>null!=a?a(t(),n):ly(t(),n),i=()=>uy(o,t,r);return!s||s<=1?Zi(i().clone()):Array(s).fill(void 0).map(i).map((e=>Zi(e.clone())))}Bw.className="StackedRNNCells",Ei(Bw);class Vw extends Mw{constructor(e){if(e.unroll)throw new Km("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Km("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ab({ndim:5})]}call(e,t){return Xi((()=>{if(null!=this.cell.dropoutMask&&(Yi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new qm("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Xi((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Vc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Xi((()=>{if(!this.stateful)throw new Gm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new qm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vc(s))):this.states_=[Vc(s)];else if(null==e)Yi(this.states_),null!=this.keptStates&&(Yi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vc(s))):this.states_[0]=Vc(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Yi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!ue(n.shape,r))throw new qm(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Zi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i="channelsFirst"===t,l=e[i?3:2],u=e[i?4:3],c=dw(l,r[0],s,a[0],o[0]),h=dw(u,r[1],s,a[1],o[1]);return[...e.slice(0,2),...i?[n,c,h]:[c,h,n]]}}Vw.className="ConvRNN2D";class Ww extends Pw{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:o}=e;super(Object.assign({},e,{units:t})),this.filters=t,pg(this.filters,"filters"),this.kernelSize=pw(n,2,"kernelSize"),this.kernelSize.forEach((e=>pg(e,"kernelSize"))),this.strides=pw(r||1,2,"strides"),this.strides.forEach((e=>pg(e,"strides"))),this.padding=s||"valid",Og(this.padding),this.dataFormat=a||"channelsLast",Dg(this.dataFormat),this.dilationRate=pw(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>pg(e,"dilationRate")))}build(e){var t;e=eb(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new qm(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends py{apply(e,t){return Qg([n.apply([r]),Wc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Xi((()=>{if(3!==e.length)throw new qm(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Uw({ones:()=>Qc(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?hl(t[n],e):e;let l=i(r,o,0),u=i(r,o,1),c=i(r,o,2),h=i(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Uw({ones:()=>Qc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=i(s,p,0),f=i(s,p,1),m=i(s,p,2),g=i(s,p,3);const[y,b,x,w]=jh(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?jh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[N,T,C,E]=jh(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply(ll(l,d)),A=this.recurrentActivation.apply(ll(u,f)),R=ll(hl(A,a),hl($,this.activation.apply(ll(c,m)))),M=hl(this.recurrentActivation.apply(ll(h,g)),this.activation.apply(R));return[M,M,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=Ru(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?iy(s,n,this.dataFormat):s}recurrentConv(e,t){return Ru(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ww.className="ConvLSTM2DCell",Ei(Ww);class jw extends Vw{constructor(e){const t=new Ww(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}jw.className="ConvLSTM2D",Ei(jw);class Gw extends cb{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Xi((()=>{this.invokeCallHook(e,t);const n=Qy(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return uy((()=>ly(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Gw.className="Dropout",Ei(Gw);class Hw extends Gw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Hw.className="SpatialDropout1D",Ei(Hw);class qw extends cb{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,pg(this.units,"units"),this.activation=Jx(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ry(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ry(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Sg(e.kernelConstraint),this.biasConstraint=Sg(e.biasConstraint),this.kernelRegularizer=aw(e.kernelRegularizer),this.biasRegularizer=aw(e.biasRegularizer),this.activityRegularizer=aw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=eb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=eb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Xi((()=>{this.invokeCallHook(e,t);const n=Qy(e),r=fg(this.activation.getClassName());let s;return null!=r?s=ry(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=ry(n,this.kernel.read()),null!=this.bias&&(s=iy(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Yx(this.activation),useBias:this.useBias,kernelInitializer:Ay(this.kernelInitializer),biasInitializer:Ay(this.biasInitializer),kernelRegularizer:rw(this.kernelRegularizer),biasRegularizer:rw(this.biasRegularizer),activityRegularizer:rw(this.activityRegularizer),kernelConstraint:kg(this.kernelConstraint),biasConstraint:kg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}qw.className="Dense",Ei(qw);class Kw extends cb{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=eb(e);for(const t of e.slice(1))if(null==t)throw new qm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],jg(e,1)]}call(e,t){return Xi((()=>{this.invokeCallHook(e,t);let n=Qy(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ko(n,e)}return function(e){if(e.rank<=1)throw new qm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],jg(e.shape,1)];return uu(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Kw.className="Flatten",Ei(Kw);class Xw extends cb{constructor(e){super(e),this.supportsMasking=!0,this.activation=Jx(e.activation)}call(e,t){return Xi((()=>{this.invokeCallHook(e,t);const n=Qy(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Yx(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Xw.className="Activation",Ei(Xw);class Yw extends cb{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Xi((()=>{return e=Qy(e),t=e,n=this.n,Xi((()=>{if(2!==t.shape.length)throw new qm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return ty(Xg(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Yw.className="RepeatVector",Ei(Yw);class Zw extends cb{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let i=0;i<r.length;++i){const e=r[i];if(this.isUnknown(e)){if(null!==a)throw new qm("Can only specifiy one unknown dimension.");a=i}else s*=e}const o=jg(e);if(null!==a){if(0===s||o%s!=0)throw new qm(n);r[a]=o/s}else if(o!==s)throw new qm(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Xi((()=>{this.invokeCallHook(e,t);const n=Qy(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return uu(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Zw.className="Reshape",Ei(Zw);class Jw extends cb{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=qg(1,e.dims.length+1);if(!ue(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ab({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=eb(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Ko(Qy(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Jw.className="Permute",Ei(Jw);class Qw extends cb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Qy(e);return Ul(Jc(n,this.maskValue),-1)}call(e,t){return Xi((()=>{this.invokeCallHook(e,t);const n=Qy(e),r=Ul(Jc(n,this.maskValue),-1,!0);return hl(n,To(r,n.dtype))}))}}Qw.className="Masking",Ei(Qw);class ev extends cb{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(eg(e.inputLength))}this.inputDim=e.inputDim,pg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,pg(this.outputDim,"outputDim"),this.embeddingsInitializer=Ry(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=aw(e.embeddingsRegularizer),this.activityRegularizer=aw(e.activityRegularizer),this.embeddingsConstraint=Sg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Xi((()=>this.maskZero?(e=Qy(e),Jc(e,fl(e))):null))}computeOutputShape(e){if(e=eb(e),null==this.inputLength)return[...e,this.outputDim];const t=eg(this.inputLength);if(t.length!==e.length-1)throw new qm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new qm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Xi((()=>{this.invokeCallHook(e,t);let n=Qy(e);"int32"!==n.dtype&&(n=Kg(n,"int32"));const r=sy(this.embeddings.read(),uu(n,[n.size]));return uu(r,eb(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ay(this.embeddingsInitializer),embeddingsRegularizer:rw(this.embeddingsRegularizer),activityRegularizer:rw(this.activityRegularizer),embeddingsConstraint:kg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ev.className="Embedding",Ei(ev);class tv extends cb{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Km}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new qm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[eb(e)]),e.length<2)throw new qm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=lg(t),t.length>1)throw new qm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===lg(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Xi((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Hg(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Xg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let o=uu(a,[r].concat(jg(e.slice(1))));o=Ko(o,[1,0]),o=uu(o,s),t.push(o),n=!0}else if(e>1){const r=qg(1,e).concat([0]);t.push(Ko(a,r)),n=!0}else t.push(a)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=uu(Ko(uu(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(qg(0,s-1));r=Ko(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=lg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Xi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new qm("`mask` should be an Array");if(!Array.isArray(e))throw new qm("`inputs` should be an Array");if(t.length!==e.length)throw new qm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:ec(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Fc(n,t[e]);return n}))}}class nv extends tv{constructor(e){super(e)}mergeFunction(e){return Xi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ll(t,e[n]);return t}))}}nv.className="Add",Ei(nv);class rv extends tv{constructor(e){super(e)}mergeFunction(e){return Xi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=hl(t,e[n]);return t}))}}rv.className="Multiply",Ei(rv);class sv extends tv{constructor(e){super(e)}mergeFunction(e){return Xi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ll(t,e[n]);return hl(1/e.length,t)}))}}sv.className="Average",Ei(sv);class av extends tv{constructor(e){super(e)}mergeFunction(e){return Xi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Rl(t,e[n]);return t}))}}av.className="Maximum",Ei(av);class ov extends tv{constructor(e){super(e)}mergeFunction(e){return Xi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Hc(t,e[n]);return t}))}}ov.className="Minimum",Ei(ov);class iv extends tv{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new qm("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(ue(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new qm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Xi((()=>Qg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new qm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new qm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new qm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new qm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Xi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let a=0;a<e.length;++a)null==t[a]?r.push(To(Qc(e[a]),"bool")):t[a].rank<e[a].rank?r.push(ec(t[a],-1)):r.push(t[a]);const s=pu(r,this.axis);return Bl(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function lv(e,t){for(;e<0;)e+=t;return e}iv.className="Concatenate",Ei(iv);class uv extends tv{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){re(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Km("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new qm(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new qm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>lv(t,e[n].shape.length))):[lv(this.axes,n.shape.length),lv(this.axes,r.shape.length)],this.normalize&&(n=Tb(n,t[0]),r=Tb(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Km("batchDot is not implemented for tensors of 4D or higher rank yet");if(re(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),re(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Km("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Xi((()=>{let n,o;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=uu(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=uu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=a[0]===a[1]?Ic(hl(e,t),a[0]):Ic(hl(Ko(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;o=Ho(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=qh(o,t)}return 1===o.shape.length&&(o=ec(o,1)),o}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[lv(this.axes,e.length),lv(this.axes,t.length)],n}computeOutputShape(e){re(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Km("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}uv.className="Dot",Ei(uv);class cv extends cb{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Xi((()=>{this.invokeCallHook(e,t);const n=Qy(e);return uy((()=>ll(ny(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}cv.className="GaussianNoise",Ei(cv);class hv extends cb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Xi((()=>{this.invokeCallHook(e,t);const n=Qy(e);return this.rate>0&&this.rate<1?uy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return hl(n,ny(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}hv.className="GaussianDropout",Ei(hv);class pv extends cb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Qy(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Xi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return uy((()=>{const t=Qy(e),r=-1.7580993408473766;let s=ic(yh(n),this.rate);s=Kg(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-a*r*this.rate,i=ll(hl(t,s),hl(ll(s,-1),r));return ll(hl(i,a),o)}),(()=>Qy(e)),t.training||!1)}return e}))}}function dv(e,t,n,r,s,a=.001){let o;if(2===e.rank)o=xu(e,t,n,r,s,a);else if(3===e.rank)o=wu(e,t,n,r,s,a);else{if(4!==e.rank)throw new Km(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=vu(e,t,n,r,s,a)}return o}pv.className="AlphaDropout",Ei(pv);class fv extends cb{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ry(e.betaInitializer||"zeros"),this.gammaInitializer=Ry(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ry(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ry(e.movingVarianceInitializer||"ones"),this.betaConstraint=Sg(e.betaConstraint),this.gammaConstraint=Sg(e.gammaConstraint),this.betaRegularizer=aw(e.betaRegularizer),this.gammaRegularizer=aw(e.gammaRegularizer)}build(e){e=eb(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new qm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ab({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Xi((()=>{const n=null!=t.training&&t.training,r=Qy(e),s=r.shape,a=s.length,o=qg(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);const l=Ym(1,a);l[i]=s[i];const u=o.slice();u.sort();const c=!ue(u,qg(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=uu(this.movingMean.read(),l),t=uu(this.movingVariance.read(),l),n=this.center?uu(this.beta.read(),l):null,s=this.scale?uu(this.gamma.read(),l):null;return dv(r,e,t,n,s,this.epsilon)}return dv(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,r,s=.001){return ue(r.slice().sort(),qg(0,e.rank-1))?function(e,t,n,r,s=.001){return Xi((()=>{const a=Xc(e,r),o=a.mean,i=a.variance;return[dv(e,o,i,n,t,s),o,i]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Xi((()=>{const a=Xc(e,r),o=a.mean,i=a.variance,l=[];for(const t of qg(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=uu(o,l),c=uu(i,l),h=null==t?null:uu(t,l),p=null==n?null:uu(n,l);return[dv(e,u,c,p,h,s),o,i]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{Xi((()=>{const r=1-n,s=e.read(),a=hl(El(s,t),r);e.write(El(s,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ay(this.betaInitializer),gammaInitializer:Ay(this.gammaInitializer),movingMeanInitializer:Ay(this.movingMeanInitializer),movingVarianceInitializer:Ay(this.movingVarianceInitializer),betaRegularizer:rw(this.betaRegularizer),gammaRegularizer:rw(this.gammaRegularizer),betaConstraint:kg(this.betaConstraint),gammaConstraint:kg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}fv.className="BatchNormalization",Ei(fv);class mv extends cb{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ry(e.betaInitializer||"zeros"),this.gammaInitializer=Ry(e.gammaInitializer||"ones"),this.betaRegularizer=aw(e.betaRegularizer),this.gammaRegularizer=aw(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=eb(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==lg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Qy(e),r=n.shape,s=r.length;return Xi((()=>{let{mean:e,variance:t}=Xc(n,this.axis,!0);const a=Ym(1,s);for(const n of this.axis)a[n]=r[n];const o=e=>null!=e&&e.shape.length!==s?uu(e,a):e;let i=o(this.gamma.read()),l=o(this.beta.read());const u=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),c.push(1)):(u.push(1),c.push(r[n]));return e=nc(e,u),t=nc(t,u),i=nc(i,c),l=nc(l,c),dv(n,e,t,l,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ay(this.betaInitializer),gammaInitializer:Ay(this.gammaInitializer),betaRegularizer:rw(this.betaRegularizer),gammaRegularizer:rw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}mv.className="LayerNormalization",Ei(mv);class gv extends cb{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new qm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new qm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new qm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new ab({ndim:4})]}computeOutputShape(e){let t,n;return e=eb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Xi((()=>{return t=Qy(e),n=this.padding,r=this.dataFormat,Xi((()=>{if(4!==t.rank)throw new qm(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new qm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new qm(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],th(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function yv(e,t,n,r,s,a){return Xi((()=>{let o;Dg(s),Lg(a),Og(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=mw(e,s);const i="same"===r?"same":"valid";return o="max"===a?Pc(e,t,n,i):cu(e,t,n,i),"channelsFirst"===s&&(o=Ko(o,[0,3,1,2])),o}))}function bv(e,t,n,r,s,a){return Xi((()=>{let o;Dg(s),Lg(a),Og(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=gw(e,s);const i="same"===r?"same":"valid";return o="max"===a?zc(e,t,n,i):hu(e,t,n,i),"channelsFirst"===s&&(o=Ko(o,[0,4,1,2,3])),o}))}gv.className="ZeroPadding2D",Ei(gv);class xv extends cb{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new qm(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(pg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new qm(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}pg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Og(this.padding),this.inputSpec=[new ab({ndim:3})]}computeOutputShape(e){const t=dw((e=eb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Xi((()=>{this.invokeCallHook(e,t),e=Xg(Qy(e),2);const n=this.poolingFunction(Qy(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return qh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class wv extends xv{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dg(s),Og(r),yv(e,t,n,r,s,"max")}}wv.className="MaxPooling1D",Ei(wv);class vv extends xv{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dg(s),Og(r),yv(e,t,n,r,s,"avg")}}vv.className="AveragePooling1D",Ei(vv);class kv extends cb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new qm(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];pg(this.poolSize,"poolSize"),pg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dg(this.dataFormat),Og(this.padding),this.inputSpec=[new ab({ndim:4})]}computeOutputShape(e){e=eb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=dw(t,this.poolSize[0],this.padding,this.strides[0]),n=dw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Xi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Qy(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Iv extends kv{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dg(s),Og(r),yv(e,t,n,r,s,"max")}}Iv.className="MaxPooling2D",Ei(Iv);class Sv extends kv{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dg(s),Og(r),yv(e,t,n,r,s,"avg")}}Sv.className="AveragePooling2D",Ei(Sv);class Nv extends cb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new qm(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];pg(this.poolSize,"poolSize"),pg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dg(this.dataFormat),Og(this.padding),this.inputSpec=[new ab({ndim:5})]}computeOutputShape(e){e=eb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=dw(t,this.poolSize[0],this.padding,this.strides[0]),n=dw(n,this.poolSize[1],this.padding,this.strides[1]),r=dw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Xi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Qy(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Tv extends Nv{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dg(s),Og(r),bv(e,t,n,r,s,"max")}}Tv.className="MaxPooling3D",Ei(Tv);class Cv extends Nv{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dg(s),Og(r),bv(e,t,n,r,s,"avg")}}Cv.className="AveragePooling3D",Ei(Cv);class Ev extends cb{constructor(e){super(e),this.inputSpec=[new ab({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Km}}class $v extends Ev{constructor(e){super(e||{})}call(e,t){return Xi((()=>{const t=Qy(e);return Uc(t,1)}))}}$v.className="GlobalAveragePooling1D",Ei($v);class Av extends Ev{constructor(e){super(e||{})}call(e,t){return Xi((()=>{const t=Qy(e);return kc(t,1)}))}}Av.className="GlobalMaxPooling1D",Ei(Av);class Rv extends cb{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dg(this.dataFormat),this.inputSpec=[new ab({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Km}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Mv extends Rv{call(e,t){return Xi((()=>{const t=Qy(e);return"channelsLast"===this.dataFormat?Uc(t,[1,2]):Uc(t,[2,3])}))}}Mv.className="GlobalAveragePooling2D",Ei(Mv);class _v extends Rv{call(e,t){return Xi((()=>{const t=Qy(e);return"channelsLast"===this.dataFormat?kc(t,[1,2]):kc(t,[2,3])}))}}_v.className="GlobalMaxPooling2D",Ei(_v);class Fv extends cb{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Nb(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Dv extends Fv{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=eb(e)).length<3)throw new qm(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=eb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Xi((()=>Rw(((e,n)=>[Qy(this.layer.call(e,t)),[]]),e=Qy(e),[],!1,null,null,!1,!0)[1]))}}Dv.className="TimeDistributed",Ei(Dv);class Ov extends Fv{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Nb(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Nb(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,cg(_g,"BidirectionalMergeMode",s),e.weights)throw new Km("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Qm(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Aw(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new qm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new ab({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),o.push(...r)}if(null!=r)throw new Km("Support for constants in Bidirectional layers is not implemented yet.");const i=a[0]instanceof ob;for(const l of a)if(l instanceof ob!==i)throw new qm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return Xi((()=>{const n=t.initialState;let r,s,a,o;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Ih(s,1)),"concat"===this.mergeMode?o=Qg([r,s]):"sum"===this.mergeMode?o=ll(r,s):"ave"===this.mergeMode?o=hl(.5,ll(r,s)):"mul"===this.mergeMode?o=hl(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(a):[o].concat(a):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){zg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),zg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Nb(t.layer);if(delete t.layer,null!=t.numConstants)throw new Km("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Lv(e){return new pb(e)}function Pv(e){return new uw(e)}function zv(e){return new ow(e)}function Bv(e){return new iw(e)}function Uv(e){return new lw(e)}function Vv(e){return new hw(e)}function Wv(e){return new cw(e)}function jv(e){return new Tw(e)}function Gv(e){return new ww(e)}function Hv(e){return new kw(e)}function qv(e){return new vw(e)}function Kv(e){return new Iw(e)}function Xv(e){return new Nw(e)}function Yv(e){return new Cw(e)}function Zv(e){return new Ew(e)}function Jv(e){return new $w(e)}function Qv(e){return new Xw(e)}function ek(e){return new qw(e)}function tk(e){return new Gw(e)}function nk(e){return new Hw(e)}function rk(e){return new Kw(e)}function sk(e){return new Yw(e)}function ak(e){return new Zw(e)}function ok(e){return new Jw(e)}function ik(e){return new ev(e)}function lk(e){return new nv(e)}function uk(e){return new sv(e)}function ck(e){return new iv(e)}function hk(e){return new av(e)}function pk(e){return new ov(e)}function dk(e){return new rv(e)}function fk(e){return new uv(e)}function mk(e){return new fv(e)}function gk(e){return new mv(e)}function yk(e){return new gv(e)}function bk(e){return new vv(e)}function xk(e){return bk(e)}function wk(e){return bk(e)}function vk(e){return new Sv(e)}function kk(e){return vk(e)}function Ik(e){return vk(e)}function Sk(e){return new Cv(e)}function Nk(e){return Sk(e)}function Tk(e){return Sk(e)}function Ck(e){return new $v(e)}function Ek(e){return new Mv(e)}function $k(e){return new Av(e)}function Ak(e){return new _v(e)}function Rk(e){return new wv(e)}function Mk(e){return new Iv(e)}function _k(e){return new Tv(e)}function Fk(e){return new Lw(e)}function Dk(e){return new Ow(e)}function Ok(e){return new zw(e)}function Lk(e){return new Pw(e)}function Pk(e){return new Dw(e)}function zk(e){return new Fw(e)}function Bk(e){return new jw(e)}function Uk(e){return new Ww(e)}function Vk(e){return new Mw(e)}function Wk(e){return new Bw(e)}function jk(e){return new Ov(e)}function Gk(e){return new Dv(e)}Ov.className="Bidirectional",Ei(Ov);const Hk=$k,qk=Ak,Kk=Rk,Xk=Mk;function Yk(e){return new cv(e)}function Zk(e){return new hv(e)}function Jk(e){return new pv(e)}function Qk(e){return new Qw(e)}function eI(e,t){return Ob(e,t)}function tI(e,t){return Bb(e,t)}function nI(e,t){return Ub(e,t)}function rI(e,t){return Lb(e,t)}function sI(e,t){return Vb(e,t)}function aI(e,t){return zb(e,t)}function oI(e,t){return function(e,t){return Xi((()=>{const n=Pb(e,t),r=function(e,t){return Xi((()=>To(Ic(Fc(Hu(e,1),Hu(t,0))),"float32")))}(e,t),s=ll(n,r);return To(qu(oc(s,0),cl(n,s),0),"float32")}))}(e,t)}function iI(e,t){return _b(e,t)}function lI(e,t){return Eb(e,t)}function uI(e,t){return $b(e,t)}function cI(e,t){return $b(e,t)}function hI(e,t){return $b(e,t)}function pI(e,t){return Cb(e,t)}function dI(e,t){return Cb(e,t)}function fI(e,t){return Cb(e,t)}function mI(e){return new tw(e)}function gI(e){return Qx(t=e),new tw({l1:null!=t?t.l1:null,l2:0});var t}function yI(e){return Qx(t=e),new tw({l2:null!=t?t.l2:null,l1:0});var t}class bI extends yb{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Tx))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function xI(e,t){return e<t}function wI(e,t){return e>t}class vI extends bI{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Km("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=xI:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=wI:this.monitorFunc=xI,this.monitorFunc===xI&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===xI?1/0:-1/0}async onEpochEnd(e,t){await fb(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const kI={earlyStopping:function(e){return new vI(e)}};var II,SI;Ge().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(II||(II={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(SI||(SI={}));const NI={};function TI(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};NI[e]=n}function CI(e){return NI[e]}function EI(e){delete NI[e]}function $I(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,o=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return AI(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type)return t.inputNames.slice(e,o).map((e=>AI(e,n,r,s)));const i=AI(t.inputNames.slice(e)[0],n,r,s),l=i.dataSync();return"number"===a.type?l[0]:De(i.shape,l)}const o=t.attrParams[e];return o&&o.value}function AI(e,t,n,r){const[s,a]=_I(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[MI(s,e)]));return void 0!==o?t[MI(s,o)][a]:void 0}function RI(e,t){const[n,r,s]=_I(e);return[MI(n,t&&t.currentContextId),r,s]}function MI(e,t){return t?`${e}-${t}`:e}function _I(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function FI(e,t,n){let r=$I("pad",e,t,n);if("explicit"===r){r=$I("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function DI(e){return e.kept?e:Co(e)}const OI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],LI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],PI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],zI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],BI=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],UI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VI=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],WI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],jI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],GI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],HI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],KI=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],XI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],YI=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],ZI=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],JI=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],QI=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],eS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class tS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,T,C,E,$,A,R,M,_,F,D,O,L,P,z,B,U,V,W].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let i=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=RI(e),a=o[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=o[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=RI(e),n=o[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=RI(e),n=o[t];n&&(n.signatureKey=u[e],i.push(n))})):i=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:o,inputs:i,outputs:l,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=CI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=rS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=rS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=dS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=dS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=aS(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=aS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=pS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=sS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=sS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=mS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=mS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=hS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=hS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=fS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=lS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=lS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=uS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=uS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=iS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=iS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=RI(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:oS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=RI(e),o=r[s];if(null!=o.outputs){const e=o.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=RI(o[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function nS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ge().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function rS(e,t,n,r=!1){const s=e[t];return null!=s?nS(s.s,r):n}function sS(e,t,n){const r=e[t];return r?r.b:n}function aS(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function oS(e){switch("string"==typeof e&&(e=II[e]),e){case II.DT_FLOAT:case II.DT_HALF:return"float32";case II.DT_INT32:case II.DT_INT64:case II.DT_INT8:case II.DT_UINT8:return"int32";case II.DT_BOOL:return"bool";case II.DT_DOUBLE:return"float32";case II.DT_STRING:return"string";default:return null}}function iS(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function lS(e,t,n){const r=e[t];return r&&r.type?oS(r.type):n}function uS(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>oS(e))):n}function cS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function hS(e,t,n){const r=e[t];return r&&r.shape?cS(r.shape):n}function pS(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function dS(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>nS(e,r))):n}function fS(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>cS(e))):n}function mS(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class gS{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return AI(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return AI(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return aS(this.node.rawAttrs,e,t);if(null!=n.s)return rS(this.node.rawAttrs,e,t);if(null!=n.b)return sS(this.node.rawAttrs,e,t);if(null!=n.shape)return hS(this.node.rawAttrs,e,t);if(null!=n.type)return lS(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return pS(this.node.rawAttrs,e,t);if(null!=n.list.s)return dS(this.node.rawAttrs,e,t);if(null!=n.list.shape)return fS(this.node.rawAttrs,e,t);if(null!=n.list.b)return mS(this.node.rawAttrs,e,t);if(null!=n.list.type)return uS(this.node.rawAttrs,e,t)}return t}}function yS(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){re(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];re(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function bS(e){return"number"!=typeof e&&!e.some((e=>e<0))}function xS(e,t,n){let r=wS(e,n);const s=!bS(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=wS(e.shape,r)})),!bS(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function wS(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class vS{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=kl(0),Zi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),yS(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Zi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return $a([],[0].concat(this.elementShape));const n=this.readMany(e);return yS(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Kh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return $a([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return yS(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),pu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ip(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];Xi((()=>{t=uu(t,[1,n,s]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],s];a[n]=uu(fu(t,o,i),this.elementShape)}return a}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}}class kS{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);yS(t,e.shape,"TensorList shape mismatch: "),Zi(e)})),this.idTensor=kl(0),this.maxNumElements=r,Zi(this.idTensor)}get id(){return this.idTensor.id}copy(){return new kS([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);yS(e,this.elementShape,"TensorList shape mismatch: ");const r=xS(this.elementShape,this.tensors,e);return Xi((()=>{const e=this.tensors.map((e=>uu(e,r)));return Kh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=xS(this.elementShape,this.tensors,e),r=this.tensors.pop();return yS(r.shape,e,"TensorList shape mismatch: "),uu(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(yS(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Zi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);yS(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=xS(this.elementShape,this.tensors,t);return uu(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);yS(this.elementShape,t.shape,"TensorList shape mismatch: "),Zi(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);yS(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=xS(this.elementShape,this.tensors,n);return 0===e.length?$a([],[0].concat(r)):Xi((()=>{const t=e.map((e=>uu(this.tensors[e],r)));return Kh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);yS(this.elementShape,t,"TensorList shape mismatch: ");const n=xS(this.elementShape,this.tensors,t);return 0===this.size()?$a([],[0].concat(n)):Xi((()=>{const e=this.tensors.map((e=>uu(e,n)));return pu(e,0)}))}}function IS(e,t,n){const[r,s]=$I("fusedOps",e,t,n),a="biasadd"===r,o=!a,i="prelu"===s,l="fusedbatchnorm"===r,u=$I("numArgs",e,t,n);if(a){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=$I("strides",e,t,n),h=FI(e,t,n),p=$I("dataFormat",e,t,n).toUpperCase(),d=$I("dilations",e,t,n);let[f,m]=$I("args",e,t,n);return o&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:$I("leakyreluAlpha",e,t,n)}}function SS(e,t,n){return{boxes:$I("boxes",e,t,n),scores:$I("scores",e,t,n),maxOutputSize:$I("maxOutputSize",e,t,n),iouThreshold:$I("iouThreshold",e,t,n),scoreThreshold:$I("scoreThreshold",e,t,n),softNmsSigma:$I("softNmsSigma",e,t,n)}}class NS{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=kl(0),this.tensorMap=new Map,Zi(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return kl(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Xi((()=>{const e=ip(t),r=n.length,s=e.length;re(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];Zi(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Xi((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Kh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function TS(e,t,n,r){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return Xi((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ll($I("a",e,t,n),$I("b",e,t,n))];case"AddN":return[zl($I("tensors",e,t,n))];case"FloorMod":case"Mod":return[Kc($I("a",e,t,n),$I("b",e,t,n))];case"Mul":return[hl($I("a",e,t,n),$I("b",e,t,n))];case"RealDiv":case"Div":return[cl($I("a",e,t,n),$I("b",e,t,n))];case"DivNoNan":return[Ku($I("a",e,t,n),$I("b",e,t,n))];case"FloorDiv":return[ul($I("a",e,t,n),$I("b",e,t,n))];case"Sub":return[El($I("a",e,t,n),$I("b",e,t,n))];case"Minimum":return[Hc($I("a",e,t,n),$I("b",e,t,n))];case"Maximum":return[Rl($I("a",e,t,n),$I("b",e,t,n))];case"Pow":return[Cl($I("a",e,t,n),$I("b",e,t,n))];case"SquaredDifference":return[Hh($I("a",e,t,n),$I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Xi((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Al($I("x",e,t,n))];case"Acos":return[Ll($I("x",e,t,n))];case"Acosh":return[Pl($I("x",e,t,n))];case"Asin":return[jl($I("x",e,t,n))];case"Asinh":return[Gl($I("x",e,t,n))];case"Atan":return[Hl($I("x",e,t,n))];case"Atan2":return[ql($I("x",e,t,n),$I("y",e,t,n))];case"Atanh":return[Kl($I("x",e,t,n))];case"Ceil":return[Nu($I("x",e,t,n))];case"Complex":return[Ca($I("real",e,t,n),$I("imag",e,t,n))];case"Cos":return[Pu($I("x",e,t,n))];case"Cosh":return[zu($I("x",e,t,n))];case"Elu":return[Zu($I("x",e,t,n))];case"Erf":return[Ju($I("x",e,t,n))];case"Exp":return[Qu($I("x",e,t,n))];case"Expm1":return[tc($I("x",e,t,n))];case"Floor":return[sc($I("x",e,t,n))];case"Log":return[yc($I("x",e,t,n))];case"Log1p":return[bc($I("x",e,t,n))];case"Imag":return[lc($I("x",e,t,n))];case"Neg":return[xc($I("x",e,t,n))];case"Reciprocal":return[wh($I("x",e,t,n))];case"Real":return[xh($I("x",e,t,n))];case"Relu":return[vh($I("x",e,t,n))];case"Round":return[Eh($I("x",e,t,n))];case"Selu":return[Ah($I("x",e,t,n))];case"Sigmoid":return[du($I("x",e,t,n))];case"Sin":return[Fh($I("x",e,t,n))];case"Sign":return[_h($I("x",e,t,n))];case"Sinh":return[Dh($I("x",e,t,n))];case"Softplus":return[wc($I("x",e,t,n))];case"Sqrt":return[pl($I("x",e,t,n))];case"Square":return[dl($I("x",e,t,n))];case"Tanh":return[mu($I("x",e,t,n))];case"Tan":return[Zh($I("x",e,t,n))];case"ClipByValue":return[Tu($I("x",e,t,n),$I("clipValueMin",e,t,n),$I("clipValueMax",e,t,n))];case"Relu6":return[kh($I("x",e,t,n))];case"Rsqrt":return[$h(AI(e.inputNames[0],t,n))];case"Prod":return[uh($I("x",e,t,n),$I("axes",e,t,n))];case"LeakyRelu":return[pc($I("x",e,t,n),$I("alpha",e,t,n))];case"Prelu":return[lh($I("x",e,t,n),$I("alpha",e,t,n))];case"IsNan":return[hc(AI(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=$I("thenBranch",e,t,n),s=$I("elseBranch",e,t,n),a=$I("cond",e,t,n),o=$I("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=$I("body",e,t,n),s=$I("cond",e,t,n),a=$I("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map((e=>e.id));let l=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[DI($I("pred",e,t,n))];case"Switch":{const r=$I("pred",e,t,n);let s=$I("data",e,t,n);return s.kept||(s=DI(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==AI(e,t,n)));return r?[DI(AI(r,t,n))]:void 0}case"Enter":{const r=$I("frameName",e,t,n),s=$I("tensor",e,t,n);return n.enterFrame(r),[DI(s)]}case"Exit":{const r=$I("tensor",e,t,n);return n.exitFrame(),[DI(r)]}case"NextIteration":{const r=$I("tensor",e,t,n);return n.nextIteration(),[DI(r)]}case"TensorArrayV3":{const r=$I("size",e,t,n),s=$I("dtype",e,t,n),a=$I("elementShape",e,t,n),o=$I("dynamicSize",e,t,n),i=$I("clearAfterRead",e,t,n),l=$I("identicalElementShapes",e,t,n),u=$I("name",e,t,n),c=new vS(u,s,r,a,l,o,i);return n.addTensorArray(c),[c.idTensor,kl(1)]}case"TensorArrayWriteV3":{const r=$I("tensorArrayId",e,t,n),s=$I("index",e,t,n),a=$I("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{const r=$I("tensorArrayId",e,t,n),s=$I("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=$I("tensorArrayId",e,t,n),s=$I("indices",e,t,n),a=$I("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=$I("tensorArrayId",e,t,n),s=$I("indices",e,t,n),a=$I("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{const r=$I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=$I("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=$I("tensorArrayId",e,t,n),s=$I("tensor",e,t,n),a=$I("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{const r=$I("tensorArrayId",e,t,n);return[kl(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=$I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=$I("tensorListId",e,t,n),s=$I("index",e,t,n),a=$I("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{const r=$I("tensorListId",e,t,n),s=$I("index",e,t,n),a=$I("elementShape",e,t,n),o=$I("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=$I("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new kS([],n,e.dtype,r),o=ip(e,0);return t.forEach(((e,t)=>{a.setItem(e,o[t])})),a}($I("tensor",e,t,n),r,$I("elementShape",e,t,n),$I("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=$I("elementShape",e,t,n),s=$I("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=function(e,t,n){return new kS([],e,t,n)}(r,s,$I(a,e,t,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=$I("tensorListId",e,t,n),s=$I("indices",e,t,n),a=$I("elementShape",e,t,n),o=$I("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{const r=$I("tensorListId",e,t,n),s=$I("elementShape",e,t,n),a=$I("elementDType",e,t,n),o=$I("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);yS(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=ip(e);return new kS(s,t,r)}($I("tensor",e,t,n),$I("elementShape",e,t,n),$I("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=$I("tensorListId",e,t,n),s=n.getTensorList(r.id),a=$I("dtype",e,t,n),o=$I("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{const r=$I("tensorListId",e,t,n),s=$I("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=$I("tensorListId",e,t,n),s=$I("elementShape",e,t,n),a=$I("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=$I("tensor",e,t,n),s=$I("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=wS(e.shape.slice(1),n),o=0===r?0:e.size/r,i=Xi((()=>{const n=[];e=uu(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:s[r-1],0],l=[1,t[r],o];n[r]=uu(fu(e,i,l),a)}return e.dispose(),n})),l=new kS([],n,e.dtype,t.length);for(let u=0;u<i.length;u++)l.setItem(u,i[u]);return l}(r,$I("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return Xi((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=$I("stride",e,t,n),s=$I("pad",e,t,n),a=$I("dataFormat",e,t,n).toUpperCase(),o=$I("dilation",e,t,n);return[Mu($I("x",e,t,n),$I("filter",e,t,n),r,s,a,o)]}case"Conv2D":{const r=$I("strides",e,t,n),s=FI(e,t,n),a=$I("dataFormat",e,t,n).toUpperCase(),o=$I("dilations",e,t,n);return[Ru($I("x",e,t,n),$I("filter",e,t,n),[r[1],r[2]],s,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=IS(e,t,n);return[Cp({x:$I("x",e,t,n),filter:$I("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=IS(e,t,n);return[Ap({x:$I("x",e,t,n),filter:$I("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=$I("outputShape",e,t,n),s=$I("strides",e,t,n),a=FI(e,t,n);return[Fu($I("x",e,t,n),$I("filter",e,t,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=$I("strides",e,t,n),s=FI(e,t,n),a=$I("dilations",e,t,n),o=$I("dataFormat",e,t,n).toUpperCase();return[Wu($I("input",e,t,n),$I("filter",e,t,n),[r[1],r[2]],s,o,[a[1],a[2]])]}case"Conv3D":{const r=$I("strides",e,t,n),s=$I("pad",e,t,n),a=$I("dataFormat",e,t,n).toUpperCase(),o=$I("dilations",e,t,n);return[Du($I("x",e,t,n),$I("filter",e,t,n),[r[1],r[2],r[3]],s,a,[o[1],o[2],o[3]])]}case"AvgPool":{const r=$I("strides",e,t,n),s=$I("pad",e,t,n),a=$I("kernelSize",e,t,n);return[cu($I("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=$I("strides",e,t,n),s=$I("pad",e,t,n),a=$I("kernelSize",e,t,n);return[Pc($I("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=$I("strides",e,t,n),s=$I("pad",e,t,n),a=$I("kernelSize",e,t,n),o=$I("includeBatchInIndex",e,t,n),{result:i,indexes:l}=Bc($I("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s,o);return[i,l]}case"AvgPool3D":{const r=$I("strides",e,t,n),s=$I("pad",e,t,n),a=$I("kernelSize",e,t,n);return[hu($I("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=$I("strides",e,t,n),s=$I("pad",e,t,n),a=$I("kernelSize",e,t,n);return[zc($I("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=$I("strides",e,t,n),s=$I("pad",e,t,n),a=$I("dilations",e,t,n),o=r[1],i=r[2],l=a[1],u=a[2];return[Gu($I("x",e,t,n),$I("filter",e,t,n),[o,i],s,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Xi((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=$I("shape",e,t,n),s=$I("dtype",e,t,n);return[Nl(r,$I("value",e,t,n),s)]}case"LinSpace":return[mc($I("start",e,t,n),$I("stop",e,t,n),$I("num",e,t,n))];case"Multinomial":{const r=$I("logits",e,t,n),s=$I("numSamples",e,t,n),a=$I("seed",e,t,n);return[Zc(r,s,a)]}case"OneHot":{const r=$I("indices",e,t,n),s=$I("depth",e,t,n),a=$I("onValue",e,t,n),o=$I("offValue",e,t,n);return[qo(r,s,a,o)]}case"Ones":return[Wc($I("shape",e,t,n),$I("dtype",e,t,n))];case"OnesLike":return[Qc($I("x",e,t,n))];case"RandomUniform":return[yh($I("shape",e,t,n),$I("minval",e,t,n),$I("maxval",e,t,n),$I("dtype",e,t,n))];case"Range":return[bh($I("start",e,t,n),$I("stop",e,t,n),$I("step",e,t,n),$I("dtype",e,t,n))];case"TruncatedNormal":{const r=$I("shape",e,t,n),s=$I("mean",e,t,n),a=$I("stdDev",e,t,n),o=$I("seed",e,t,n);return[sp(r,s,a,$I("dtype",e,t,n),o)]}case"Zeros":return[Vc($I("shape",e,t,n),$I("dtype",e,t,n))];case"ZerosLike":return[fl($I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=SS(e,t,n),u=await Td.nonMaxSuppressionWithScoreAsync(r,s,a,o,i,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=SS(e,t,n),l=$I("padToMaxOutputSize",e,t,n),u=await Td.nonMaxSuppressionPaddedAsync(r,s,a,o,i,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=SS(e,t,n);return[await Td.nonMaxSuppressionAsync(r,s,a,o,i)]}case"Where":{const r=To($I("condition",e,t,n),"bool"),s=[await cp(r)];return r.dispose(),s}case"ListDiff":return Mh($I("x",e,t,n),$I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Xi((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=$I("x",e,t,n),s=$I("k",e,t,n),a=$I("sorted",e,t,n),o=rp(r,s,a);return[o.values,o.indices]}case"Unique":{const r=$I("x",e,t,n),s=ap(r);return[s.values,s.indices]}case"UniqueV2":{const r=$I("x",e,t,n),s=$I("axis",e,t,n),a=ap(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Xi((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=$I("images",e,t,n),s=$I("size",e,t,n),a=$I("alignCorners",e,t,n),o=$I("halfPixelCenters",e,t,n);return[Td.resizeBilinear(r,[s[0],s[1]],a,o)]}case"ResizeNearestNeighbor":{const r=$I("images",e,t,n),s=$I("size",e,t,n),a=$I("alignCorners",e,t,n),o=$I("halfPixelCenters",e,t,n);return[Td.resizeNearestNeighbor(r,[s[0],s[1]],a,o)]}case"CropAndResize":{const r=$I("image",e,t,n),s=$I("boxes",e,t,n),a=$I("boxInd",e,t,n),o=$I("cropSize",e,t,n),i=$I("method",e,t,n),l=$I("extrapolationValue",e,t,n);return[Td.cropAndResize(r,s,a,o,i,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Xi((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=$I("default",e,t,n);return[AI(e.name,t,n)||r];case"Placeholder":return[AI(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[DI($I("x",e,t,n))];case"IdentityN":return $I("x",e,t,n).map((e=>DI(e)));case"Snapshot":return[DI($I("x",e,t,n))];case"Shape":return[Jh($I("x",e,t,n).shape,"int32")];case"ShapeN":return $I("x",e,t,n).map((e=>Jh(e.shape)));case"Size":return[kl($I("x",e,t,n).size,"int32")];case"Rank":return[kl($I("x",e,t,n).rank,"int32")];case"NoOp":return[kl(1)];case"Print":const s=$I("x",e,t,n),a=$I("data",e,t,n),o=$I("message",e,t,n),i=$I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,i));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Xi((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Hu($I("a",e,t,n),$I("b",e,t,n))];case"NotEqual":return[Jc($I("a",e,t,n),$I("b",e,t,n))];case"Greater":return[oc($I("a",e,t,n),$I("b",e,t,n))];case"GreaterEqual":return[ic($I("a",e,t,n),$I("b",e,t,n))];case"Less":return[dc($I("a",e,t,n),$I("b",e,t,n))];case"LessEqual":return[fc($I("a",e,t,n),$I("b",e,t,n))];case"LogicalAnd":return[Fc($I("a",e,t,n),$I("b",e,t,n))];case"LogicalNot":return[Dc($I("a",e,t,n))];case"LogicalOr":return[Oc($I("a",e,t,n),$I("b",e,t,n))];case"Select":case"SelectV2":return[qu($I("condition",e,t,n),$I("a",e,t,n),$I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Xi((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ho($I("a",e,t,n),$I("b",e,t,n),$I("transposeA",e,t,n),$I("transposeB",e,t,n))];case"Einsum":return[Yu($I("equation",e,t,n),...$I("tensors",e,t,n))];case"Transpose":return[Ko($I("x",e,t,n),$I("perm",e,t,n))];case"_FusedMatMul":const[r,s]=$I("fusedOps",e,t,n),a="biasadd"===r,o="prelu"===s,i=$I("numArgs",e,t,n),l=$I("leakyreluAlpha",e,t,n);if(a){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=$I("args",e,t,n);return[Rp({a:$I("a",e,t,n),b:$I("b",e,t,n),transposeA:$I("transposeA",e,t,n),transposeB:$I("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Xi((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[bu($I("x",e,t,n),$I("mean",e,t,n),$I("variance",e,t,n),$I("offset",e,t,n),$I("scale",e,t,n),$I("epsilon",e,t,n))];case"LRN":return[gc($I("x",e,t,n),$I("radius",e,t,n),$I("bias",e,t,n),$I("alpha",e,t,n),$I("beta",e,t,n))];case"Softmax":return[Bh($I("x",e,t,n))];case"LogSoftmax":return[Sc($I("x",e,t,n))];case"SparseToDense":return[gp($I("sparseIndices",e,t,n),$I("outputShape",e,t,n),$I("sparseValues",e,t,n),$I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Xi((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=$I("axis",e,t,n),s=$I("keepDims",e,t,n);return[kc($I("x",e,t,n),r,s)]}case"Mean":{const r=$I("axis",e,t,n),s=$I("keepDims",e,t,n);return[Uc($I("x",e,t,n),r,s)]}case"Min":{const r=$I("axis",e,t,n),s=$I("keepDims",e,t,n);return[Gc($I("x",e,t,n),r,s)]}case"Sum":{const r=$I("axis",e,t,n),s=$I("keepDims",e,t,n);return[Ic($I("x",e,t,n),r,s)]}case"All":{const r=$I("axis",e,t,n),s=$I("keepDims",e,t,n);return[Bl($I("x",e,t,n),r,s)]}case"Any":{const r=$I("axis",e,t,n),s=$I("keepDims",e,t,n);return[Ul($I("x",e,t,n),r,s)]}case"ArgMax":{const r=$I("axis",e,t,n);return[Vl($I("x",e,t,n),r)]}case"ArgMin":{const r=$I("axis",e,t,n);return[Wl($I("x",e,t,n),r)]}case"Prod":{const r=$I("axis",e,t,n),s=$I("keepDims",e,t,n);return[uh($I("x",e,t,n),r,s)]}case"Cumsum":{const r=$I("axis",e,t,n),s=$I("exclusive",e,t,n),a=$I("reverse",e,t,n);return[Bu($I("x",e,t,n),r,s,a)]}case"Bincount":const r=$I("x",e,t,n),s=$I("weights",e,t,n),a=$I("size",e,t,n);return[ku(r,s,a)];case"DenseBincount":{const r=$I("x",e,t,n),s=$I("weights",e,t,n),a=$I("size",e,t,n),o=$I("binaryOutput",e,t,n);return[Uu(r,s,a,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Xi((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=$I("n",e,t,n),s=$I("axis",e,t,n);let a=$I("tensors",e,t,n);return a=a.slice(0,r),[pu(a,s)]}case"Gather":{const r=$I("x",e,t,n),s=$I("indices",e,t,n);return[ac(r,To(s,"int32"),0)]}case"GatherV2":{const r=$I("axis",e,t,n),s=$I("batchDims",e,t,n),a=$I("x",e,t,n),o=$I("indices",e,t,n);return[ac(a,To(o,"int32"),r,s)]}case"Reverse":{const r=$I("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const a=$I("x",e,t,n);return[Ih(a,s)]}case"ReverseV2":{const r=$I("axis",e,t,n),s=$I("x",e,t,n);return[Ih(s,r)]}case"Slice":{const r=$I("begin",e,t,n),s=$I("size",e,t,n);return[fu($I("x",e,t,n),r,s)]}case"StridedSlice":{const r=$I("begin",e,t,n),s=$I("end",e,t,n),a=$I("strides",e,t,n),o=$I("beginMask",e,t,n),i=$I("endMask",e,t,n),l=$I("ellipsisMask",e,t,n),u=$I("newAxisMask",e,t,n),c=$I("shrinkAxisMask",e,t,n),h=$I("x",e,t,n);return[Yh(h,r,s,a,o,i,l,u,c)]}case"Pack":return Xi((()=>{const r=$I("axis",e,t,n),s=$I("tensors",e,t,n),a=s[0].shape,o=qh(s[0]).shape,i=s.map((e=>{const t=ue(e.shape,a);if(!t&&!ue(qh(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:uu(e,a)}));return[Kh(i,r)]}));case"Unpack":{const r=$I("axis",e,t,n),s=$I("tensor",e,t,n);return ip(s,r)}case"Tile":{const r=$I("reps",e,t,n);return[nc($I("x",e,t,n),r)]}case"Split":case"SplitV":{const r=$I("axis",e,t,n),s=$I("numOrSizeSplits",e,t,n),a=$I("x",e,t,n);return jh(a,s,r)}case"ScatterNd":{const r=$I("indices",e,t,n),s=$I("values",e,t,n),a=$I("shape",e,t,n);return[mp(r,s,a)]}case"GatherNd":{const r=$I("x",e,t,n),s=$I("indices",e,t,n);return[yp(r,s)]}case"SparseToDense":{const r=$I("sparseIndices",e,t,n),s=$I("outputShape",e,t,n),a=$I("sparseValues",e,t,n),o=$I("defaultValue",e,t,n);return[gp(r,a,s,a.dtype===o.dtype?o:To(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return Xi((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:a,reverseIndexMap:o}=$d.sparseFillEmptyRows($I("indices",e,t,n),$I("values",e,t,n),$I("denseShape",e,t,n),$I("defaultValue",e,t,n));return[r,s,a,o]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=$d.sparseReshape($I("inputIndices",e,t,n),$I("inputShape",e,t,n),$I("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[$d.sparseSegmentMean($I("data",e,t,n),$I("indices",e,t,n),$I("segmentIds",e,t,n))];case"SparseSegmentSum":return[$d.sparseSegmentSum($I("data",e,t,n),$I("indices",e,t,n),$I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Xi((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Uh($I("x",e,t,n))];case"IFFT":return[Vh($I("x",e,t,n))];case"RFFT":return[Gh($I("x",e,t,n))];case"IRFFT":return[Wh($I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return Xi((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=Ad.stringNGrams($I("data",e,t,n),$I("dataSplits",e,t,n),$I("separator",e,t,n),$I("nGramWidths",e,t,n),$I("leftPad",e,t,n),$I("rightPad",e,t,n),$I("padWidth",e,t,n),$I("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:a}=Ad.stringSplit($I("input",e,t,n),$I("delimiter",e,t,n),$I("skipEmpty",e,t,n));return[r,s,a]}case"StringToHashBucketFast":return[Ad.stringToHashBucketFast($I("input",e,t,n),$I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Xi((()=>((e,t,n)=>{switch(e.op){case"Cast":return[To($I("x",e,t,n),$I("dtype",e,t,n))];case"ExpandDims":{const r=$I("axis",e,t,n);return[ec($I("x",e,t,n),r)]}case"Squeeze":{const r=$I("axis",e,t,n);return[qh($I("x",e,t,n),r)]}case"Reshape":return[uu($I("x",e,t,n),$I("shape",e,t,n))];case"MirrorPad":return[qc($I("x",e,t,n),$I("padding",e,t,n),$I("mode",e,t,n))];case"PadV2":case"Pad":return[th($I("x",e,t,n),$I("padding",e,t,n),$I("constantValue",e,t,n))];case"SpaceToBatchND":{const r=$I("blockShape",e,t,n),s=$I("paddings",e,t,n);return[oh($I("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=$I("blockShape",e,t,n),s=$I("crops",e,t,n);return[yu($I("x",e,t,n),r,s)]}case"DepthToSpace":{const r=$I("blockSize",e,t,n),s=$I("dataFormat",e,t,n).toUpperCase();return[Vu($I("x",e,t,n),r,s)]}case"BroadcastTo":return[Su($I("x",e,t,n),$I("shape",e,t,n))];case"BroadcastArgs":return[Iu($I("s0",e,t,n),$I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=$I("keyDType",e,t,n),a=$I("valueDType",e,t,n),o=new NS(s,a);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=$I("tableHandle",e,t,n,r),a=$I("keys",e,t,n),o=$I("values",e,t,n),i=r.getHashTableById(s.id);return[await i.import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=$I("tableHandle",e,t,n,r),a=$I("keys",e,t,n),o=$I("defaultValue",e,t,n),i=r.getHashTableById(s.id);return[await i.find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=$I("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=CI(e.op);if(s&&s.customExecutor)return s.customExecutor(new gS(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ve(s)?s.then((e=>[].concat(e))):[].concat(s)}class CS{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function ES(e,t,n,r){const s=new Set,a=[];let o=null,i=null;const l=new Set,u=Object.keys(e).map((e=>_I(e)[0]));let c=[];null!=r&&(c=r.map((e=>_I(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(MS(e)||_S(e)||FS(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}const $S=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],AS=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],RS=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function MS(e){return $S.indexOf(e.op)>=0}function _S(e){return AS.indexOf(e.op)>=0}function FS(e){return RS.indexOf(e.op)>=0}class DS{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new DS(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=ES(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],o=Object.keys(s).map((e=>_I(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&a.push(e)}));const l=new Set,u=[];for(;a.length>0;){const e=a.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&a.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[_I(e)[0]])),s=t.map((e=>_I(e)[0]));let a=s.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===a.length&&(a=this._outputs);const o=this.getCompilationKey(r,a);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,a),this.compiledMap.set(o,i));const l={},u={};return Xi((()=>{const n=new CS(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=_I(t),a=[];a[s]=e[t],r[n]=a}));const a=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=TS(t,r,n,this._resourceManager);if(Ve(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,s,o)}}return null==this.parent&&n.dispose(a),t.map((e=>AI(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const a=function(e,t,n){return t[MI(e,n.currentContextId)]}(e.name,n,r);null!=a&&a.forEach((e=>{if(e&&!e.kept&&!s.has(e.id)){const n=o[e.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=RI(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=e}else e.dispose();delete o[e.id]}else null!=n&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Ge().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const a=new CS(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);const o=t.map((e=>AI(e,this.tensorsMap,a))),i=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[_I(e)[0]])),o=n.map((e=>_I(e)[0]));let i=o.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=ES(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=_I(t),s=[];s[r]=e[t],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,o,f,l);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((e=>!MS(e)&&!AI(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,r,s,a,o,i,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&$I("isConstant",e.node,r,n)&&([c]=RI(e.node.name,n)),null==r[e.node.name]){const h=TS(e.node,r,n,this._resourceManager);c||([c]=RI(e.node.name,n));const p=n.currentContext;Ve(h)?u.push(h.then((u=>(r[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[o]=RI(e.name,n);!s[o]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!AI(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!AI(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=_I(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;re(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&re(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=_I(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=_I(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class OS{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class LS{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new OS}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Uo(e,this.loadOptions);else{const t=Ha(e,this.loadOptions);if(0===t.length)t.push(Uo(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Ma(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new DS(tS.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=tS.Instance.transformGraph(e.modelInitializer);this.initializer=new DS(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Ga(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof qs||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function PS(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new LS(e,t);return await n.load(),n}const zS="3.13.0";function BS(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(GS(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const o=BS(e[a],t,n,r);s[a]=o}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function US(e,t=WS){return VS(e,t)}function VS(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(GS(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=VS(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function WS(e){return null===e?null:GS(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function jS(e,t){const n=new Map;BS(e,t,n);for(const r of Array.from(n.keys())){const e=n.get(r);if(Ve(e)){const t=await e;n.set(r,t)}}return BS(e,t,n)}function GS(e){let t=!1;if(Ge().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(4589);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof qs)&&!(e instanceof Promise)&&!t)}function HS(e){return e instanceof qs?{value:e.clone(),recurse:!1}:GS(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class qS{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class KS extends qS{constructor(){super(KS.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function XS(e){return new JS(e)}function YS(e){return new QS(e)}KS.INITIAL_CAPACITY=32;class ZS{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new oN(this,e)}filter(e){return new sN(this,e)}map(e){return new aN(this,e)}mapAsync(e){return new iN(this,e)}serialMapAsync(e){return new iN(this,e).serial()}flatmap(e){return new uN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new rN(this,e,t)}columnMajorBatch(e,t=!0,n=WS){return this.rowMajorBatch(e,t).map((e=>US(e,n)))}concatenate(e,t){return new cN(XS([this,e]),t)}take(e){return e<0||null==e?this:new nN(this,e)}skip(e){return e<0||null==e?this:new tN(this,e)}prefetch(e){return new dN(this,e)}shuffle(e,t){return new fN(this,e,t)}serial(){return new eN(this)}}class JS extends ZS{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return BS(e,t)}(t,HS)),done:!1};var t}}class QS extends ZS{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class eN extends ZS{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class tN extends ZS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Yi(e.value)}return this.upstream.next()}}class nN extends ZS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class rN extends ZS{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class sN extends ZS{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Yi(e.value)}}}class aN extends ZS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ia(e.value),n=this.transform(e.value),r=ia(n);for(const s of t)oa(s,r)||s.dispose();return{value:n,done:!1}}}class oN extends ZS{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class iN extends ZS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ia(e.value),n=await this.transform(e.value),r=ia(n);for(const s of t)oa(s,r)||s.dispose();return{value:n,done:!1}}}class lN extends ZS{constructor(){super(),this.outputQueue=new KS,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class uN extends lN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=ia(e.value),n=this.transform(e.value),r=ia(n);this.outputQueue.pushAll(n);for(const s of t)oa(s,r)||s.dispose();return!0}}class cN extends ZS{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var hN;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(hN||(hN={}));class pN extends ZS{constructor(e,t=hN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await jS(this.iterators,(function(e){return e instanceof ZS?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case hN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case hN.SHORTEST:return{value:null,done:!0};case hN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class dN extends ZS{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new qS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class fN extends dN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=hh.alea(n||Rs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class mN{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return re(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),gN((async()=>(await n.iterator()).columnMajorBatch(e,t,xN)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,gN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,gN((async()=>(await t.iterator()).filter((t=>Xi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return gN((async()=>(await t.iterator()).map((t=>Xi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return gN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return gN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,gN((async()=>{return n=YS((async()=>({value:await t.iterator(),done:!1}))).take(e),new cN(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,gN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=hh.alea(t||Rs().toString());return gN((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,gN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function gN(e,t=null){return new class extends mN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function yN(e){return gN((async()=>XS(e)),e.length)}function bN(e){if(!GS(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return gN((async()=>function(e,t=hN.FAIL){return new pN(e,t)}(await jS(e,(e=>{if(e instanceof mN)return{value:e.iterator(),recurse:!1};if(GS(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),hN.SHORTEST)),t)}function xN(e){return null===e?null:null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof qs||Se(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof qs?Kh(e):$a(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}mN.MAX_BUFFER_SIZE=1e4;class wN extends mN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const vN='"',kN=Symbol("out"),IN=Symbol("field"),SN=Symbol("quote"),NN=Symbol("quoteafterquote"),TN=Symbol("quoteinquote");class CN extends mN{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new wN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(re(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&re(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(re(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||o){const i=t[s];let l=null;if(""===i)if(o&&void 0!==o.default)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{const e=Number(i);if(isNaN(e))l=o&&"bool"===o.dtype?this.getBoolean(i):i;else if(o&&o.dtype)switch(o.dtype){case"float32":l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(i);break;default:l=e}else l=e}o&&o.isLabel?r[a]=l:n[a]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=kN;for(let o=0;o<s;o++)switch(a){case kN:switch(e.charAt(o)){case vN:r=o+1,a=SN;break;case this.delimiter:if(r=o+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=kN;break;default:a=IN,r=o}break;case IN:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o)),a=kN,r=o+1}break;case SN:switch(e.charAt(o)){case vN:a=NN}break;case NN:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o-1)),a=kN,r=o+1;break;case vN:a=SN;break;default:a=TN}break;case TN:switch(e.charAt(o)){case vN:a=SN}}if(a===NN?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class EN extends ZS{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Ge().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new EN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ie(t));return n.set(e,n.length-e.length),$a(n,t)}}class $N extends ZS{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Jh([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=Qh([r,n,a,s],[1,4])}else this.cropBox=Qh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Ge().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new $N(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&re("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=si(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Xi((()=>{const t=ec(To(e,"float32"),0);let n;n=Td.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return uu(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class AN{}class RN extends ZS{split(e){return new MN(this,e)}}class MN extends RN{constructor(e,t){super(),this.upstream=e,this.impl=new _N(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class _N extends lN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}class FN extends ZS{decodeUTF8(){return new DN(this)}}class DN extends RN{constructor(e){super(),this.upstream=e,this.impl=new ON(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class ON extends lN{constructor(e){if(super(),this.upstream=e,Ge().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(4589);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Ge().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class LN extends FN{constructor(e,t={}){super(),this.file=e,this.options=t,re(e instanceof Uint8Array||!!Ge().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await e,done:!1}}}function PN(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class zN extends AN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(PN(this.input)&&Ge().get("IS_NODE")){const e=n(2993);this.input=e.readFileSync(this.input.substr(7))}return new LN(this.input,this.options)}}class BN extends AN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return PN(this.url)?new zN(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,s;var a;"string"==typeof e?r=e:(r=e.url,s={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const o=await(n||Ms)(r,s);if(o.ok){const e=new Uint8Array(await o.arrayBuffer());return new LN(e,t)}throw new Error(o.statusText)}(this.url,this.fileOptions)}}function UN(e,t={}){return new CN(new BN(e),t)}function VN(e){const t=YS(e);return gN((async()=>t))}function WN(e){return gN((async()=>{const t=await e();return YS((()=>t.next()))}))}async function jN(e,t){return $N.create(e,t)}async function GN(e){return EN.create(e)}const HN="3.13.0";function qN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&re("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const KN=up;class XN extends q{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new H(this,Hi())}nextDataId(){return XN.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ge().get("IS_NODE")&&ns("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ce(n[0])){const s=n.map((e=>_s(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Jd(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Fs(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return No(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Hi().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Rs();return e(),{kernelMs:Rs()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){qN([e],"where");const t=this.readSync(e.dataId);return KN(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function YN(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(qN(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,l=i.data.get(o.dataId).values,u=ie(o.shape),c=n||o.dtype,h=we(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],s);return i.makeTensorInfo(o.shape,c,h)}}function ZN(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(qN(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,l=i.data.get(o.dataId).values,u=n||o.dtype,c=t(l,u,s);return i.makeTensorInfo(o.shape,u,c)}}XN.nextDataId=0,al("cpu",(()=>new XN),1);const JN=YN(Ht,(e=>e>=0?e:Math.exp(e)-1)),QN={kernelName:Ht,backendName:"cpu",kernelFunc:JN};function eT(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const tT={kernelName:cn,backendName:"cpu",kernelFunc:eT};function nT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;qN([s],"leakyRelu");const o=ie(s.shape),i=n.data.get(s.dataId).values,l=xe("float32",o);for(let u=0;u<i.length;u++)l[u]=i[u]<0?a*i[u]:i[u];return n.makeTensorInfo(s.shape,"float32",l)}const rT={kernelName:gn,backendName:"cpu",kernelFunc:nT};function sT(e){return(t,n,r,s,a)=>{const o=Jo(t,n),i=o.length,l=_e(o),u=xe(a,ie(o)),c=t.length,h=n.length,p=_e(t),d=_e(n),f=Yo(t,o),m=Yo(n,o);if(f.length+m.length===0)for(let g=0;g<u.length;++g)u[g]=e(r[g%r.length],s[g%s.length]);else for(let g=0;g<u.length;++g){const t=Ue(g,i,l),n=t.slice(-c);f.forEach((e=>n[e]=0));const a=Be(n,c,p),o=t.slice(-h);m.forEach((e=>o[e]=0));const y=Be(o,h,d);u[g]=e(r[a],s[y])}return[u,o]}}const aT=sT(((e,t)=>e<0?t*e:e));function oT(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;qN([r,s],"prelu");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,l]=aT(r.shape,s.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}const iT={kernelName:Qn,backendName:"cpu",kernelFunc:oT},lT=YN(sr,(e=>Math.max(0,e))),uT={kernelName:sr,backendName:"cpu",kernelFunc:lT},cT=YN(cr,(e=>Math.min(Math.max(0,e),6))),hT={kernelName:cr,backendName:"cpu",kernelFunc:cT};function pT(e){return(t,n,r)=>{const s=xe(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}const dT=pT((e=>1/(1+Math.exp(-e)))),fT=YN(vr,(e=>1/(1+Math.exp(-e)))),mT={kernelName:vr,backendName:"cpu",kernelFunc:fT};function gT(e,t,n,r,s){if("linear"===n)return eT({inputs:{x:t},backend:e});if("relu"===n)return lT({inputs:{x:t},backend:e});if("elu"===n)return JN({inputs:{x:t},backend:e});if("relu6"===n)return cT({inputs:{x:t},backend:e});if("prelu"===n)return oT({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return nT({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return fT({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function yT(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}const bT={kernelName:kt,backendName:"cpu",kernelFunc:yT};function xT(e,t,n="float32"){if("complex64"===n)return yT({inputs:{real:xT(e,t,"float32"),imag:xT(e,t,"float32")},backend:e});const r=Le(ie(t),n);return e.makeTensorInfo(t,n,r)}function wT(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const vT={kernelName:nr,backendName:"cpu",kernelFunc:wT};function kT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return eT({inputs:{x:s},backend:n});const e=xT(n,s.shape,s.dtype),t=kT({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=yT({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=wT({inputs:{input:s},backend:n}),t=kT({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Ie(s.dtype,a)){const e=eT({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=As([0],s.dtype),[r,a]=sT(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const IT={kernelName:xt,backendName:"cpu",kernelFunc:kT};function ST(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:o}=n,i=s;qN([a,o],e);const l=i.data.get(a.dataId).values,u=i.data.get(o.dataId).values,c="string"===a.dtype?Af(l):l,h="string"===a.dtype?Af(u):u,p=r||a.dtype,[d,f]=t(a.shape,o.shape,c,h,p);return i.makeTensorInfo(f,p,d)}:({inputs:e,backend:s})=>{const{a:a,b:o}=e,i=s;if("complex64"===a.dtype||"complex64"===o.dtype){const e=kT({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=i.data.get(r.dataId).values,u=i.data.get(s.dataId).values,c=kT({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),h=i.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=i.data.get(p.dataId).values,m=i.data.get(d.dataId).values,[g,y,b]=n(a.shape,o.shape,l,u,f,m),x=i.makeTensorInfo(b,"float32",g),w=i.makeTensorInfo(b,"float32",y),v=yT({inputs:{real:x,imag:w},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(w),v}{const e=i.data.get(a.dataId).values,n=i.data.get(o.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,o.shape,e,n,s);return i.makeTensorInfo(u,s,l)}}}function NT(e){return(t,n,r,s,a,o)=>{const i=Jo(t,n),l=ie(i),u=i.length,c=_e(i),h=xe("float32",l),p=xe("float32",l),d=Yo(t,i),f=Yo(n,i),m=Jd(r,s),g=Jd(a,o),y=t.length,b=_e(t),x=n.length,w=_e(n);if(d.length+f.length===0)for(let v=0;v<h.length;v++){const t=v%m.length,n=v%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[v]=r.real,p[v]=r.imag}else for(let v=0;v<h.length;v++){const t=Ue(v,u,c),n=t.slice(-y);d.forEach((e=>n[e]=0));const r=Be(n,y,b),s=t.slice(-x);f.forEach((e=>s[e]=0));const a=Be(s,x,w),o=e(m[2*r],m[2*r+1],g[2*a],g[2*a+1]);h[v]=o.real,p[v]=o.imag}return[h,p,i]}}const TT=sT(((e,t)=>e+t)),CT=NT(((e,t,n,r)=>({real:e+n,imag:t+r}))),ET=ST(Qe,TT,CT),$T={kernelName:Qe,backendName:"cpu",kernelFunc:ET};function AT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=ie(s.shape),i=ge(a,o),l=ie(i);re(o===l,(()=>`The new shape (${i}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const RT={kernelName:ar,backendName:"cpu",kernelFunc:AT};function MT(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;qN([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=o?s.shape[l-2]:s.shape[l-1],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=ie(f),y=ie(m),b=Jo(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);re(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`));const x=i?[y,d,h]:[y,h,d],w=AT({inputs:{x:s},backend:n,attrs:{shape:o?[g,c,p]:[g,p,c]}}),v=AT({inputs:{x:a},backend:n,attrs:{shape:x}}),k=o?w.shape[1]:w.shape[2],I=o?w.shape[2]:w.shape[1],S=i?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,E=_e(w.shape),$=_e(v.shape),[A,R,M]=o?[E[0],1,E[1]]:[E[0],E[1],1],[_,F,D]=i?[1,$[1],$[0]]:[$[1],1,$[0]],O=I*S,L=No([N,I,S],w.dtype),P=L.values,z=n.blockSize;for(let B=0;B<N;B++)for(let e=0;e<I;e+=z)for(let t=0;t<S;t+=z)for(let n=0;n<k;n+=z){const r=Math.min(e+z,I),s=Math.min(t+z,S),a=Math.min(n+z,k);for(let o=e;o<r;o++)for(let e=t;e<s;e++){let t=0;for(let r=n;r<a;r++){const n=Math.min(B,g-1)*A,s=Math.min(B,y-1)*D;t+=T[n+o*R+r*M]*C[r*_+e*F+s]}P[B*O+(o*S+e)]+=t}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const _T={kernelName:ft,backendName:"cpu",kernelFunc:MT},FT={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=MT({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),o&&(d=ET({inputs:{a:p,b:o},backend:n}),m.push(p),p=d),c&&(f=gT(n,p,c,i,h),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}};function DT(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const OT={kernelName:Ye,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;qN(t,"abs");let r=new Float32Array(ie(t.shape));return r=DT(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},LT=YN(Ze,(e=>Math.acos(e))),PT={kernelName:Ze,backendName:"cpu",kernelFunc:LT},zT=YN(Je,(e=>Math.acosh(e))),BT={kernelName:Je,backendName:"cpu",kernelFunc:zT},UT={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;qN(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=No(r[0].shape,r[0].dtype),o=a.values;for(let i=0;i<r.length;i++){const e=s[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function VT(e,t,n,r,s){const a=t.length,o=ie(t),i=_e(t),l=_e(s),u=xe(n,ie(s));for(let c=0;c<o;++c){const t=Ue(c,a,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];u[Be(n,a,l)]=e[c]}return u}function WT(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;qN(s,"transpose");const o=s.shape.length,i=new Array(o);for(let u=0;u<i.length;u++)i[u]=s.shape[a[u]];const l=VT(r.data.get(s.dataId).values,s.shape,s.dtype,a,i);return{dataId:r.write(l,i,s.dtype),shape:i,dtype:s.dtype}}const jT={kernelName:Gr,backendName:"cpu",kernelFunc:WT},GT={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;qN(s,"all");const i=ye(a,s.shape);let l=i;const u=Ac(l,s.shape.length);let c=s;null!=u&&(c=WT({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Mc(l.length,s.shape.length)),$c("all",l,c.shape.length);const[h,p]=Cc(c.shape,l),d=ie(p),f=Le(ie(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];t=t&&r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const e=AT({inputs:{x:g},backend:n,attrs:{shape:Ec(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},HT={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;qN(s,"any");const i=ye(a,s.shape);let l=i;const u=Ac(l,s.shape.length);let c=s;null!=u&&(c=WT({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Mc(l.length,s.shape.length)),$c("any",l,c.shape.length);const[h,p]=Cc(c.shape,l),d=ie(p),f=Le(ie(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];t=t||r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const e=AT({inputs:{x:g},backend:n,attrs:{shape:Ec(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},qT={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;qN(s,"argMax");let o=ye(a,s.shape);const i=Ac(o,s.shape.length);let l=s;const u=[];null!=i&&(l=WT({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=Mc(o.length,l.shape.length)),o=[o[0]],$c("argMax",o,l.shape.length);const[c,h]=Cc(l.shape,o),p=Le(ie(c),"int32"),d=ie(h),f=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const e=m*d;let t=f[e],n=0;for(let r=0;r<d;++r){const s=f[e+r];s>t&&(t=s,n=r)}p[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},KT={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;qN(s,"argMin");let o=ye(a,s.shape);const i=Ac(o,s.shape.length);let l=s;const u=[];null!=i&&(l=WT({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=Mc(o.length,l.shape.length)),o=[o[0]],$c("argMin",o,l.shape.length);const[c,h]=Cc(l.shape,o),p=Le(ie(c),"int32"),d=ie(h),f=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const e=m*d;let t=f[e],n=0;for(let r=0;r<d;++r){const s=f[e+r];s<t&&(t=s,n=r)}p[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},XT=YN(at,(e=>Math.asin(e))),YT={kernelName:at,backendName:"cpu",kernelFunc:XT},ZT=YN(ot,(e=>Math.asinh(e))),JT={kernelName:ot,backendName:"cpu",kernelFunc:ZT},QT=YN(it,(e=>Math.atan(e))),eC={kernelName:it,backendName:"cpu",kernelFunc:QT},tC=sT(((e,t)=>Math.atan2(e,t))),nC=ST(ut,tC),rC={kernelName:ut,backendName:"cpu",kernelFunc:nC},sC=YN(lt,(e=>Math.atanh(e))),aC={kernelName:lt,backendName:"cpu",kernelFunc:sC};function oC(e,t,n,r,s,a){const o=s.strideHeight,i=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=No(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let w=0;w<s.batchSize;++w){const t=w*y,n=w*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const w=y*o-p,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=t+y*b;for(let t=0;t<s.outWidth;++t){const o=t*i-d,c=Math.max(0,o),p=Math.min(s.inWidth,h+o);let y=f,b=0,w=0;for(let t=v;t<k;t+=l){const s=n+t*r[1];for(let t=c;t<p;t+=u){const n=e[s+t*r[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,w++)}if(isNaN(y))break}g[I+t*x+m]="avg"===a?b/w:y}}}return m}function iC(e,t,n,r,s=!1,a=!1){const o=No(r.outShape,"int32"),i=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=No(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*i-d;let y=n;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+n);for(let i=0;i<r.outWidth;++i){const h=i*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=u){const o=t-n;for(let n=d;n<x;n+=c){const i=n-h,l=m.get(g,t,n,e);l>w&&(w=l,v=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:o*p+i)}}o.set(v,g,t,i,e)}}return o}function lC(e,t,n,r,s,a){const o=s.strideDepth,i=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=No(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let N=0;N<s.batchSize;++N){const t=N*v,n=N*r[0];for(let x=0;x<s.inChannels;++x)for(let v=0;v<s.outDepth;++v){const N=v*o-m;let T=N;for(;T<0;)T+=u;const C=Math.min(s.inDepth,p+N),E=t+v*k;for(let t=0;t<s.outHeight;++t){const o=t*i-g;let p=o;for(;p<0;)p+=c;const m=Math.min(s.inHeight,d+o),v=E+t*I;for(let t=0;t<s.outWidth;++t){const o=t*l-y;let i=o;for(;i<0;)i+=h;const d=Math.min(s.inWidth,f+o),g=v+t*S;let k=b,I=0,N=0;for(let t=T;t<C;t+=u){const s=n+t*r[1];for(let t=p;t<m;t+=c){const n=s+t*r[2];for(let t=i;t<d;t+=h){const s=e[n+t*r[3]+x];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+x]="avg"===a?I/N:k}}}}return x}const uC={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;qN(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;re(ou(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=Yl(s.shape,a,o,1,i,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ue(u.inShape,u.outShape))c=eT({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=_e(s.shape),r=oC(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},cC={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=r;qN(s,"avgPool3d");const c=Zl(s.shape,a,o,1,i,l,u),h=lC(n.data.get(s.dataId).values,s.shape,s.dtype,_e(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},hC={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=r;qN([s,a],"avgPool3DGrad");const c=Zl(a.shape,o,i,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,T=No(a.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(s);for(let $=0;$<c.batchSize;++$)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-I,a=n-N,o=r-S;let i=0;for(let t=0;t<w;t+=y){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=b){const r=(a+t)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){const s=(o+t)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=E.get($,n,r,s,e))}}}T.set(i*C,$,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},pC={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;qN([s,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=r,c=Yl(o.shape,i,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=No(o.shape,"float32"),k=1/(d*f),I=n.data.get(s.dataId).values,S=No(s.shape,"float32",I);for(let N=0;N<c.batchSize;++N)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-w,s=n-x;let a=0;for(let t=0;t<y;t+=m){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const r=(s+t)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(a+=S.get(N,n,r,e))}}v.set(a*k,N,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},dC={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:o,mean:i,variance:l}=t;re(i.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),qN([s,i,l,a,o],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,I=0;for(let S=0;S<c.length;++S)m[S]=f[w++]+(c[S]-h[v++])*d[k++]/Math.sqrt(p[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function fC(e,t,n,r,s){const a=vi(r,t,n),o=ie(n),i=_e(r);if(a){const n=ki(t,i);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const l=No(r,s,"string"===s?Af(e):e),u=No(n,s);for(let c=0;c<u.size;++c){const e=u.indexToLoc(c),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===s?Rf(u.values):u.values}function mC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r;qN(s,"slice");const[i,l]=Ii(s,a,o);ui(s,i,l);const u=fC(n.data.get(s.dataId).values,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const gC={kernelName:yr,backendName:"cpu",kernelFunc:mC},yC={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;qN([s],"batchToSpaceND");const i=a.reduce(((e,t)=>e*t)),l=zd(s.shape,a,i),u=Bd(l.length,a.length),c=Ud(s.shape,a,i),h=Vd(o,a.length),p=Wd(c,o,a.length),d=AT({inputs:{x:s},backend:n,attrs:{shape:l}}),f=WT({inputs:{x:d},backend:n,attrs:{perm:u}}),m=AT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=mC({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function bC(e,t,n,r,s){const a=ie(r),o=Le(s,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(o[n]+=a>0?t[i]:1)}return o}function xC(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],o=No([s,n],t.dtype);for(let i=0;i<s;i++)for(let s=0;s<a;s++){const a=e.get(i,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?o.set(1,i,a):t.size>0?o.set(o.get(i,a)+t.get(i,s),i,a):o.set(o.get(i,a)+1,i,a))}return o}const wC={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=bC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,i)}},vC={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=Jo(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},kC=pT((e=>Math.ceil(e))),IC=ZN(wt,kC),SC={kernelName:wt,backendName:"cpu",kernelFunc:IC},NC=YN(vt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),TC={kernelName:vt,backendName:"cpu",kernelFunc:NC},CC={kernelName:It,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ie(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let u=0;u<i.length;u++){const e=i[u],t=l[u];r[u]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function EC(e,t,n,r){const s=we(n,ie(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=ie(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Af(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[i+t]=a[o++]}r+=e.shape[1]}))}return s}function $C(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const AC={kernelName:pn,backendName:"cpu",kernelFunc:$C};function RC(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ye(s,t[0].shape)[0];let o=Dd(t.map((e=>e.shape)),a);if(0===ie(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>ie(e.shape)>0));if(1===i.length)return eT({inputs:{x:i[0]},backend:n});if(Fd(i.map((e=>e.shape)),a),"complex64"===i[0].dtype){const e=i.map((e=>wT({inputs:{input:e},backend:n}))),t=i.map((e=>$C({inputs:{input:e},backend:n}))),r=RC({inputs:e,backend:n,attrs:{axis:a}}),s=RC({inputs:t,backend:n,attrs:{axis:a}}),o=yT({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}const l=i.map((e=>{const t=ie(e.shape.slice(a));return AT({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=Dd(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=EC(u,o,t[0].dtype,c),p=Dd(i.map((e=>e.shape)),a),d=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const MC={kernelName:St,backendName:"cpu",kernelFunc:RC};function _C(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=r;qN([s,a],"conv2d");const h=iu(l),p=Jl(s.shape,a.shape,o,u,i,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new Ws(p.outShape,s.dtype),v=_e(s.shape),k=_e(a.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],E=x?w.strides[1]:w.strides[2],$=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(s.dataId).values,M=n.data.get(a.dataId).values,_=w.values;for(let F=0;F<p.batchSize;++F){const e=F*I,t=F*C;for(let n=0;n<p.outHeight;++n){const r=t+n*E,s=n*p.strideHeight-b;for(let t=0;t<d;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const a=t*k[0],o=e+n*S;for(let e=0;e<p.outWidth;++e){const t=r+e*$,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const s=o+r*N;let i=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=R[s+e*T];for(let e=0;e<p.outChannels;++e)_[t+e*A]+=n*M[i+e];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,_)}const FC={kernelName:Nt,backendName:"cpu",kernelFunc:_C},DC={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;qN([s,a],"conv2dBackpropFilter");const h=iu(l),p=Jl(s.shape,c,o,1,i,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Ws(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new Ws(s.shape,s.dtype,v),S=new Ws(a.shape,a.dtype,k);for(let N=0;N<m;++N){const e=Math.max(0,Math.ceil((w-N)/d)),t=Math.min(p.outHeight,(p.inHeight+w-N)/d);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/f)),s=Math.min(p.outWidth,(p.inWidth+x-n)/f);for(let a=0;a<p.inChannels;++a)for(let o=0;o<p.outChannels;++o){let i=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){const e=N+u*d-w;for(let t=r;t<s;++t){const r=n+t*f-x;i+=y?I.get(l,e,r,a)*S.get(l,u,t,o):I.get(l,a,e,r)*S.get(l,o,u,t)}}b.set(i,N,n,a,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},OC={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=r;qN([s,a],"conv2dBackpropInput");const h=_e(a.shape),p=_e(s.shape);let d=iu(u);const f=Jl(o,a.shape,i,1,l,c,!1,d),m=new Ws(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:E,outHeight:$,outWidth:A,strideHeight:R,strideWidth:M}=f;d=f.dataFormat;const _=I-1-f.padInfo.top,F=S-1-f.padInfo.left,D="channelsLast"===d,O=m.strides[0],L=D?m.strides[1]:m.strides[2],P=D?m.strides[2]:1,z=D?1:m.strides[1],B=p[0],U=D?p[1]:p[2],V=D?p[2]:1,W=D?1:p[1];for(let j=0;j<k;++j)for(let e=0;e<N;++e)for(let t=0;t<T;++t){const n=t-_,r=Math.max(0,Math.ceil(n/R)),s=Math.min($,(I+n)/R);for(let a=0;a<C;++a){const o=a-F,i=Math.max(0,Math.ceil(o/M)),l=Math.min(A,(S+o)/M);let u=0;for(let t=r;t<s;++t){const r=t*R-n;for(let n=i;n<l;++n){const s=B*j+U*t+V*n,a=x*(I-1-r)+w*(S-1-(n*M-o))+v*e;for(let e=0;e<E;++e)u+=y[s+W*e]*b[a+e]}}g[O*j+L*t+P*a+z*e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},LC={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l}=r;qN([s,a],"conv3d");const u=Ql(s.shape,a.shape,o,l,i),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new Ws(u.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=w.values,S=_e(s.shape),N=_e(a.shape);for(let T=0;T<u.batchSize;++T){const e=T*S[0],t=T*w.strides[0];for(let n=0;n<u.outDepth;++n){const r=t+n*w.strides[1],s=n*u.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*d;if(n<0||n>=u.inDepth)continue;const a=t*N[0],o=e+n*S[1];for(let e=0;e<u.outHeight;++e){const t=r+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*N[1],i=o+r*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const a=s+e*N[2],o=i+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=v[o+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},PC={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:l}=r;qN([s,a],"conv3dBackpropFilterV2");const u=_e(s.shape),c=_e(a.shape),h=Ql(s.shape,l,o,1,i),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ws(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(a.dataId).values,[N,T,C,E]=c,$=n.data.get(s.dataId).values,[A,R,M,_]=u,F=h.padInfo.front,D=h.padInfo.left,O=h.padInfo.top;for(let L=0;L<m;++L){const e=Math.max(0,Math.ceil((F-L)/p)),t=Math.min(h.outDepth,(h.inDepth+F-L)/p),n=L*w;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((O-r)/d)),a=Math.min(h.outHeight,(h.inHeight+O-r)/d),o=r*v+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((D-n)/f)),l=Math.min(h.outWidth,(h.inWidth+D-n)/f),u=n*k+o;for(let o=0;o<h.inChannels;++o){const c=o*I+u;for(let u=0;u<h.outChannels;++u){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*A,g=c*N;for(let c=e;c<t;++c){const e=(L+c*p-F)*R+h,t=c*T+g;for(let c=s;c<a;++c){const s=(r+c*d-O)*M+e,a=c*C+t;for(let e=i;e<l;++e){const t=e*E+a;m+=$[(n+e*f-D)*_+s+o]*S[t+u]}}}}x[c+u]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},zC={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:l}=r;qN([s],"conv3dBackpropInputV2");const u=_e(s.shape),c=_e(a.shape),h=Ql(l,a.shape,i,1,o),p=new Ws(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=u,I=n.data.get(a.dataId).values,[S,N,T,C]=c,{batchSize:E,filterDepth:$,filterHeight:A,filterWidth:R,inChannels:M,inDepth:_,inHeight:F,inWidth:D,outChannels:O,outDepth:L,outHeight:P,outWidth:z,strideDepth:B,strideHeight:U,strideWidth:V}=h,W=$-1-h.padInfo.front,j=A-1-h.padInfo.top,G=R-1-h.padInfo.left;for(let H=0;H<E;++H)for(let e=0;e<M;++e)for(let t=0;t<_;++t){const n=t-W,r=Math.max(0,Math.ceil(n/B)),s=Math.min(L,($+n)/B);for(let a=0;a<F;++a){const o=a-j,i=Math.max(0,Math.ceil(o/U)),l=Math.min(P,(A+o)/U);for(let u=0;u<D;++u){const c=u-G,h=Math.max(0,Math.ceil(c/V)),p=Math.min(z,(R+c)/V);let E=0;for(let t=r;t<s;++t){const r=t*B-n;for(let n=i;n<l;++n){const s=n*U-o;for(let a=h;a<p;++a){const o=x*H+w*t+v*n+k*a,i=S*($-1-r)+N*(A-1-s)+T*(R-1-(a*V-c))+C*e;for(let e=0;e<O;++e)E+=b[o+e]*I[i+e]}}}d[f*H+m*t+g*a+y*u+e]=E}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},BC=YN(Rt,(e=>Math.cos(e))),UC={kernelName:Rt,backendName:"cpu",kernelFunc:BC},VC=YN(Mt,(e=>Math.cosh(e))),WC={kernelName:Mt,backendName:"cpu",kernelFunc:VC},jC={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=r,[c,h,p,d]=s.shape,f=a.shape[0],[m,g]=i,y=No([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(o.dataId).values,w=n.data.get(s.dataId).values,v=_e(s.shape),k=_e(y.shape);for(let I=0;I<f;I++){const e=4*I,t=b[e],n=b[e+1],r=b[e+2],s=b[e+3],a=x[I];if(a>=c)continue;const o=m>1?(r-t)*(h-1)/(m-1):0,i=g>1?(s-n)*(p-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(h-1)+c*o:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<d;e++){const n=e+t*k[2]+c*k[1]+I*k[0];y.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),r=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const l=g>1?n*(p-1)+e*i:.5*(n+s)*(p-1);if(l<0||l>p-1){for(let t=0;t<d;t++){const n=t+e*k[2]+c*k[1]+I*k[0];y.values[n]=u}continue}const h=Math.floor(l),f=Math.ceil(l),m=l-h;for(let n=0;n<d;n++){let s=n+h*v[2]+t*v[1]+a*v[0];const i=w[s];s=n+f*v[2]+t*v[1]+a*v[0];const l=w[s];s=n+h*v[2]+r*v[1]+a*v[0];const u=w[s];s=n+f*v[2]+r*v[1]+a*v[0];const p=i+(l-i)*m,d=u+(w[s]-u)*m;s=n+e*k[2]+c*k[1]+I*k[0],y.values[s]=p+(d-p)*o}}}else for(let t=0;t<g;++t){const r=g>1?n*(p-1)+t*i:.5*(n+s)*(p-1);if(r<0||r>p-1){for(let e=0;e<d;e++){const n=e+t*k[2]+c*k[1]+I*k[0];y.values[n]=u}continue}const o=Math.round(r),l=Math.round(e);for(let e=0;e<d;e++){const n=e+o*v[2]+l*v[1]+a*v[0],r=e+t*k[2]+c*k[1]+I*k[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},GC={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;qN(s,"cumsum");const l=Ac([a],s.shape.length);let u=s;null!=l&&(u=WT({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Mc(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=na(u.dtype,"int32"),p=Le(ie(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=o?0:d[t];else{const n=m(y,e-1);p[t]=o?d[n]+p[n]:d[t]+p[n]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=WT({inputs:{x:g},backend:n,attrs:{perm:Rc(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},HC={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=bC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,e)}if(2===s.shape.length){const e=xC(n.bufferSync(s),n.bufferSync(a),o,i);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},qC={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;re("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const i=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*h*p*d);let g=0;for(let y=0;y<i;++y)for(let e=0;e<h;++e){const t=Math.floor(e/a),n=e%a;for(let e=0;e<p;++e){const r=Math.floor(e/a),s=(n*a+e%a)*d;for(let e=0;e<d;++e){const n=e+s+c*(r+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,h,p,d],s.dtype,m)}};function KC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=r;qN([s,a],"depthwiseConv2DNative");const c=_e(s.shape),h=_e(a.shape);let p=l;null==p&&(p=[1,1]),re(ou(o,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`));const d=Jl(s.shape,a.shape,o,p,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new Ws(d.outShape,s.dtype),I=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,N=k.values;for(let T=0;T<d.batchSize;++T){const e=T*c[0],t=T*k.strides[0];for(let n=0;n<d.outHeight;++n){const r=t+n*k.strides[1],s=n*d.strideHeight-w;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=d.inHeight)continue;const a=t*h[0],o=e+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=a+e*h[1],i=o+r*d.inChannels;let l=t,u=s;for(let e=0;e<d.inChannels;++e){const t=I[i+e];for(let e=0;e<v;++e)N[l+e]+=t*S[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const XC={kernelName:Lt,backendName:"cpu",kernelFunc:KC},YC={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=r;qN([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Jl(s.shape,c,o,i,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Ws(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new Ws(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,I=new Ws(a.shape,a.dtype,k);for(let S=0;S<f;++S){const e=Math.max(0,Math.ceil((b-S)/p)),t=Math.min(h.outHeight,(h.inHeight+b-S)/p);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/d)),s=Math.min(h.outWidth,(h.inWidth+y-n)/d);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/x),i=a%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let i=e;i<t;++i){const e=S+i*p-b;for(let t=r;t<s;++t){const r=n+t*d-y;l+=v.get(u,e,r,o)*I.get(u,i,t,a)}}g.set(l,S,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},ZC={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=r;qN([s,a],"depthwiseConv2DNativeBackpropInput");const h=_e(s.shape),p=_e(a.shape),d=Jl(c,a.shape,o,i,l,u,!0),f=new Ws(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[S,N,T]=p,{batchSize:C,filterHeight:E,filterWidth:$,inChannels:A,inHeight:R,inWidth:M,outChannels:_,outHeight:F,outWidth:D,strideHeight:O,strideWidth:L}=d,P=E-1-d.padInfo.top,z=$-1-d.padInfo.left,B=_/A;for(let U=0;U<C;++U)for(let e=0;e<A;++e)for(let t=0;t<R;++t){const n=t-P,r=Math.max(0,Math.ceil(n/O)),s=Math.min(F,(E+n)/O);for(let a=0;a<M;++a){const o=a-z,i=Math.max(0,Math.ceil(o/L)),l=Math.min(D,($+o)/L);let u=0;for(let t=r;t<s;++t){const r=t*O-n;for(let n=i;n<l;++n){const s=w*U+v*t+k*n,a=S*(E-1-r)+N*($-1-(n*L-o))+T*e;for(let t=0;t<B;++t)u+=x[s+(e*B+t)]*I[a+t]}}m[g*U+y*t+b*a+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},JC={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=ie(r.shape),a=n.data.get(r.dataId).values,o=No([s,s],r.dtype),i=o.values;for(let u=0;u<a.length;u++)i[u*s+u]=a[u];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,o.dtype,o.values)}},QC={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:o,dilations:i}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Xl(r.shape,s.shape,a,o,"NHWC",i),C=ie(T),E=T.length,$=we(r.dtype,C);for(let A=0;A<d;++A)for(let e=0;e<y;++e){const t=e*w-x.top;for(let n=0;n<b;++n){const a=n*v-x.left;for(let o=0;o<g;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<I;++t){const l=a+t*N;if(l>=0&&l<m){const a=Be([A,n,l,o],c,_e(r.shape)),d=Be([e,t,o],p,_e(s.shape)),f=u[a]+h[d];f>i&&(i=f)}}}$[Be([A,e,n,o],E,_e(T))]=i}}}return{dataId:l.write(As($,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},eE={kernelName:Wt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=De(r.shape,u.data.get(r.dataId).values),h=De(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Xl(r.shape,s.shape,o,i,"NHWC",l);re(a.rank===N.length,(()=>`Error in ${Wt}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=De(N,u.data.get(a.dataId).values),C=Pe(s.shape,s.dtype);for(let E=0;E<p;++E)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<v;++e){const n=t+e*I;if(n>=0&&n<d)for(let t=0;t<k;++t){const l=r+t*S;if(l>=0&&l<f){const r=c[E][n][l][s]+h[e][t][s];r>a&&(a=r,o=e,i=t)}}}C[o][i][s]+=T[E][e][n][s]}}}return{dataId:u.write(As(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},tE={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=De(r.shape,u.data.get(r.dataId).values),h=De(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Xl(r.shape,s.shape,o,i,"NHWC",l);re(a.rank===N.length,(()=>`Error in ${Vt}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=De(N,u.data.get(a.dataId).values),C=Pe(r.shape,r.dtype);for(let E=0;E<p;++E)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=r<0?0:r;for(let e=0;e<v;++e){const n=t+e*I;if(n>=0&&n<d)for(let t=0;t<k;++t){const l=r+t*S;if(l>=0&&l<f){const r=c[E][n][l][s]+h[e][t][s];r>a&&(a=r,o=n,i=l)}}}C[E][o][i][s]+=T[E][e][n][s]}}}return{dataId:u.write(As(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},nE=sT(((e,t)=>e*t)),rE=NT(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),sE=ST(Un,nE,rE),aE={kernelName:Un,backendName:"cpu",kernelFunc:sE};function oE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;let i;qN(s,"sum"),i="bool"===s.dtype?kT({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):eT({inputs:{x:s},backend:n});const l=i.shape.length,u=ye(a,i.shape),c=Ac(u,l);let h=u,p=i;null!=c&&(p=WT({inputs:{x:i},backend:n,attrs:{perm:c}}),h=Mc(h.length,l)),$c("sum",h,p.shape.length);const[d,f]=Cc(p.shape,h);let m=xT(n,d,na(p.dtype,"int32"));const g=ie(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(o){const e=m;m=AT({inputs:{x:m},backend:n,attrs:{shape:Ec(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=c&&n.disposeIntermediateTensorInfo(p),m}const iE={kernelName:Sr,backendName:"cpu",kernelFunc:oE},lE={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:l}=lf(s,a.length);cf(o.length,l,a);const{path:u,steps:c}=hf(i,l),h=c.length;let p=null,d=o.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=uf(d,l[e]);let s;pf(t)?s=a[e]:(s=WT({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);ue(s.shape,o)||(s=AT({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===p?p=s:(p=sE({inputs:{a:s,b:p},backend:n}),f.push(p))}m<h-1&&(u[m]>=0&&(p=oE({inputs:{x:p},backend:n,attrs:{axis:u[m]-(o.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}},uE={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;qN([r,s],"eluGrad");const a=new Float32Array(ie(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let l=0;l<o.length;++l){const e=o[l];a[l]=e>=1?i[l]:i[l]*(e+1)}return n.makeTensorInfo(s.shape,"float32",a)}},cE=sT(((e,t)=>e===t?1:0)),hE=ST(Xt,cE,null,"bool"),pE={kernelName:Xt,backendName:"cpu",kernelFunc:hE},dE=Hd,fE=qd,mE=Kd,gE=Xd,yE=Yd,bE=Zd,xE=YN(Kt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+dE*n);return t*(1-((((bE*r+yE)*r+gE)*r+mE)*r+fE)*r*Math.exp(-n*n))})),wE={kernelName:Kt,backendName:"cpu",kernelFunc:xE},vE=pT((e=>Math.exp(e))),kE=ZN(Yt,vE,"float32"),IE={kernelName:Yt,backendName:"cpu",kernelFunc:kE};function SE(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,o=s.shape.length,i=s.shape.slice();let l=a;return a<0&&(re(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),i.splice(l,0,1),AT({inputs:{x:s},backend:n,attrs:{shape:i}})}const NE={kernelName:Zt,backendName:"cpu",kernelFunc:SE},TE=pT((e=>Math.expm1(e))),CE=ZN(Jt,TE),EE={kernelName:Jt,backendName:"cpu",kernelFunc:CE},$E=sT(((e,t)=>e/t)),AE=ST(jt,$E),RE={kernelName:jt,backendName:"cpu",kernelFunc:AE},ME=sT(((e,t)=>e-t)),_E=NT(((e,t,n,r)=>({real:e-n,imag:t-r}))),FE=ST(zr,ME,_E),DE={kernelName:zr,backendName:"cpu",kernelFunc:FE};function OE(e,t,n){const r=e.shape,s=r[0],a=r[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[s,a],c=ie(u),h=xe("float32",c),p=xe("float32",c);for(let g=0;g<s;g++){const e=mC({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),r=mC({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),s=yT({inputs:{real:e,imag:r},backend:n}),{real:o,imag:u}=LE(s,t,n),c=Jd(o,u);for(let t=0;t<a;t++){const e=nf(c,t);h[g*a+t]=e.real,p[g*a+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=yT({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function LE(e,t,n){const r=ie(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((i=r)&i-1)){const s=PE(a,o,r,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",s.real),t=n.makeTensorInfo(i,"float32",s.imag),a=n.makeTensorInfo([],"float32",$s(r,"float32")),o=eT({inputs:{x:a},backend:n}),l=RE.kernelFunc({inputs:{a:e,b:a},backend:n}),u=RE.kernelFunc({inputs:{a:t,b:o},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}return Qd(function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,o=0;for(let r=0;r<t;r++){const i=af(s*r,t,n),l=nf(e,r);a+=l.real*i.real-l.imag*i.imag,o+=l.real*i.imag+l.imag*i.real}n&&(a/=t,o/=t),rf(r,a,o,s)}return r}(Jd(a,o),r,t));var i}function PE(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Jd(e,t),o=n/2,i=ef(a),l=i.real,u=i.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),p=s.makeTensorInfo(c,"float32",u),d=yT({inputs:{real:h,imag:p},backend:s}),f=tf(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=yT({inputs:{real:b,imag:x},backend:s}),v=PE(l,u,o,r,s),k=v.real,I=v.imag,S=[k.length],N=s.makeTensorInfo(S,"float32",k),T=s.makeTensorInfo(S,"float32",I),C=yT({inputs:{real:N,imag:T},backend:s}),E=PE(m,g,o,r,s),$=E.real,A=E.imag,R=[$.length],M=s.makeTensorInfo(R,"float32",$),_=s.makeTensorInfo(R,"float32",A),F=yT({inputs:{real:M,imag:_},backend:s}),D=sf(n,r),O=[D.real.length],L=s.makeTensorInfo(O,"float32",D.real),P=s.makeTensorInfo(O,"float32",D.imag),z=yT({inputs:{real:L,imag:P},backend:s}),B=sE({inputs:{a:z,b:F},backend:s}),U=ET({inputs:{a:C,b:B},backend:s}),V=FE({inputs:{a:C,b:B},backend:s}),W=wT({inputs:{input:U},backend:s}),j=wT({inputs:{input:V},backend:s}),G=$C({inputs:{input:U},backend:s}),H=$C({inputs:{input:V},backend:s}),q=RC({inputs:[W,j],backend:s,attrs:{axis:0}}),K=RC({inputs:[G,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const zE={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ie(r.shape),a=r.shape[r.shape.length-1],o=AT({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=OE(o,!1,n),l=AT({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}};function BE(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,o=a||Ae(s),i=we(o,ie(r));return function(e,t,n){e.fill(t)}(i,s),t.makeTensorInfo(r,o,i)}const UE={kernelName:en,backendName:"cpu",kernelFunc:BE},VE={kernelName:tn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=xe(r.dtype,ie(r.shape)),[o,i,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let h=0;h<o;h++){const e=h*l*i*u;for(let t=0;t<i;t++){const n=t*(l*u);for(let t=0;t<l;t++){const r=t*u;for(let s=0;s<u;s++){const o=Math.round(l-t-1),i=e+n+r+s;let h=c[i];o>=0&&o<l&&(h=c[e+n+o*u+s]),a[i]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},WE=pT((e=>Math.floor(e))),jE=ZN(nn,WE),GE={kernelName:nn,backendName:"cpu",kernelFunc:jE},HE=sT(((e,t)=>Math.floor(e/t))),qE=ST(rn,HE,null,"int32"),KE={kernelName:rn,backendName:"cpu",kernelFunc:qE},XE={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=_C({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(o){const e=m;m=ET({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=gT(n,m,d,i,f),n.disposeIntermediateTensorInfo(e)}return m}},YE={kernelName:ts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=KC({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(o){const e=m;m=ET({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=gT(n,m,d,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function ZE(e,t,n,r,s,a,o,i,l){const u=No([r,a],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<s;t++){const a=e[c*s+t];r+=a*o[t],n.push(a)}if(r<0||r>=l/a)throw new Error(`Invalid indices: ${n} does not index into ${i}`);for(let e=0;e<a;e++)u.values[c*a+e]=t.get(...t.indexToLoc(r*a+e))}return u}const JE={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=ie(r.shape),o=s.shape,i=o[o.length-1],[l,u,c,h]=ai(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const p=ZE(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,i,c,h,r.shape,a);return n.makeTensorInfo(l,r.dtype,p.values)}};function QE(e,t,n){const r=No(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),a=n[0],o=n[2],i=t.locToIndex([a,o]);n[2]=t.values[i];const l=e.locToIndex(n);0<=l&&l<e.values.length&&(r.values[s]=e.values[l])}return r}const e$={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r;qN([s,a],"gatherV2");const l=ye(o,s.shape)[0],u=n.data.get(a.dataId).values,c=s.shape[l];for(let x=0;x<u.length;++x){const e=u[x];re(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=i;null==i&&(h=0);const p=ie(a.shape),d=$f(s,a,l,h),f=AT({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=AT({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=QE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},t$=sT(((e,t)=>e>t?1:0)),n$=ST(ln,t$,null,"bool"),r$={kernelName:ln,backendName:"cpu",kernelFunc:n$},s$=sT(((e,t)=>e>=t?1:0)),a$=ST(un,s$,null,"bool"),o$={kernelName:un,backendName:"cpu",kernelFunc:a$},i$={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=ie(r.shape),a=r.shape[r.shape.length-1],o=AT({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=OE(o,!0,n),l=AT({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}},l$=YN(dn,(e=>Number.isFinite(e)?1:0),"bool"),u$={kernelName:dn,backendName:"cpu",kernelFunc:l$},c$=YN(fn,(e=>Math.abs(e)===1/0?1:0),"bool"),h$={kernelName:fn,backendName:"cpu",kernelFunc:c$},p$=YN(mn,(e=>Number.isNaN(e)?1:0),"bool"),d$={kernelName:mn,backendName:"cpu",kernelFunc:p$},f$=sT(((e,t)=>e<t?1:0)),m$=ST(yn,f$,null,"bool"),g$={kernelName:yn,backendName:"cpu",kernelFunc:m$},y$=sT(((e,t)=>e<=t?1:0)),b$=ST(bn,y$,null,"bool"),x$={kernelName:bn,backendName:"cpu",kernelFunc:b$};function w$(e,t,n){const r=(t-e)/(n-1),s=Le(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}const v$={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=w$(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},k$=pT((e=>Math.log(e))),I$=ZN(wn,k$),S$={kernelName:wn,backendName:"cpu",kernelFunc:I$},N$=YN(vn,(e=>Math.log1p(e))),T$={kernelName:vn,backendName:"cpu",kernelFunc:N$},C$=sT(((e,t)=>e&&t)),E$=ST(kn,C$,null,"bool"),$$={kernelName:kn,backendName:"cpu",kernelFunc:E$},A$=YN(In,(e=>e?0:1),"bool"),R$={kernelName:In,backendName:"cpu",kernelFunc:A$},M$=sT(((e,t)=>e||t)),_$=ST(Sn,M$,null,"bool"),F$={kernelName:Sn,backendName:"cpu",kernelFunc:_$},D$={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=r;qN(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,p=ie(s.shape),d=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let m=0;m<p;m++){const e=f(m),t=h[m]*Math.pow(o+i*e,-l);d[m]=t}return n.makeTensorInfo(s.shape,s.dtype,d)}},O$={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=r;qN(o,"LRNGrad");const h=ie(o.shape),p=o.shape[3],d=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%p,t=b-e+Math.max(0,e-i),n=b-e+Math.min(p,e+i+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=u*r+l;for(let s=t;s<n;s++){let e=-2*u*c*f[s]*m[b]/r;b===s&&(e+=Math.pow(r,-c)),e*=d[b],g[s]+=e}}return n.makeTensorInfo(o.shape,s.dtype,g)}};function L$(e,t,n,r){const s=xe(r,ie(n));for(let a=0;a<s.length;++a){const n=a*t;let r=e[n];for(let s=0;s<t;++s){const t=e[n+s];(Number.isNaN(t)||t>r)&&(r=t)}s[a]=r}return s}function P$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=n;let l=s.shape;const u=l.length,c=ye(a,l);let h=c;const p=Ac(h,u);let d=i.data.get(s.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];d=VT(d,l,s.dtype,p,e),h=Mc(h.length,u),l=e}qN(s,"max"),$c("max",h,u);const[f,m]=Cc(l,h),g=L$(d,ie(m),f,s.dtype),y=i.write(g,f,s.dtype);let b=f;return o&&(b=Ec(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const z$={kernelName:En,backendName:"cpu",kernelFunc:P$},B$=sT(((e,t)=>Math.max(e,t))),U$=ST($n,B$),V$={kernelName:$n,backendName:"cpu",kernelFunc:U$},W$={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;qN(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;re(ou(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=Yl(s.shape,a,o,1,i,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ue(u.inShape,u.outShape))c=eT({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=_e(s.shape),r=oC(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},j$={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=r;qN(s,"maxPool3d");const c=Zl(s.shape,a,o,1,i,l,u),h=lC(n.data.get(s.dataId).values,s.shape,s.dtype,_e(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},G$={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=r;qN([s,a],"maxPool3DGrad");const c=Zl(a.shape,o,i,1,l,u),h=function(e,t){const n=No(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=o;const w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-d;let p=u;for(;p<0;)p+=i;const v=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+d);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=o){const n=t-b;for(let r=p;r<v;r+=i){const s=r-u;for(let a=k;a<I;a+=l){const o=a-d,i=e.get(m,t,r,a,g);i>=S&&(S=i,N=n*c*h+s*c+o)}}}n.set(N,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,S=No(a.shape,"float32"),N=n.bufferSync(s);for(let T=0;T<c.batchSize;++T)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-v,a=n-I,o=r-k;let i=0;for(let t=0;t<b;t+=m){const n=(s+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=g){const s=(a+r)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<w;a+=y){const l=(o+a)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=b*x*w-1-h.get(T,n,s,l,e)===t*x*w+r*w+a?1:0;0!==u&&(i+=N.get(T,n,s,l,e)*u)}}}S.set(i,T,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},H$={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;qN([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=Yl(i.shape,l,u,1,c,h),d=n.data.get(i.dataId).values,f=No(p.outShape,i.dtype,iC(d,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,I=No(i.shape,"float32"),S=n.data.get(s.dataId).values,N=No(s.shape,"float32",S);for(let T=0;T<p.batchSize;++T)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const r=t-k,s=n-v;let a=0;for(let t=0;t<x;t+=y){const n=(r+t)/m;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=b){const o=(s+r)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const i=x*w-1-f.get(T,n,o,e)===t*w+r?1:0;0!==i&&(a+=N.get(T,n,o,e)*i)}}I.set(a,T,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},q$={kernelName:Fn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;qN(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Yl(r.shape,s,a,[1,1],o),[h,p]=function(e,t,n,r,s){const a=oC(e,0,n,_e(t),s,"max"),o=iC(e,t,n,s,!0,r);return[a.values,o.values]}(u,r.shape,r.dtype,i,c),d=l.write(h,c.outShape,r.dtype),f=l.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},K$={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=ye(a,s.shape),l=ie(Cc(s.shape,i)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=kT({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=AE({inputs:{a:h,b:c},backend:n});u.push(p);const d=oE({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:o}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},X$={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;qN(s,"min");const i=ye(a,s.shape);let l=i;const u=Ac(l,s.shape.length);let c=s;null!=u&&(c=WT({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Mc(l.length,s.shape.length)),$c("min",l,c.shape.length);const[h,p]=Cc(c.shape,l),d=ie(p),f=Le(ie(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const e=AT({inputs:{x:g},backend:n,attrs:{shape:Ec(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Y$=sT(((e,t)=>Math.min(e,t))),Z$=ST(Ln,Y$),J$={kernelName:Ln,backendName:"cpu",kernelFunc:Z$},Q$={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:o}=r;qN(s,"mirrorPad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===o?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=_e(s.shape),f=ie(i),m=i.length,g=_e(i),y=xe(s.dtype,f);for(let b=0;b<f;b++){let e=Ue(b,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=Be(e,p,d);y[b]=h[t]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}},eA=sT(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),tA=ST(zn,eA),nA={kernelName:zn,backendName:"cpu",kernelFunc:tA};function rA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=s.shape.length;let i=a;if(-1===i&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const l=ye([i],s.shape),u=P$({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Ec(u.shape,l),h=AT({inputs:{x:u},backend:n,attrs:{shape:c}}),p=FE({inputs:{a:s,b:h},backend:n}),d=kE({inputs:{x:p},backend:n}),f=oE({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=AT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=AE({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const sA={kernelName:Cr,backendName:"cpu",kernelFunc:rA},aA={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r;qN(s,"multinomial");const l=i?s:rA({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=Le(ie(p),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+h[e+s];const n=hh.alea(o.toString()),r=f*a;for(let s=0;s<a;++s){const e=n();d[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){d[r+s]=n;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function oA(e,t,n){const r=$s(-1,n);return nE([],t,r,e,n)}const iA={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;qN(r,"neg");const s=n.data.get(r.dataId).values,[a,o]=oA(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,a)}},lA=jp,uA={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=r;qN(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=lA(u,c,o,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},cA=Gp,hA={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=r;qN(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=cA(c,h,o,i,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},pA=Hp,dA={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=r;qN(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=o,d=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=pA(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},fA=sT(((e,t)=>e!==t?1:0)),mA=ST(Wn,fA,null,"bool"),gA={kernelName:Wn,backendName:"cpu",kernelFunc:mA},yA={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r;qN(s,"oneHot");const l=ie(s.shape),u=new Float32Array(l*a);u.fill(i);const c=n.data.get(s.dataId).values;for(let h=0;h<l;++h)c[h]>=0&&c[h]<a&&(u[h*a+c[h]]=o);return n.makeTensorInfo([...s.shape,a],"int32",u)}};function bA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=wT({inputs:{input:r},backend:n}),t=bA({inputs:{x:e},backend:n}),s=$C({inputs:{input:r},backend:n}),a=bA({inputs:{x:s},backend:n}),o=yT({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return BE({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const xA={kernelName:Xr,backendName:"cpu",kernelFunc:bA},wA={kernelName:qn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=wT({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=$C({inputs:{input:s},backend:r}),o=bA({inputs:{x:a},backend:r}),i=yT({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return BE({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function vA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return SE({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{se(a,e.shape,"All tensors passed to stack must have matching shapes"),re(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],l=RC({inputs:t.map((e=>{const t=SE({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const kA={kernelName:Xn,backendName:"cpu",kernelFunc:vA},IA={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;qN(s,"pad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=ie(s.shape),h=s.shape.length,p=_e(s.shape),d=ie(i),f=i.length,m=_e(i),g=xe(s.dtype,d);0!==o&&g.fill(o);for(let y=0;y<c;y++)g[Be(Ue(y,h,p).map(((e,t)=>e+l[t])),f,m)]=u[y];return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}},SA=sT(((e,t)=>Math.pow(e,t))),NA=ST(Jn,SA),TA={kernelName:Jn,backendName:"cpu",kernelFunc:NA};function CA(e,t,n,r){const[s,a]=Cc(e,r),o=na(t,"int32"),i=Le(ie(s),o),l=ie(a);for(let u=0;u<i.length;++u){const e=u*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];i[u]=t}return{outVals:i,outShape:s,outDtype:o}}const EA={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;qN(s,"prod");const i=s.shape.length,l=ye(a,s.shape),u=Ac(l,i);let c=l,h=s;const p=[];null!=u&&(h=WT({inputs:{x:s},backend:n,attrs:{perm:u}}),p.push(h),c=Mc(c.length,i));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=CA(h.shape,h.dtype,d,c);let y=m;return o&&(y=Ec(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function $A(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Le(0,r);const s=Le(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+n;return s}const AA={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:o}=n,i=$A(r,s,o,a);return t.makeTensorInfo([i.length],a,i)}},RA=YN(rr,(e=>1/e)),MA={kernelName:rr,backendName:"cpu",kernelFunc:RA},_A={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;qN(s,"resizeBilinear");const l=_e(s.shape),[u,c]=i,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(ie([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<u;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),a=k*l[0]+n*l[1],i=k*l[0]+s*l[1];for(let e=0;e<c;e++){let t;t=o?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,u=Math.min(d-1,Math.ceil(t)),c=a+n*l[2],h=i+n*l[2],p=a+u*l[2],y=i+u*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*s,o=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=o}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},FA={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;qN([a,s],"resizeBilinearGrad");const i=_e(s.shape),[l,u,c,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[o&&p>1?u-1:u,o&&d>1?c-1:c],g=[o&&p>1?p-1:p,o&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let v=0;v<l;v++){const e=v*i[0];for(let t=0;t<p;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=e+r*i[1],o=e+s*i[1],l=n-r,p=1-l;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,d=a+n*i[2],m=a+r*i[2],g=o+n*i[2],y=o+r*i[2],v=p*u,k=p*s,I=l*u,S=l*s;for(let e=0;e<h;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},DA={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;qN(s,"resizeNearestNeighbor");const l=_e(s.shape),[u,c]=i,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let k=0;k<h;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=o?x*(t+.5):x*t;let r=Math.min(p-1,a?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*l[1];for(let e=0;e<c;e++){const t=o?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},OA={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;qN([a,s],"resizeNearestNeighborGrad");const i=_e(s.shape),l=_e(a.shape),[u,c,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[o&&d>1?c-1:c,o&&f>1?h-1:h],b=[o&&d>1?d-1:d,o&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let N=0;N<u;N++){const e=N*i[0];for(let t=0;t<c;t++){const n=e+t*i[1],r=Math.floor(t*v),s=Math.floor(r-I/2);for(let a=0;a<h;a++){const r=n+a*i[2],u=Math.floor(a*k),y=Math.floor(u-S/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<I;r++){const u=r+s;if(u<0||u>=d)continue;const p=e+u*l[1],m=u*x;if(t===Math.min(c-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const r=p+t*l[2],s=t*w;a===Math.min(h-1,o?Math.round(s):Math.floor(s))&&(i+=g[r+n])}}m[r+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},LA={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;qN(s,"reverse");const o=s.shape.length,i=ye(a,s.shape);if(0===o)return eT({inputs:{x:s},backend:n});const l=new Ws(s.shape,s.dtype),u=n.bufferSync(s);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();i.forEach((e=>t[e]=s.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},PA={kernelName:Jr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,l=xe(r.dtype,ie(r.shape)),[u,c,h,p]=r.shape,[d,f]=Pd(o,c,h),m=Math.sin(s),g=Math.cos(s),y=i.data.get(r.dataId).values;for(let b=0;b<u;b++){const e=b*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let o=0;o<p;o++){const i=[u,t,r,o],b=i[2],x=i[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===o?255:a[o]),w>=0&&w<h&&v>=0&&v<c&&(k=y[e+v*(h*p)+w*p+o]),l[e+n+s+o]=k}}}}return{dataId:i.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},zA=YN(pr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),BA={kernelName:pr,backendName:"cpu",kernelFunc:zA},UA=pT((e=>1/Math.sqrt(e))),VA=ZN(dr,UA),WA={kernelName:dr,backendName:"cpu",kernelFunc:VA};function jA(e,t,n,r,s,a,o,i,l,u){const c=[r/s,s],h=e.values,p=t.values;if(0===r)return No(n,t.dtype);const d=No(c,t.dtype);d.values.fill(l);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<o;t++){const n=h[f*o+t];e.push(n),a+=n*i[t]}if(a<0||a>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)u?d.values[a*s+n]+=p[f*s+n]:d.values[a*s+n]=0===t.rank?p[0]:p[f*s+n]}return d}const GA={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=li(0,s,o),p=jA(n.bufferSync(s),n.bufferSync(a),o,h,u,l,i,c,0,!0);return n.makeTensorInfo(o,p.dtype,p.values)}},HA={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;qN([r,s,a],"select");const o=r.shape.length,i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=na(s.dtype,a.dtype),h=Le(ie(s.shape),c);let p=0;const d=0===o||o>1||1===s.shape.length?1:ie(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<d;e++)1===i[f]?h[p++]=l[f]:h[p++]=u[f];return n.makeTensorInfo(s.shape,c,h)}},qA=jd,KA=Gd,XA=YN(gr,(e=>e>=0?KA*e:qA*(Math.exp(e)-1))),YA={kernelName:gr,backendName:"cpu",kernelFunc:XA},ZA=YN(wr,(e=>e<0?-1:e>0?1:0)),JA={kernelName:wr,backendName:"cpu",kernelFunc:ZA},QA=YN(br,(e=>Math.sin(e))),eR={kernelName:br,backendName:"cpu",kernelFunc:QA},tR=YN(xr,(e=>Math.sinh(e))),nR={kernelName:xr,backendName:"cpu",kernelFunc:tR},rR=Math.log(1.1920928955078125e-7)+2,sR=YN(kr,(e=>{const t=e>-rR,n=e<rR,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),aR={kernelName:kr,backendName:"cpu",kernelFunc:sR},oR={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;qN([s],"spaceToBatchND");const i=ie(a),l=[[0,0]];l.push(...o);for(let g=1+a.length;g<s.shape.length;++g)l.push([0,0]);const u=IA.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=zd(u.shape,a,i,!1),h=Bd(c.length,a.length,!1),p=Ud(u.shape,a,i,!1),d=AT({inputs:{x:u},backend:n,attrs:{shape:c}}),f=WT({inputs:{x:d},backend:n,attrs:{perm:h}}),m=AT({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function iR(e,t,n,r,s,a,o){const i=t[0],l=a[0],u=new Array(l),c=new Array(i),h=t[1];if(0===l){if(0!==i)throw new Error(mf(i));return[we(n,0),[0,h],we(s,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let g=0;g<i;++g){const t=e[g*h];if(t<0)throw new Error(gf(g,t));if(t>=l)throw new Error(yf(g,t,l));++f[t],p=p&&t>=d,d=t}let m=!0;for(let g=0;g<l;++g){const e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){const t=e,n=r;for(let e=0;e<i;++e)c[e]=e;return[t,[i,h],n,u,c]}{const t=f[l-1],a=we(n,t*h),p=we(s,t),d=new Array(l).fill(0);for(let n=0;n<i;++n){const t=e[n*h],s=d[t],o=(0===t?0:f[t-1])+s;d[t]++;for(let r=0;r<h;++r)a[o*h+r]=e[n*h+r];p[o]=r[n],c[n]=o}for(let e=0;e<l;++e)if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=o}return[a,[t,h],p,u,c]}}const lR={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[h,p,d,f,m]=iR(i,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function uR(e,t,n,r,s){const a=ie(r),o=t[0],i=s.length,l=[];let u=1,c=-1;for(let m=0;m<i;++m){const e=s[m];if(-1===e){if(-1!==c)throw new Error(bf(c,m));c=m,l.push(1)}else{if(e<0)throw new Error(xf(m,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(vf(r,l));l[c]=e}if(ie(l)!==a)throw new Error(kf(r,l));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const d=[];if(i>0){d[i-1]=1;for(let e=i-2;e>=0;--e)d[e]=d[e+1]*l[e+1]}const f=we(n,o*i);for(let m=0;m<o;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*p[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/d[e]),t%=d[e]}return[f,[o,i],l]}const cR={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=uR(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function hR(e,t,n,r,s,a=!1,o=0){const i=r.length,l=[t[0],e.length/t[0]],u=l[1],c=i>0?s[i-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=we(n,h.reduce(((e,t)=>e*t),1));if(0===i)return c>0&&p.fill(o),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=s[d];for(;;){let t=0;if(f<i){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Nf(g,c));g>m&&p.fill(o,m*u,g*u);for(let n=d;n<f;++n){const t=r[n];if(t<0||t>=l[0])throw new Error(Tf(n,r[n],l[0]));for(let n=0;n<u;n++)p[g*u+n]+=e[t*u+n]}if(a)for(let e=0;e<u;e++)p[g*u+e]/=f-d;if(d=f,++f,m=g+1,g=t,f>i)break}return m<c&&p.fill(o,m*u,c*u),[p,h]}const pR={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=hR(o,r.shape,r.dtype,i,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},dR={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=hR(o,r.shape,r.dtype,i,l);return n.makeTensorInfo(c,r.dtype,u)}},fR={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=li(0,s,i),d=jA(n.bufferSync(s),n.bufferSync(a),i,p,c,u,l,h,n.data.get(o.dataId).values[0],!1);return n.makeTensorInfo(i,d.dtype,d.values)}},mR={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=ye(o,s.shape)[0],l=ff(s,a,i),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[i]=e;const r=mC({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,r}))}},gR=pT((e=>Math.sqrt(e))),yR=YN(Ir,(e=>Math.sqrt(e))),bR={kernelName:Ir,backendName:"cpu",kernelFunc:yR},xR={kernelName:Fr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;qN(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let o=0;o<s.length;++o){const e=s[o];a[o]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},wR=sT(((e,t)=>{const n=e-t;return n*n})),vR=ST(_r,wR),kR={kernelName:_r,backendName:"cpu",kernelFunc:vR},IR=YN(Yr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),SR={kernelName:Yr,backendName:"cpu",kernelFunc:IR};function NR(e,t,n,r){const s=No(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+r[t];s.set(t.get(...o),...e)}return s}const TR={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;qN(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Si(s.shape,a,o,i,l,u,c,h,p);let v;if(m)v=AT({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){re(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=hi(b,x,w),t=mC({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=AT({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=NR(d,n.bufferSync(s),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class CR{constructor(e,t,n,r,s,a){this.separator=_s(e),this.nGramWidths=t,this.leftPad=_s(n),this.rightPad=_s(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){const i=this.getPadWidth(a),l=Math.max(0,i-o),u=Math.max(0,i-(s-(o+1))),c=a-(l+u),h=t+(l>0?0:o-i);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[r+o]=new Uint8Array(p);const d=n[r+o];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=we("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)a[t]=0;return[e,a]}a[0]=0;for(let i=1;i<=s;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),a[i]=a[i-1]+n}const o=new Array(a[s]);for(let i=0;i<s;++i){const n=t[i];let r=a[i];if(this.nGramWidths.forEach((s=>{const a=t[i+1]-t[i],l=this.getNumNGrams(a,s);this.createNGrams(e,n,o,r,l,s),r+=l})),this.preserveShort&&r===a[i]){const s=t[i+1]-t[i];if(0===s)continue;const a=s+2*this.padWidth,l=1;this.createNGrams(e,n,o,r,l,a)}}return[o,a]}}function ER(e,t,n,r,s,a,o,i){return new CR(n,r,s,a,o,i).compute(e,t)}const $R={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=ER(p,d,s,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function AR(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function RR(e,t,n){const r=e.length,s=[];let a=0,o=0;const i=new Array(r);for(let p=0;p<r;++p){const r=s.length;AR(e[p],t,n,s);const l=s.length-r;i[p]=l,a+=l,o=Math.max(o,l)}const l=we("int32",2*a),u=new Array(a),c=[r,o];let h=0;for(let p=0;p<r;++p)for(let e=0;e<i[p];++e)l[2*h]=p,l[2*h+1]=e,u[h]=s[h],++h;return[l,u,c]}const MR={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[u,c,h]=RR(i,l,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function _R(e,t){const n=we("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Es(e[r]).modulo(t).getLowBitsUnsigned();return n}const FR={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=_R(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",o)}},DR=YN(Br,(e=>Math.tan(e))),OR={kernelName:Br,backendName:"cpu",kernelFunc:DR},LR=YN(Ur,(e=>Math.tanh(e)));function PR(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=No(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);r.values[s]=e.values[a]}return r}const zR=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function BR(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,o=Math.log(s),i=.5*Math.exp(2*o/3),l=.5*Math.sqrt(o*i*(s-i)/s)*Math.sign(a-s/2);BR(e,t,Math.max(n,Math.floor(t-a*i/s+l)),Math.min(r,Math.floor(t+(s-a)*i/s+l)))}const s=e[t];let a=n,o=r;for(Q(e,n,t),zR(e[r],s)>0&&Q(e,n,r);a<o;){for(Q(e,a,o),a++,o--;zR(e[a],s)<0;)a+=1;for(;zR(e[o],s)>0;)o-=1}0===zR(e[n],s)?Q(e,n,o):(o+=1,Q(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function UR(e,t,n,r,s){const a=t[t.length-1],[o,i]=[e.length/a,a],l=xe(n,o*r),u=xe("int32",o*r);for(let h=0;h<o;h++){const t=h*i,n=e.subarray(t,t+i);let a=new Array(n.length);n.forEach(((e,t)=>a[t]={value:e,index:t})),r<a.length&&(BR(a,r),a=a.slice(0,r)),s&&a.sort(zR);const o=h*r,c=l.subarray(o,o+r),p=u.subarray(o,o+r);for(let e=0;e<r;e++)c[e]=a[e].value,p[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[No(c,n,l),No(c,"int32",u)]}function VR(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Z(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Z(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Z(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function WR(e,t,n,r,s,a,o,i,l,u,c){return 0<=i&&i<t&&0<=l&&l<n?e[o*r+i*s+l*a+u]:c}function jR(e,t,n,r,s,a,o,i,l,u,c){return WR(e,t,n,r,s,a,o,Math.round(i),Math.round(l),u,c)}function GR(e,t,n,r,s,a,o,i,l,u,c){const h=Math.floor(i),p=Math.floor(l),d=h+1,f=p+1;return(d-i)*((f-l)*WR(e,t,n,r,s,a,o,h,p,u,c)+(l-p)*WR(e,t,n,r,s,a,o,h,f,u,c))+(i-h)*((f-l)*WR(e,t,n,r,s,a,o,d,p,u,c)+(l-p)*WR(e,t,n,r,s,a,o,d,f,u,c))}function HR(e,t,n,r){const s=ye(t,n)[0],a=[1,n[0],1];for(let f=0;f<s;f++)a[0]*=n[f];a[1]=n[s];for(let f=s+1;f<n.length;f++)a[2]*=n[f];const o={},i=new Int32Array(n[s]),l=new Ws(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let f=0;f<n[s];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<a[0];t++)for(let n=0;n<a[2];n++)e.push(l.get(t,f,n));t=e.join(",")}if(void 0!==o[t])i[f]=o[t];else{const e=Object.keys(o).length;o[t]=e,i[f]=e,u.push(f)}}const h=a.slice();h[1]=Object.keys(o).length;const p=new Ws(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(l.get(n,e,r),n,t,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:i}}const qR=[FT,OT,PT,BT,$T,UT,GT,HT,qT,KT,YT,JT,eC,rC,aC,uC,cC,hC,pC,_T,dC,yC,wC,vC,IT,SC,TC,bT,CC,MC,FC,DC,OC,LC,PC,zC,UC,WC,jC,GC,HC,qC,XC,YC,ZC,JC,QC,eE,tE,lE,QN,uE,pE,wE,IE,NE,EE,zE,UE,VE,GE,KE,XE,YE,JE,e$,r$,o$,tT,i$,AC,u$,h$,d$,rT,g$,x$,v$,S$,T$,$$,R$,F$,D$,O$,z$,V$,W$,j$,G$,H$,q$,K$,X$,J$,Q$,nA,aA,aE,iA,uA,hA,dA,gA,yA,wA,kA,IA,TA,iT,EA,AA,vT,RE,MA,uT,hT,RT,_A,FA,DA,OA,LA,PA,BA,WA,GA,HA,YA,mT,JA,eR,nR,gC,sA,aR,oR,lR,cR,pR,dR,fR,mR,bR,xR,kR,SR,TR,$R,MR,FR,DE,iE,OR,{kernelName:Ur,backendName:"cpu",kernelFunc:LR},{kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;qN(s,"tile");const o=PR(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},{kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r;qN(s,"topk");const i=n.data.get(s.dataId).values,[l,u]=UR(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},{kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=n,[c,h,p,d]=s.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=_e(s.shape),b=y[0],x=y[1],w=y[2],v=xe(s.dtype,ie(g));v.fill(l);const k=r.data.get(s.dataId).values,I=r.data.get(a.dataId).values;for(let S=0;S<c;++S){const e=1===a.shape[0]?I:I.subarray(8*S,8*S+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<d;++r){let s;const a=e[6]*n+e[7]*t+1;if(0===a)continue;const u=(e[0]*n+e[1]*t+e[2])/a,c=(e[3]*n+e[4]*t+e[5])/a,d=VR(u,p,i),f=VR(c,h,i);switch(o){case"nearest":s=jR(k,h,p,b,x,w,S,f,d,r,l);break;case"bilinear":s=GR(k,h,p,b,x,w,S,f,d,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}v[S*b+t*x+n*w+r]=s}return r.makeTensorInfo(g,s.dtype,v)}return{dataId:r.write(v,g,s.dtype),shape:s.shape,dtype:s.dtype}}},jT,{kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;qN(a,"unique");const o=r.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:u}=HR(o,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s.shape.length,i=s.shape[a],l=new Array(o-1);let u=0;for(let d=0;d<o;d++)d!==a&&(l[u++]=s.shape[d]);const c=new Array(o).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(i);for(let d=0;d<p.length;d++){c[a]=d;const e=mC({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[d]=AT({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return p}},{kernelName:Kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r;qN(s,"unsortedSegmentSum");const i=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let p=0;p<u;++p){const e=SE({inputs:{input:c},backend:n,attrs:{dim:p+1}});c=e,l.push(e)}for(let p=0;p<o;++p){const e=$s(p,"int32"),t=n.makeTensorInfo([],"int32",e),r=hE({inputs:{a:t,b:c},backend:n}),a=kT({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),o=sE({inputs:{a:a,b:s},backend:n}),u=oE({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(u),l.push(t),l.push(r),l.push(a),l.push(o),l.push(u)}const h=vA({inputs:i,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},xA];for(const OB of qR)us(OB);const KR={},XR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function YR(e,t){if(!(e in KR)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete KR[e]}),!1),1===e?n.getContext("webgl",XR)||n.getContext("experimental-webgl",XR):n.getContext("webgl2",XR)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;KR[e]=n}const n=KR[e];return null==n||n.isContextLost()?(delete KR[e],YR(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),KR[e])}var ZR,JR,QR;function eM(e,t){return[t,e]}function tM(e){const t=ie(e);return pe(Math.ceil(t/4))}function nM(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function rM(e,t){const n=e;let r,s,a,o,i,l,u,c,h,p;return 2===Ge().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function sM(e,t){const n=t();return Ge().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function aM(e){return!!(Ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function oM(e,t){return fM(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(ZR||(ZR={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(JR||(JR={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(QR||(QR={}));const iM=/ERROR: [0-9]+:([0-9]+):/g;function lM(e,t){if(sM(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function uM(e,t,n,r,s,a,o){const i=e.getAttribLocation(t,n);return-1!==i&&(sM(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),sM(e,(()=>e.vertexAttribPointer(i,s,e.FLOAT,!1,a,o))),sM(e,(()=>e.enableVertexAttribArray(i))),!0)}function cM(e,t,n,r){sM(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),sM(e,(()=>e.activeTexture(e.TEXTURE0+n))),sM(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),sM(e,(()=>e.uniform1i(n,r)))}function hM(e,t,n){sM(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),sM(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function pM(e,t){sM(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),sM(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function dM(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function fM(e,t,n){const r=sM(e,(()=>t()));if(null==r)throw new Error(n);return r}function mM(e,t=2){return ie(e.slice(0,e.length-t))}function gM(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function yM(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[mM(e),...gM(e)]),t}function bM(e){return e%2==0}function xM(e,t){if(ue(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(bM(n)&&bM(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&bM(e[0])&&bM(t[0])}let wM,vM;function kM(e,t){return null!=e.getExtension(t)}function IM(e){try{if(null!=YR(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function SM(e){const t=rM(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function NM(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&re("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const TM=Ge();function CM(){let e,t,n,r,s,a,o,i,l,u;return 2===Ge().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",o="out vec4 outputColor;",i="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function EM(e,t,n="index"){const r=_e(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function $M(e,t,n="index"){const r=_e(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function AM(e){const t=_e(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}TM.registerFlag("HAS_WEBGL",(()=>TM.getNumber("WEBGL_VERSION")>0)),TM.registerFlag("WEBGL_VERSION",(()=>IM(2)?2:IM(1)?1:0)),TM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),TM.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===TM.get("WEBGL_VERSION"))),TM.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),TM.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),TM.registerFlag("WEBGL_PACK",(()=>TM.getBool("HAS_WEBGL"))),TM.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_PACK_CLIP",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_PACK_REDUCE",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_LAZILY_UNPACK",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_CONV_IM2COL",(()=>TM.getBool("WEBGL_PACK"))),TM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==wM){const t=YR(e);wM=t.getParameter(t.MAX_TEXTURE_SIZE)}return wM}(TM.getNumber("WEBGL_VERSION")))),TM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==vM){const t=YR(e);vM=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,vM)}(TM.getNumber("WEBGL_VERSION")))),TM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=TM.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=YR(e);return t=kM(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:kM(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),TM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>TM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ya())),TM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=YR(e);if(1===e){if(!kM(t,"OES_texture_float"))return!1}else if(!kM(t,"EXT_color_buffer_float"))return!1;return SM(t)}(TM.getNumber("WEBGL_VERSION")))),TM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!TM.getBool("WEBGL_FORCE_F16_TEXTURES")&&TM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),TM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=YR(e);if(1!==e){if(kM(t,"EXT_color_buffer_float"))return SM(t);const e="EXT_color_buffer_half_float";if(kM(t,e)){const n=t.getExtension(e);return function(e,t){const n=rM(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!kM(t,"OES_texture_float")&&!!kM(t,"WEBGL_color_buffer_float")&&SM(t)}(TM.getNumber("WEBGL_VERSION")))),TM.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=TM.getNumber("WEBGL_VERSION"))&&null!=YR(e).fenceSync;var e})),TM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>TM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),TM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),TM.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ya()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),TM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),TM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),TM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),TM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const RM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:MM}=y;function _M(e,t,n){const r=[];if(e.forEach((e=>{const t=ie(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=WM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?DM(e,r):FM(e,r);const a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=MM(e.shapeInfo.logicalShape,t.logicalShape),l=VM(o),u=o-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let p="";p=o<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===ie(e.shapeInfo.logicalShape),m=1===ie(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=a-2,t=a-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?d="return vec4(outputValue.x);":i.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&null==e.shapeInfo.flatOffset&&ue(o,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=VM(l),c=MM(e.shapeInfo.logicalShape,t.logicalShape),h=l-i;let p;const d=["x","y","z","w","u","v"];p=0===i?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=CM(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(i);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${OM}\n    ${LM}\n    ${PM}\n  `}(i);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ue(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let o=a,i="",l="b, r, c";for(let u=2;u<e.length-1;u++)o*=e[e.length-u-1],i=`\n      int b${u} = index / ${o};\n      index -= b${u} * ${o};\n    `+i,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(i)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ue(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${$M(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=EM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${$M(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=EM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=EM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=EM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(i)),n.packedInputs&&(h+=zM),[h,l,c,s,u,a,n.userCode].join("\n")}function FM(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=BM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${l}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${UM(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],o=s[1];if(1===o&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=BM(n);return 1===o?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&ue(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:i}=be(n),l=o;if(l.length<n.length){const n=["row","col"];return`\n      ${FM(jM(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${GM(n,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${UM(e)}\n      }\n    `;const u=a[0],c=a[1],h=BM(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=be(n),u=i;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${FM(jM(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${GM(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${UM(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===o&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=BM(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${a} + col * ${o} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:u}=be(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${FM(jM(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${GM(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${a}, 1)));\n        ${UM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===i&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=BM(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:u}=be(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${FM(jM(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${GM(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${a}, ${s})) +\n          depth3;\n        ${UM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];return d===i&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:d===s&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${BM(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=be(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${FM(jM(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${GM(t,a)});\n      }\n    `}const o=t[5],i=t[4]*o,l=t[3]*i,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${UM(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];return f===c&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===o&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${BM(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function DM(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${CM().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=CM();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=CM();if(null!=a&&ue(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${DM(jM(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${GM(a,r)});\n        }\n      `}const i=CM();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const l=o[0],u=o[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=CM();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[o-1]/2);let p=h*Math.ceil(a[o-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<o-1;m++)d=`int b${m}, `+d,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const OM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",LM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",PM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",zM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function BM(e){return`offset${e}`}function UM(e){const t=e.name,n=ie(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function VM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function WM(e,t,n){const{newShape:r,keptDims:s}=be(t),a=t.length,o=e&&3===a&&1===t[0],i=o?t.slice(1):r,l=!e&&a>1&&!ue(t,n)&&r.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:s}}function jM(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function GM(e,t){return t.map((t=>e[t])).join(", ")}function HM(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!ue(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,i=s.isUniform?null:s.texData.texShape;if(!ue(o,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${i} must match`)}))}function qM(e){return Ge().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class KM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ZR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=CM();this.outputShape=e,this.enableShapeUniforms=qM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?$M(["r","c","d"],e):EM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class XM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ZR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=CM();this.outputShape=e,this.enableShapeUniforms=qM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?$M(["r","c","d"],e):EM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class YM{constructor(e){this.variableNames=["A"],this.outTexUsage=JR.DOWNLOAD;const t=CM();this.outputShape=e,this.userCode=`\n      ${RM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ZM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=JR.DOWNLOAD;const t=CM();this.outputShape=e,this.userCode=`\n      ${RM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class JM{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=CM();this.outputShape=e,this.enableShapeUniforms=qM(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":AM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class QM{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=CM();this.outputShape=e,this.enableShapeUniforms=qM(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let t=0;t<=1;t++){const s=2*a+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${a};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":AM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function e_(e,t,n,r,s,a){!function(e,t){const n=Ge().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return fM(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return sM(e,(()=>e.bindTexture(i,o))),sM(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),sM(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),sM(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),sM(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ge().getNumber("WEBGL_VERSION")?sM(e,(()=>e.texImage2D(i,0,r,t,n,0,s,a,null))):sM(e,(()=>e.texStorage2D(i,1,r,t,n))),sM(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function t_(e){return e.internalFormatFloat}function n_(e){return e.internalFormatHalfFloat}function r_(e){return e.downloadTextureFormat}function s_(e){return e.internalFormatPackedFloat}function a_(e){return e.internalFormatPackedHalfFloat}class o_{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Ge().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){KR[e]=t}(t,e)):this.gl=YR(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Ge().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=oM(this.gl,e),kM(this.gl,t))this.textureHalfFloatExtension=oM(this.gl,t);else if(Ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),kM(this.gl,r))this.colorBufferHalfFloatExtension=oM(this.gl,r);else if(Ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",kM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!kM(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=fM(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return sM(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),sM(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=fM(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return sM(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),sM(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return fM(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=rM(this.gl,this.textureHalfFloatExtension)}get debug(){return Ge().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;sM(e,(()=>e.finish())),sM(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),sM(e,(()=>e.deleteFramebuffer(this.framebuffer))),sM(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),sM(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),sM(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=eM(t,n);return e_(e,s,a,t_(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=eM(t,n);return e_(e,s,a,n_(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=eM(t,n);return e_(e,s,a,r_(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){sM(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ge().getNumber("WEBGL_VERSION")?sM(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):sM(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ge().getNumber("WEBGL_VERSION")?sM(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):sM(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),sM(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let o,i,l;sM(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(s),2===Ge().getNumber("WEBGL_VERSION")?sM(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,i,o))):sM(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,i,o))),sM(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=nM(t,n);return e_(e,s,a,a_(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=nM(t,n);return e_(e,s,a,s_(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(pM(this.gl,this.framebuffer),this.outputTexture=null),sM(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=eM(t,n),o=new Uint8Array(t*n*4);return sM(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,o,i){const l=e,u=new Float32Array(function(e,t){const[n,r]=nM(e,t);return n*r*4}(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();sM(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return sM(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),sM(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),sM(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ge().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return sM(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=CM();return function(e,t){const n=fM(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(sM(e,(()=>e.shaderSource(n,t))),sM(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return fM(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return sM(t,(()=>t.attachShader(n,this.vertexShader))),sM(t,(()=>t.attachShader(n,e))),function(e,t){if(sM(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&lM(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return sM(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),uM(e,t,"clipSpacePos",n,3,20,0)&&uM(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&sM(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&lM(this.gl,this.program),sM(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return fM(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),sM(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),cM(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=nM(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&lM(this.gl,this.program),dM(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),sM(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),sM(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=oM(this.gl,2===Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await me((()=>this.disposed||this.isQueryAvailable(e,Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||me((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),hM(this.gl,e,this.framebuffer),this.debug&&dM(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(hM(this.gl,this.outputTexture,this.framebuffer),this.debug&&dM(this.gl)):pM(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;hM(r,e,this.framebuffer),this.debug&&dM(r),this.outputTexture=e,sM(r,(()=>r.viewport(0,0,t,n))),sM(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),sM(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:i_,bincountImpl:l_,bincountReduceImpl:u_,ceilImpl:c_,concatImpl:h_,equalImpl:p_,expImpl:d_,expm1Impl:f_,floorImpl:m_,gatherNdImpl:g_,gatherV2Impl:y_,greaterImpl:b_,greaterEqualImpl:x_,lessImpl:w_,lessEqualImpl:v_,linSpaceImpl:k_,logImpl:I_,maxImpl:S_,maximumImpl:N_,minimumImpl:T_,multiplyImpl:C_,negImpl:E_,notEqualImpl:$_,prodImpl:A_,rangeImpl:R_,rsqrtImpl:M_,sigmoidImpl:__,simpleAbsImpl:F_,sliceImpl:D_,sparseFillEmptyRowsImpl:O_,sparseReshapeImpl:L_,sparseSegmentReductionImpl:P_,sqrtImpl:z_,stridedSliceImpl:B_,stringNGramsImpl:U_,stringSplitImpl:V_,stringToHashBucketFastImpl:W_,subImpl:j_,tileImpl:G_,topKImpl:H_,transposeImpl:q_,uniqueImpl:K_}=G;function X_(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Y_(e,t){return 1===t?[e]:X_(e,t)}class Z_{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=qM(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Y_("rc",this.rank),t=VM(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class J_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=qM(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2==1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):EM(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":AM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Q_{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=tF(t,n),s=nF(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=eF(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let o;return r===QR.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===QR.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===QR.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===QR.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===QR.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=tF(n,r),a=nF(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const o=eF(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=Ge().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function eF(e,t,n,r,s){const a=function(e,t){switch(e){case QR.PACKED_2X2_FLOAT32:return s_(t);case QR.PACKED_2X2_FLOAT16:return a_(t);case QR.UNPACKED_FLOAT32:return t_(t);case QR.UNPACKED_FLOAT16:return n_(t);case QR.PACKED_4X1_UNSIGNED_BYTE:return r_(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(s){const[t,n]=nM(e[0],e[1]);o=t*n}else{const[t,n]=eM(e[0],e[1]);o=t*n}return o*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a)}function tF(e,t){if(e===JR.UPLOAD)return QR.PACKED_2X2_FLOAT32;if(e===JR.RENDER||null==e)return function(e){return Ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?QR.PACKED_2X2_FLOAT32:QR.UNPACKED_FLOAT32:e?QR.PACKED_2X2_FLOAT16:QR.UNPACKED_FLOAT16}(t);if(e===JR.DOWNLOAD||e===JR.PIXELS)return QR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function nF(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class rF{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=qM(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const sF="return abs(x);",aF="return x;";class oF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=qM(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class iF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=qM(this.outputShape.length);const t=e.length,n=Y_("rc",t),r=VM(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const lF=up,uF={},cF=Ge().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class hF extends q{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ge().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof o_)t=e;else{const n=YR(Ge().getNumber("WEBGL_VERSION"),e);t=new o_(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=YR(Ge().getNumber("WEBGL_VERSION"));t=new o_(e),this.binaryCache=((n=Ge().getNumber("WEBGL_VERSION"))in uF||(uF[n]={}),uF[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Q_(this.gpgpu),this.numMBBeforeWarning=null==Ge().global.screen?1024:Ge().global.screen.height*Ge().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new H(this,Hi())}nextDataId(){return hF.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Ge().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ge().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:JR.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(Ge().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:JR.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=t;if(null!=a){let t;t=i?new oF(o,aF):new rF(o,aF);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Rs()),c="complex64"===r?Jd(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Rs()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(null!=s){let t;t=i?new oF(r,aF):new rF(r,aF);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ge().getBool("DEBUG")&&!Ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ge().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Ge().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...tM(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);u=Jd(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=ie(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;sM(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Hi().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:o,isPacked:i,texture:l}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=i?new oF(s,aF):new rF(s,aF);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:o}],o),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Hi().makeTensorFromDataId(u.dataId,u.shape,u.dtype),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Fs(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return No(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!aM(n)){if(Ge().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=ie(t);if(Ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...tM(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Ge().getBool("WEBGL_PACK")&&!0===r,o=a?yM(t):t,i=a?new ZM(o):new YM(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=oe(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=oe(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=ee(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Rs(),endMs:null}}endTimer(e){return Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Rs(),e)}async getQueryTime(e){if(Ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=cF){return Ge().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ie(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ns("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return lF(e.shape,t)}packedUnaryOp(e,t,n){const r=new oF(e.shape,t),s=this.compileAndRun(r,[e],n);return Hi().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=F_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,sF,e.dtype);const t=new rF(e.shape,sF),n=this.compileAndRun(t,[e]);return Hi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ce(n[0])){const s=n.map((e=>_s(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Hi().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new iF(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Z_(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[mM(e.shape),...gM(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[mM(t),...gM(t)],a=new J_(s,n),o=[n],i=this.runWebGLProgram(a,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&re(ie(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const o=yM(s);let i;i=r?new XM(o):new KM(o);const l=[null!=t?t:tM(o)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===ZR.DENSE){const t=null!=a?a:tM(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===ie(o.shape))return i.values=xe(o.dtype,0),o;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ie(t.shape)<=Ge().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!xM(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const c={shape:o.shape,texData:i,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:l}=WM(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=_e(i);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${i[0]>1}_${i[1]>1}`;const p=t.shape.length,d=2===i.length&&ue(t.shape,a),f=1===ie(t.shape),m=Yo(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&ue(a,n.texData.texShape),y=e.packedInputs||i.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${p}_${g}_${o?l:""}_${i.length}_${f}_${m}_${d}_${u}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${Ge().getNumber("WEBGL_VERSION")}`,a}(e,u,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=_M(s,o,t),l=function(e,t){const n=fM(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(sM(e,(()=>e.shaderSource(n,t))),sM(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=iM.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,o=s.map(((e,t)=>fe((t+1).toString(),a)+e));let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const l=o.slice(0,r-1),u=o.slice(r-1,r),c=o.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${fe(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===Ge().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const p=!1,d={},f={},m={};for(let w=0;w<t.variableNames.length;w++){const n=t.variableNames[w];d[n]=e.getUniformLocation(u,n,p),d[`offset${n}`]=e.getUniformLocation(u,`offset${n}`,p),t.enableShapeUniforms&&(f[`${n}Shape`]=e.getUniformLocation(u,`${n}Shape`,p),m[`${n}TexShape`]=e.getUniformLocation(u,`${n}TexShape`,p))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(u,"outShape",p),b=e.getUniformLocation(u,"outShapeStrides",p),y=e.getUniformLocation(u,"outTexShape",p));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(u,t.name,p)})),{program:t,fragmentShader:l,source:i,webGLProgram:u,uniformLocations:d,customUniformLocations:x,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,u,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),function(e,t,n,r,s){t.program.enableShapeUniforms||(HM(t.inShapeInfos,n),HM([t.outShapeInfo],[r]));const a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),1===Ge().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],o=t.uniformLocations[`offset${s}`],i=t.inShapesLocations[`${s}Shape`],l=t.inTexShapesLocations[`${s}TexShape`];if(i){const{uniformShape:r}=WM(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(i,new Int32Array(r));break;case 2:e.gl.uniform2iv(i,new Int32Array(r));break;case 3:e.gl.uniform3iv(i,new Int32Array(r));break;case 4:e.gl.uniform4iv(i,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(ie(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,r)}));const i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=_e(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],o=s[r];if("float"===n.type)e.gl.uniform1fv(a,o);else if("vec2"===n.type)e.gl.uniform2fv(a,o);else if("vec3"===n.type)e.gl.uniform3fv(a,o);else if("vec4"===n.type)e.gl.uniform4fv(a,o);else if("int"===n.type)e.gl.uniform1iv(a,o);else if("ivec2"===n.type)e.gl.uniform2iv(a,o);else if("ivec3"===n.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,o)}})),e.executeProgram()}(this.gpgpu,p,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Ge().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Rs();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ge().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ge().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Xi((()=>{if(!Ge().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ge().getBool("DEBUG");Ge().set("DEBUG",!1);const t=this.abs(kl(1e-8)).dataSync()[0];if(Ge().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Rs());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Ge().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?J(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=be(e);e=t.newShape}let r=ie(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=mM(e);let n=2,s=2;return e.length&&([n,s]=gM(e)),r=t*(n/2)*(s/2),pe(r).map((e=>2*e))}return pe(r)}(n,i),t.texShape=c),null!=s){const e=yM(n);let a,o=c[1],h=c[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!i&&p||([o,h]=nM(c[0],c[1])),a=i?new QM(e,p):new JM(e,p);const d=p?[h,o]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?JR.PIXELS:JR.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,s);const g=[[h,o]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),t.values=null,l&&(this.uploadWaitMs+=Rs()-u)}else{const e=this.acquireTexture(c,o,r,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ne(t)}}hF.nextDataId=0,ba()&&al("webgl",(()=>new hF),2);class pF{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Jo(t,n),this.enableShapeUniforms=qM(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class dF{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Jo(t,n);const s=this.outputShape.length;this.enableShapeUniforms=qM(s);let a="";if(r)if(0===s||1===ie(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${VM(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Y_("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function fF(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const mF={kernelName:cn,backendName:"webgl",kernelFunc:fF};function gF(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=fF({inputs:{x:r},backend:n}),l=fF({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:l},a}const yF={kernelName:kt,backendName:"webgl",kernelFunc:gF},bF="return (a < 0.) ? b * a : a;",xF="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",wF={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",$s(a,"float32")),i=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dF(xF,s.shape,o.shape):new pF(bF,s.shape,o.shape),l=n.runWebGLProgram(i,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),l}},vF="return (a < 0.) ? b * a : a;",kF="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",IF={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dF(kF,r.shape,s.shape):new pF(vF,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}};function SF({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:o}=s,i=a,l=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const e=i.texData.get(o.dataId),t=n(e.values,l);return i.makeTensorInfo(o.shape,l,t)}let u;return u=Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new oF(o.shape,t):new rF(o.shape,e),i.runWebGLProgram(u,[o],l)}}function NF({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{const{a:l,b:u}=o,c=i;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},o=new pF(e,l.shape,u.shape);return c.runWebGLProgram(o,[s,a],na(n.dtype,r.dtype))})),a=gF({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||na(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Af(e):e,r="string"===l.dtype?Af(t):t,[a,o]=s(l.shape,u.shape,n,r,h),i=c.makeTensorInfo(o,h);return c.texData.get(i.dataId).values=a,i}let p;return p=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new dF(t,l.shape,u.shape,n):new pF(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function TF(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?kF:vF;if("leakyrelu"===e)return t?xF:bF;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class CF{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=qM(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class EF{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Jo(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const $F="return a * b;";function AF(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=na(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new EF("return areal * breal - aimag * bimag;",r.shape,s.shape),o=new EF("return areal * bimag + aimag * breal;",r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,i,"float32"),u=n.runWebGLProgram(o,i,"float32"),c=gF({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[o,i]=C_(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(i,a);return n.texData.get(l.dataId).values=o,l}let o;return o=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dF($F,r.shape,s.shape):new pF($F,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}const RF={kernelName:Un,backendName:"webgl",kernelFunc:AF};function MF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=ie(s.shape),l=ge(a,i),u=ie(l);re(i===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const c=o.texData.get(s.dataId);return!c.isPacked||xM(s.shape,l)||null!==c.texture&&xM(c.shape,l)?(o.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[mM(e.shape),...gM(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[mM(t),...gM(t)],o=new J_(a,r),i=[r],l=n.runWebGLProgram(o,[s],e.dtype,i,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,o)}const _F={kernelName:ar,backendName:"webgl",kernelFunc:MF};class FF{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const o=4*Math.floor(n/4),i=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${ce(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class DF{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function OF(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Ld(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let o=0;o<s.length;o++){const{inSize:i,windowSize:l,outSize:u}=s[o];let c,h;c="mean"===n?0===o?new FF({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},i):new FF({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u}):new DF({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class LF{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=VM(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class PF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=VM(this.rank),s=X_("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=s[u];const o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${i}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${i}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function zF(e,t,n){const r=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PF(e.shape,t):new LF(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function BF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return function(e,t,n,r){const s=t,a=e.shape.length,o=ye(s,e.shape);let i=o;const l=Ac(i,a),u=null!=l;let c=e;u&&(c=zF(e,l,r),i=Mc(i.length,a)),$c("sum",i,a);const[h,p]=Cc(c.shape,i);let d=h;n&&(d=Ec(h,o));const f=ie(p),m=MF({inputs:{x:c},attrs:{shape:[ie(e.shape)/f,f]},backend:r}),g=OF(m,ra(e.dtype),"sum",r),y=MF({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,o,n)}const UF={kernelName:Sr,backendName:"webgl",kernelFunc:BF};function VF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=s.shape[a[c]];let u;if(o.shouldExecuteOnCPU([s])){const e=o.texData.get(s.dataId).values,t=q_(e,s.shape,s.dtype,a,l);u=o.makeTensorInfo(l,s.dtype),o.texData.get(u.dataId).values=t}else u=zF(s,a,o);return u}const WF={kernelName:Gr,backendName:"webgl",kernelFunc:VF};function jF({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ie(m),b=ie(g),x=Jo(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);re(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,h,d]:[y,d,h],v=r?[b,f,p]:[b,p,f],k=MF({inputs:{x:e},backend:s,attrs:{shape:w}}),I=MF({inputs:{x:t},backend:s,attrs:{shape:v}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=a,E=null!=o,$="leakyrelu"===l,A=null!=l?TF(l,!0):null;let R;if((1===d||1===f)&&T>1e3&&!1===(C||E||$||null!=A)){let e=k,t=I;n&&(e=VF({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=VF({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(t));const a=1===f;let o=e;1!==f&&(o=MF({inputs:{x:e},backend:s,attrs:{shape:[N,T,1]}}),S.push(o));const i=1===f?2:1;let l=t;a&&(l=MF({inputs:{x:t},backend:s,attrs:{shape:[N,1,T]}}),S.push(l));const u=AF({inputs:{a:o,b:l},backend:s});R=BF({inputs:{x:u},backend:s,attrs:{axis:i,keepDims:!0}}),S.push(u)}else{const l=na(e.dtype,t.dtype),u=new CF(w,v,[N,d,f],n,r,C,A,E,$),c=[k,I];if(null!=a&&c.push(a),E&&c.push(o),$){const e=s.makeTensorInfo([],"float32",$s(i,"float32"));c.push(e),S.push(e)}R=s.runWebGLProgram(u,c,l)}const M=MF({inputs:{x:R},backend:s,attrs:{shape:x}});S.push(R);for(const _ of S)s.disposeIntermediateTensorInfo(_);return M}const GF={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return jF({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}},HF="return abs(x);",qF={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=F_(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new oF(r.shape,HF):new rF(r.shape,HF),n.runWebGLProgram(s,[r],r.dtype)}},KF=SF({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),XF={kernelName:Ze,backendName:"webgl",kernelFunc:KF},YF=SF({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),ZF={kernelName:Je,backendName:"webgl",kernelFunc:YF},JF="return a + b;",QF=NF({opSnippet:JF,packedOpSnippet:JF,supportsComplex:!0,cpuKernelImpl:i_}),eD={kernelName:Qe,backendName:"webgl",kernelFunc:QF};class tD{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class nD{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const rD={kernelName:et,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return fF({inputs:{x:s[0]},backend:r});if(s.length>Ge().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>na(e,t))),o=s.map((e=>e.shape)),i=Ge().getBool("WEBGL_PACK")?new nD(s[0].shape,o):new tD(s[0].shape,o);return r.runWebGLProgram(i,s,a)}},sD={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=ye(a,s.shape);let u=l;const c=Ac(u,i);let h=s;null!=c&&(h=VF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Mc(u.length,i)),$c("all",u,i);const[p,d]=Cc(h.shape,u),f=MF({inputs:{x:h},backend:n,attrs:{shape:[-1,ie(d)]}}),m=OF(f,f.dtype,"all",n);let g;return g=MF(o?{inputs:{x:m},backend:n,attrs:{shape:Ec(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},aD={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=ye(a,s.shape);let u=l;const c=Ac(u,i);let h=s;null!=c&&(h=VF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Mc(u.length,i)),$c("any",u,i);const[p,d]=Cc(h.shape,u),f=MF({inputs:{x:h},backend:n,attrs:{shape:[-1,ie(d)]}}),m=OF(f,f.dtype,"any",n);let g;return g=MF(o?{inputs:{x:m},backend:n,attrs:{shape:Ec(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class oD{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class iD{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,re(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,l=VM(i),u=Y_("coords",i);let c,h;if(1===a){h=i+1;const e=VM(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[i-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[i-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[i-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[i-2]};`}else h=i,c=`\n        ${l} sourceLocR = coords;\n        ++${u[i-1]};\n        ${l} sourceLocG = coords;\n        ++${u[i-2]};\n        ${l} sourceLocA = coords;\n        --${u[i-1]};\n        ${l} sourceLocB = coords;\n        --${u[i-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=Y_("sourceLocR",h-1).concat("inIdx.r"),g=Y_("sourceLocG",h-1).concat("inIdx.g"),y=Y_("sourceLocB",h-1).concat("inIdx.b"),b=Y_("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${u[i-2]} < ${o[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function lD(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const o=Ld(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},l=new oD(i,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=lD(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function uD(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Ld(s[s.length-1]),o=new iD(s,a,n,null==r),i=null==r?[t]:[t,r],l=e.runWebGLProgram(o,i,"int32");if(l.shape.length===t.shape.length){const r=uD(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function cD(e,t,n,r){const s=[n];if($c("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Ge().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let o=t;null!==a&&a.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,l]=Cc(o.shape,s),u=ie(l),c=MF({inputs:{x:o},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=lD(e,c,r);n.push(h);const p=MF({inputs:{x:h},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return uD(e,t,r)}const hD={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=ye(a,s.shape);const i=Ac(o,s.shape.length);let l=s;const u=[];null!=i&&(l=VF({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=Mc(o.length,l.shape.length)),$c("argMax",[o[0]],l.shape.length);const c=cD(n,l,o[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},pD={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=ye(a,s.shape);const i=Ac(o,s.shape.length);let l=s;const u=[];null!=i&&(l=VF({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=Mc(o.length,l.shape.length)),$c("argMin",[o[0]],l.shape.length);const c=cD(n,l,o[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},dD=SF({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),fD={kernelName:at,backendName:"webgl",kernelFunc:dD},mD=SF({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),gD={kernelName:ot,backendName:"webgl",kernelFunc:mD},yD=SF({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),bD={kernelName:it,backendName:"webgl",kernelFunc:yD},xD=NF({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),wD={kernelName:ut,backendName:"webgl",kernelFunc:xD},vD=SF({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),kD={kernelName:lt,backendName:"webgl",kernelFunc:vD};class ID{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class SD{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const ND={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;NM(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;re(ou(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=Yl(s.shape,a,o,1,i,l);if(1===u.filterWidth&&1===u.filterHeight&&ue(u.inShape,u.outShape))return fF({inputs:{x:s},backend:n});const c=new ID(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},TD={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=r,c=Zl(s.shape,a,o,[1,1,1],i,l,u),h=new SD(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class CD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ED{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const $D={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=r,h=Zl(o.shape,i,l,[1,1,1],u,c),p=new ED(h);return n.runWebGLProgram(p,[s],o.dtype)}},AD={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;NM([s,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=r,c=Yl(o.shape,i,l,1,u),h=new CD(c);return n.runWebGLProgram(h,[s],o.dtype)}},RD={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return jF({a:s,b:a,transposeA:o,transposeB:i,backend:n})}};class MD{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Jo(e,t),Jo(e,n);let o="0.0";null!=r&&(Jo(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=s&&(Jo(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class _D{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Jo(e,t),Jo(e,n);let o="vec4(0.0)";null!=r&&(Jo(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(Jo(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const FD={kernelName:sn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:o,scale:i}=e;re(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=o&&(c=o.shape,u.push(o));let h=null;null!=i&&(h=i.shape,u.push(i));const p=Ge().getBool("WEBGL_PACK_NORMALIZATION")?new _D(r.shape,s.shape,a.shape,c,h,l):new MD(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class DD{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=VM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return OD.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${OD[t]} = start[${t}] + coords.${OD[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const OD=["x","y","z","w","u","v"];class LD{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=VM(this.rank),n=Y_("coords",this.rank),r=Y_("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function PD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,l]=Ii(s,a,o);if(ui(s,i,l),0===ie(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=D_(e.values,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=vi(s.shape,i,l);if(u||!c){const e=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LD(l):new DD(l),t=[i];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=ki(t,_e(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,l+1),a}(s,i,l,n)}const zD={kernelName:yr,backendName:"webgl",kernelFunc:PD},BD={kernelName:mt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;re(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),l=zd(s.shape,a,i),u=Bd(l.length,a.length),c=Ud(s.shape,a,i),h=Vd(o,a.length),p=Wd(c,o,a.length),d=[],f=MF({inputs:{x:s},backend:n,attrs:{shape:l}}),m=VF({inputs:{x:f},backend:n,attrs:{perm:u}}),g=MF({inputs:{x:m},backend:n,attrs:{shape:c}}),y=PD({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},UD={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),l=n.readSync(a.dataId),u=l_(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}},VD={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),i=Jo(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},WD=NF({opSnippet:"return float(a != b);",cpuKernelImpl:$_,dtype:"bool"}),jD={kernelName:Wn,backendName:"webgl",kernelFunc:WD};function GD(e){const{inputs:t,backend:n}=e,{input:r}=t;return fF({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const HD={kernelName:nr,backendName:"webgl",kernelFunc:GD},qD={kernelName:xt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===a.dtype)return fF({inputs:{x:a},backend:r});const t=Vc(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=gF({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=GD({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!Ie(a.dtype,o)){const e=fF({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new rF(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",xe("bool",1)),t=WD({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},KD="return ceil(x);",XD=SF({opSnippet:KD,packedOpSnippet:KD,cpuKernelImpl:c_}),YD={kernelName:wt,backendName:"webgl",kernelFunc:XD};class ZD{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class JD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const QD={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r;let i;i=Ge().getBool("WEBGL_PACK_CLIP")?new JD(s.shape):new ZD(s.shape);const l=[[a],[o]];return n.runWebGLProgram(i,[s],s.dtype,l)}};class eO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function tO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const nO={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new eO(r.shape),o=[tO(r,s.complexTensorInfos.real),tO(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}};class rO{constructor(e){this.outputShape=[],this.outputShape=Dd(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const e=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class sO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Dd(e,t);const n=this.outputShape,r=n.length,s=VM(r),a=Y_("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const l=o[t],u=o.slice(-2),c=o.join();let h=`if (${l} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<i.length;f++){const e=i[f-1];h+=`\n        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {\n          return getChannel(\n            getT${f}(${aO(o,l,e)}),\n            vec2(${aO(u,l,e)}));\n        }`}const p=i.length,d=i[i.length-1];h+=`\n        return getChannel(\n          getT${p}(${aO(o,l,d)}),\n          vec2(${aO(u,l,d)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function aO(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function oO(e){const{inputs:t,backend:n}=e,{input:r}=t;return fF({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const iO={kernelName:pn,backendName:"webgl",kernelFunc:oO};function lO(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>GD({inputs:{input:e},backend:n}))),s=e.map((e=>oO({inputs:{input:e},backend:n}))),a=lO(r,t,n),o=lO(s,t,n),i=gF({inputs:{real:a,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=ie(e.shape.slice(t));return MF({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=Dd(s.map((e=>e.shape)),1),i=1===s[0].shape[0],l=h_(a,o,r,i),u=Dd(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Ge().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=lO(e.slice(0,r),t,n),a=lO(e.slice(r),t,n),o=lO([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}if(Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new sO(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:a,outShape:o}=function(e,t,n){const r=Dd(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>MF({inputs:{x:e},attrs:{shape:[-1,ie(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),i=new rO(a.map((e=>e.shape))),l=n.runWebGLProgram(i,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=MF({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),u}function uO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ye(s,t[0].shape)[0],o=Dd(t.map((e=>e.shape)),a);if(0===ie(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>ie(e.shape)>0));return 1===i.length?fF({inputs:{x:i[0]},backend:n}):(Fd(i.map((e=>e.shape)),a),lO(i,a,n))}const cO={kernelName:St,backendName:"webgl",kernelFunc:uO};class hO{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${l});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class pO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=qM(this.outputShape.length);const{dataFormat:n}=t,r=CM(),s="channelsLast"===n,a=s?0:1,o=s?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.y + ${e};\n          pos = rc.x + ${u};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function fO({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if((1!==h&&1!==p||!(c>1e3))&&u.isPacked&&d&&null!=u.texture&&l[2]%2!=0&&ue(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,re(xM(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const d=MF({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=jF({a:h,b:d,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),y=r.texData.get(g.dataId);re(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,y.shape=n.outShape,f=fF({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=MF({inputs:{x:e},backend:r,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=MF({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=jF({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});f=MF({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const g of m)r.disposeIntermediateTensorInfo(g);return f}function mO({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[],x=MF({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=MF({inputs:{x:t},backend:r,attrs:{shape:[1,m,ie(t.shape)/m]}});b.push(x),b.push(w);const v=new dO(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(v,[x],"float32",k),S=MF({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(S);const N=null!=s,T=null!=a,C="leakyrelu"===i,E=i?TF(i,!0):null,$=new CF(S.shape,w.shape,[1,g,n.outChannels],!0,!1,N,E,T,C),A=[S,w];if(s&&A.push(s),T&&A.push(a),C){const e=r.makeTensorInfo([],"float32",$s(o,"float32"));A.push(e),b.push(e)}const R=r.runWebGLProgram($,A,"float32"),M=MF({inputs:{x:R},backend:r,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push(R);for(const _ of b)r.disposeIntermediateTensorInfo(_);return M}const gO={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=iu(l),p=Jl(s.shape,a.shape,o,u,i,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Ge().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])d=mO({x:s,filter:a,convInfo:p,backend:n});else{const e=new hO(p);d=n.runWebGLProgram(e,[s,a],"float32")}else d=fO({x:s,filter:a,convInfo:p,backend:n});const f=MF({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class yO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vO={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=iu(l),p=Jl(s.shape,c,o,1,i,u,!1,h),d=new yO(p);return n.runWebGLProgram(d,[s,a],"float32")}},kO={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=iu(u),p=Jl(o,a.shape,i,1,l,c,!1,h),d=new bO(p);return n.runWebGLProgram(d,[s,a],"float32")}},IO={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l}=r,u=Ql(s.shape,a.shape,o,l,i),c=new pO(u);return n.runWebGLProgram(c,[s,a],"float32")}},SO={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:l}=r,u=Ql(s.shape,l,o,1,i),c=new xO(u);return n.runWebGLProgram(c,[s,a],"float32")}},NO={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:l}=r,u=Ql(l,a.shape,i,1,o),c=new wO(u);return n.runWebGLProgram(c,[s,a],"float32")}},TO=SF({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),CO={kernelName:Rt,backendName:"webgl",kernelFunc:TO},EO=SF({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),$O={kernelName:Mt,backendName:"webgl",kernelFunc:EO};class AO{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,i,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===r?1:0,[d,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(i-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const RO={kernelName:Ft,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=r,c=new AO(s.shape,a.shape,i,l,u);return n.runWebGLProgram(c,[s,a,o],"float32")}};class MO{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${_O(r,"coords")})`,a=e[e.length-1];let o="",i="";t?(o=n?"end != "+(a-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${VM(r)} coords = getOutputCoords();\n        int end = ${FO(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${FO(r,"coords")} = idx;\n          val += getX(${_O(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function _O(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function FO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const DO={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r,l=s.shape.length,u=Ac([a],l);let c=s;null!=u&&(c=VF({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=Mc(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const p=c.shape[h];let d=fF({inputs:{x:c},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){const e=new MO(c.shape,!1,i),t=[[f]],r=d;d=n.runWebGLProgram(e,[d],d.dtype,t),n.disposeIntermediateTensorInfo(r)}if(o){const e=new MO(c.shape,o,i),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=VF({inputs:{x:d},backend:n,attrs:{perm:Rc(u)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}},OO={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=l_(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=u_(e,t,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class LO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const PO={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],l=("NHWC"===o?s.shape[1]:s.shape[2])*a,u=("NHWC"===o?s.shape[2]:s.shape[3])*a,c=("NHWC"===o?s.shape[3]:s.shape[1])/(a*a),h=new LO("NHWC"===o?[i,l,u,c]:[i,c,l,u],a,o);return n.runWebGLProgram(h,[s],s.dtype)}};class zO{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=qM(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class BO{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=qM(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)p+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<c;g++)p+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(p+=`\n          xC = xCCorner + ${e*l};\n          `,1===i){if(e<c&&(o%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=o%2==0?J(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                      xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${e}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                  `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(o%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const UO={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),re(ou(o,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const h=Jl(s.shape,a.shape,o,c,i,u,!0);let p;p=Ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new BO(h):new zO(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",d)}};class VO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jO={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Jl(s.shape,c,o,i,l,u,!0),p=new VO(h);return n.runWebGLProgram(p,[s,a],"float32")}},GO={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Jl(c,a.shape,o,i,l,u,!0),p=new WO(h);return n.runWebGLProgram(p,[s,a],"float32")}};class HO{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const qO={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=ie(r.shape),o=MF({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new HO(a),l=n.runWebGLProgram(i,[o],o.dtype),u=MF({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};class KO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const XO={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l}=r,u=Xl(s.shape,a.shape,o,i,"NHWC",l);let c;const h=new KO(u);c=n.runWebGLProgram(h,[s,a],"float32");const p=MF({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},YO={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:l}=lf(s,a.length);cf(o.length,l,a);const{path:u,steps:c}=hf(i,l),h=c.length;let p=null,d=o.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=uf(d,l[e]);let s;pf(t)?s=a[e]:(s=VF({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);ue(s.shape,o)||(s=MF({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===p?p=s:(p=AF({inputs:{a:s,b:p},backend:n}),f.push(p))}m<h-1&&(u[m]>=0&&(p=BF({inputs:{x:p},backend:n,attrs:{axis:u[m]-(o.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}},ZO=SF({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),JO={kernelName:Ht,backendName:"webgl",kernelFunc:ZO},QO={kernelName:qt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dF("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new pF("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},eL=NF({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:p_}),tL={kernelName:Xt,backendName:"webgl",kernelFunc:eL},nL=SF({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Hd};\n  float a1 = ${qd};\n  float a2 = ${Kd};\n  float a3 = ${Xd};\n  float a4 = ${Yd};\n  float a5 = ${Zd};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),rL={kernelName:Kt,backendName:"webgl",kernelFunc:nL},sL=SF({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:d_,dtype:"float32"}),aL={kernelName:Yt,backendName:"webgl",kernelFunc:sL};function oL(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice();let l=s;return s<0&&(re(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+s+1),i.splice(l,0,1),MF({inputs:{x:a},backend:r,attrs:{shape:i}})}const iL={kernelName:Zt,backendName:"webgl",kernelFunc:oL},lL="return exp(x) - 1.0;",uL=SF({opSnippet:lL,packedOpSnippet:lL,cpuKernelImpl:f_}),cL={kernelName:Jt,backendName:"webgl",kernelFunc:uL};class hL{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function pL(e,t,n){const r=n.texData.get(e.dataId),s=ie(e.shape),a=e.shape[e.shape.length-1],o=MF({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),i=o.shape,l=new hL("real",i,t),u=new hL("imag",i,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=gF({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=MF({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(d),f}const dL={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return pL(r,!1,n)}};class fL{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function mL(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Ae(s),"string"===a){const e=we(a,ie(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new fL(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const gL={kernelName:en,backendName:"webgl",kernelFunc:mL};class yL{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bL={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new yL(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},xL="return floor(x);",wL=SF({opSnippet:xL,packedOpSnippet:xL,cpuKernelImpl:m_}),vL={kernelName:nn,backendName:"webgl",kernelFunc:wL},kL=NF({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),IL={kernelName:rn,backendName:"webgl",kernelFunc:kL};class SL{constructor(e){this.variableNames=["A"];const t=CM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class NL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=CM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const TL={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];(i||o)&&(null==CL&&(CL=document.createElement("canvas").getContext("2d")),CL.canvas.width=l,CL.canvas.height=u,CL.drawImage(s,0,0,l,u),s=CL.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=JR.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=Ge().getBool("WEBGL_PACK")?new NL(h):new SL(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let CL;const EL={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=iu(c),g=Jl(s.shape,a.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Ge().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=mO({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{const e=null!=o,t=null!=i,r="leakyrelu"===d,l=d?TF(d,!1):null,u=new hO(g,e,l,t,r),c=[s,a];if(o&&c.push(o),i&&c.push(i),r){const e=n.makeTensorInfo([],"float32",$s(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(u,c,"float32")}else y=fO({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});const x=MF({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},$L={kernelName:ts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),re(ou(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Jl(s.shape,a.shape,l,m,u,h,!0),y=Ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?TF(p,y):null,x=[s,a],w=null!=o,v=null!=i,k="leakyrelu"===p;if(w&&x.push(o),v&&x.push(i),k){const e=n.makeTensorInfo([],"float32",$s(d,"float32"));x.push(e),f.push(e)}let I;I=y?new BO(g,w,b,v,k):new zO(g,w,b,v,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class AL{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=VM(t.length),s=VM(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const RL={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=ie(r.shape),[l,u,c,h]=ai(r,s),p=MF({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),d=MF({inputs:{x:r},backend:n,attrs:{shape:[ie(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=g_(e,t,r.dtype,u,o,c,h,r.shape,i);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new AL(o,h,[u,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=MF({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class ML{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=VM(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)2===s?r.push("index"):r.push(`${n[s]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function _L(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,l=ye(o,s.shape)[0];if(Ge().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];re(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=$f(s,a,l,i),c=ie(a.shape),h=[],p=MF({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=MF({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(d);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=y_(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new ML(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=MF({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const FL={kernelName:an,backendName:"webgl",kernelFunc:_L},DL=NF({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:b_,dtype:"bool"}),OL={kernelName:ln,backendName:"webgl",kernelFunc:DL},LL=NF({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:x_}),PL={kernelName:un,backendName:"webgl",kernelFunc:LL},zL={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return pL(r,!0,n)}},BL=SF({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),UL={kernelName:dn,backendName:"webgl",kernelFunc:BL},VL=SF({opSnippet:"return float(isinf(x));",dtype:"bool"}),WL={kernelName:fn,backendName:"webgl",kernelFunc:VL},jL=SF({opSnippet:"return float(isnan(x));",dtype:"bool"}),GL={kernelName:mn,backendName:"webgl",kernelFunc:jL},HL=NF({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:w_,dtype:"bool"}),qL={kernelName:yn,backendName:"webgl",kernelFunc:HL},KL=NF({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:v_,dtype:"bool"}),XL={kernelName:bn,backendName:"webgl",kernelFunc:KL},YL={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=k_(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},ZL=SF({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:I_}),JL={kernelName:wn,backendName:"webgl",kernelFunc:ZL},QL=SF({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),eP={kernelName:vn,backendName:"webgl",kernelFunc:QL},tP=NF({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),nP={kernelName:kn,backendName:"webgl",kernelFunc:tP},rP=SF({opSnippet:"return float(!(x >= 1.0));"}),sP={kernelName:In,backendName:"webgl",kernelFunc:rP},aP=NF({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),oP={kernelName:Sn,backendName:"webgl",kernelFunc:aP};class iP{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;let i;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class lP{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;let i;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const uP={kernelName:Tn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=r,u=Ge().getBool("WEBGL_PACK_NORMALIZATION")?new lP(s.shape,a,o,i,l):new iP(s.shape,a,o,i,l);return n.runWebGLProgram(u,[s],s.dtype)}};class cP{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const hP={kernelName:Cn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=r,h=new cP(s.shape,i,l,u,c);return n.runWebGLProgram(h,[s,a,o],s.dtype)}};function pP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,l=ye(a,s.shape);let u=l;const c=Ac(u,i),h=null!=c,p=n.shouldExecuteOnCPU([s]);let d=s;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=s.shape[c[n]];const r=q_(e,s.shape,s.dtype,c,t);d=n.makeTensorInfo(t,s.dtype),n.texData.get(d.dataId).values=r}else d=zF(s,c,n);u=Mc(u.length,i)}$c("max",u,i);const[f,m]=Cc(d.shape,u);let g,y=f;if(o&&(y=Ec(f,l)),p){const e=n.texData.get(d.dataId).values,t=S_(e,ie(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=ie(t),a=MF({inputs:{x:e},attrs:{shape:[ie(e.shape)/s,s]},backend:r}),o=OF(a,e.dtype,"max",r),i=MF({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const dP={kernelName:En,backendName:"webgl",kernelFunc:pP},fP=NF({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:N_}),mP={kernelName:$n,backendName:"webgl",kernelFunc:fP},gP={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;NM(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;re(ou(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=Yl(s.shape,a,o,1,i,l);if(1===u.filterWidth&&1===u.filterHeight&&ue(u.inShape,u.outShape))return fF({inputs:{x:s},backend:n});const c=new ID(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},yP={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:u}=r,c=Zl(s.shape,a,o,[1,1,1],i,u,l),h=new SD(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class bP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=i*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wP={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=r,h=Zl(o.shape,i,l,[1,1,1],u,c),p=new SD(h,"max",!0),d=n.runWebGLProgram(p,[o],o.dtype),f=new xP(h),m=n.runWebGLProgram(f,[s,d],o.dtype);return n.disposeIntermediateTensorInfo(d),m}},vP={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;NM([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=Yl(i.shape,l,u,1,c,h),d=new ID(p,"max",!0),f=n.runWebGLProgram(d,[i],i.dtype),m=new bP(p),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},kP={kernelName:Fn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;re(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];re(ou(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Yl(r.shape,s,a,u,o),[h,p]=function(e,t,n,r){let s=new ID(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new ID(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,i,c,l);return[h,p]}},IP={kernelName:Dn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,l=ye(a,r.shape);let u=l;const c=Ac(u,i),h=null!=c,p=o.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=o.texData.get(f.dataId).values,t=new Array(i);for(let s=0;s<t.length;s++)t[s]=r.shape[c[s]];const n=q_(e,r.shape,r.dtype,c,t);f=o.makeTensorInfo(t,r.dtype),o.texData.get(f.dataId).values=n}else f=zF(r,c,o);d.push(f),u=Mc(u.length,i)}$c("sum",u,i);const[m,g]=Cc(f.shape,u);let y=m;s&&(y=Ec(m,l));const b=function(e,t,n,r){const s=ie(t),a=MF({inputs:{x:e},attrs:{shape:[ie(e.shape)/s,s]},backend:r}),o=OF(a,"float32","mean",r),i=MF({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(f,g,y,o);for(const x of d)o.disposeIntermediateTensorInfo(x);return b}},SP={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=ye(a,s.shape);let u=l;const c=Ac(u,i);let h=s;null!=c&&(h=VF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Mc(u.length,s.shape.length)),$c("min",u,i);const[p,d]=Cc(h.shape,u),f=MF({inputs:{x:h},backend:n,attrs:{shape:[-1,ie(d)]}}),m=OF(f,f.dtype,"min",n);let g;return g=MF(o?{inputs:{x:m},backend:n,attrs:{shape:Ec(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},NP=NF({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:T_}),TP={kernelName:Ln,backendName:"webgl",kernelFunc:NP};class CP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=VM(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class EP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=VM(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Y_("rc",r),l=Y_("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const $P={kernelName:Pn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,o=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EP(r.shape,s,a):new CP(r.shape,s,a);return t.runWebGLProgram(o,[r],r.dtype)}},AP=NF({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),RP={kernelName:zn,backendName:"webgl",kernelFunc:AP};class MP{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const _P=NF({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),FP={kernelName:jt,backendName:"webgl",kernelFunc:_P},DP="return a - b;",OP=NF({opSnippet:DP,packedOpSnippet:DP,supportsComplex:!0,cpuKernelImpl:j_}),LP={kernelName:zr,backendName:"webgl",kernelFunc:OP};function PP(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=ye([a],s.shape),i=pP({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=Ec(i.shape,o),u=MF({inputs:{x:i},backend:n,attrs:{shape:l}}),c=OP({inputs:{a:s,b:u},backend:n}),h=sL({inputs:{x:c},backend:n}),p=BF({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),d=MF({inputs:{x:p},backend:n,attrs:{shape:l}}),f=_P({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const zP={kernelName:Cr,backendName:"webgl",kernelFunc:PP},BP={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,l=i?s:PP({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new MP(u,c,a),p=[[o]],d=n.runWebGLProgram(h,[l],"int32",p);return i||n.disposeIntermediateTensorInfo(l),d}},UP={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=E_(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new oF(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new rF(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},VP=jp,WP={kernelName:jn,backendName:"webgl",kernelFunc:function(e){ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=VP(u,c,o,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},jP=Gp,GP={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=jP(c,h,o,i,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},HP=Hp,qP={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=o,d=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=HP(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class KP{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const XP={kernelName:Kn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r,l=ie(s.shape),u=new KP(l,a,o,i),c=MF({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const p=MF({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),p}};function YP(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=GD({inputs:{input:r},backend:n}),t=YP({inputs:{x:e},backend:n}),s=oO({inputs:{input:r},backend:n}),a=YP({inputs:{x:s},backend:n}),o=gF({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return mL({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const ZP={kernelName:Xr,backendName:"webgl",kernelFunc:YP},JP={kernelName:qn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=GD({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=oO({inputs:{input:s},backend:r}),o=YP({inputs:{x:a},backend:r}),i=gF({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return mL({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},QP={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return oL({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{se(a,e.shape,"All tensors passed to stack must have matching shapes"),re(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],l=uO({inputs:t.map((e=>{const t=oL({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class ez{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=VM(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class tz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=VM(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Y_("rc",r),l=Y_("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let f=0,m=1===r?2:4;f<m;f++)d+=`\n        ${h[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const nz=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(0===ie(s.shape))return mL({backend:n,attrs:{shape:a.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:o,dtype:s.dtype}});const i=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tz(s.shape,a,o):new ez(s.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[s],s.dtype,l)},rz={kernelName:Yn,backendName:"webgl",kernelFunc:nz},sz=NF({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),az={kernelName:Jn,backendName:"webgl",kernelFunc:sz},oz={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=[],u=ye(a,s.shape);let c=u;const h=Ac(c,i);let p,d=s;if(null!=h&&(d=VF({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Mc(c.length,i),l.push(d)),$c("prod",c,i),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:s}=A_(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=Cc(d.shape,c),r=ie(t),a=MF({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),o=OF(a,ra(s.dtype),"prod",n);p=MF({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(a),l.push(o)}if(o){l.push(p);const e=Ec(p.shape,u);p=MF({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},iz=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=R_(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},lz={kernelName:tr,backendName:"webgl",kernelFunc:iz},uz=SF({opSnippet:"return 1.0 / x;"}),cz={kernelName:rr,backendName:"webgl",kernelFunc:uz},hz=SF({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),pz={kernelName:sr,backendName:"webgl",kernelFunc:hz},dz=SF({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fz={kernelName:cr,backendName:"webgl",kernelFunc:dz};class mz{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class gz{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const yz={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,u]=i,c=Ge().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gz(s.shape,l,u,a,o):new mz(s.shape,l,u,a,o);return n.runWebGLProgram(c,[s],"float32")}};class bz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const xz={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new bz(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class wz{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class vz{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const kz={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,u]=i,c=Ge().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vz(s.shape,l,u,a,o):new wz(s.shape,l,u,a,o);return n.runWebGLProgram(c,[s],s.dtype)}};class Iz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Sz={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new Iz(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class Nz{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=VM(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Tz{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Y_("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=VM(n);function i(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Cz={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=ye(a,s.shape);if(0===o)return fF({inputs:{x:s},backend:n});const l=Ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tz(s.shape,i):new Nz(s.shape,i);return n.runWebGLProgram(l,[s],s.dtype)}};class Ez{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const $z={kernelName:Jr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,l=new Ez(r.shape,a),[u,c]=Pd(o,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(l,[r],r.dtype,h)}},Az=SF({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Rz={kernelName:pr,backendName:"webgl",kernelFunc:Az},Mz=SF({opSnippet:"return inversesqrt(x);",cpuKernelImpl:M_}),_z={kernelName:dr,backendName:"webgl",kernelFunc:Mz};class Fz{constructor(e,t,n,r,s,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const i=VM(s.length),l=VM(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Dz={kernelName:fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=li(0,s,o),p=[h/u,u];if(0===h)return n.makeTensorInfo(o,s.dtype);const d=MF({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),f=MF({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new Fz(l,i,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=MF({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class Oz{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=o.join()}const a=VM(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const Lz={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new Oz(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],na(s.dtype,a.dtype))}},Pz=SF({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${jd};\n  float scale = ${Gd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),zz={kernelName:gr,backendName:"webgl",kernelFunc:Pz},Bz=SF({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:__}),Uz={kernelName:vr,backendName:"webgl",kernelFunc:Bz},Vz=SF({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Wz={kernelName:wr,backendName:"webgl",kernelFunc:Vz},jz=SF({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Gz={kernelName:br,backendName:"webgl",kernelFunc:jz},Hz=SF({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),qz={kernelName:xr,backendName:"webgl",kernelFunc:Hz},Kz=SF({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Xz={kernelName:kr,backendName:"webgl",kernelFunc:Kz},Yz={kernelName:Nr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;re(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<s.shape.length;++y)l.push([0,0]);const u=[],c=nz({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=zd(c.shape,a,i,!1),p=Bd(h.length,a.length,!1),d=Ud(c.shape,a,i,!1),f=MF({inputs:{x:c},backend:n,attrs:{shape:h}}),m=VF({inputs:{x:f},backend:n,attrs:{perm:p}}),g=MF({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},Zz={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[h,p,d,f,m]=O_(i,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},Jz={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=L_(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},Qz={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=P_(o,r.shape,r.dtype,i,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},eB={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=P_(o,r.shape,r.dtype,i,l);return n.makeTensorInfo(c,r.dtype,u)}},tB={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=li(0,s,i),p=new Fz(u,l,s.shape.length,a.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[a,s,o],a.dtype),f=MF({inputs:{x:d},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),f}},nB={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=ye(o,s.shape)[0],l=ff(s,a,i),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[i]=e;const r=PD({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}},rB="return sqrt(x);",sB=SF({opSnippet:rB,packedOpSnippet:rB,cpuKernelImpl:z_}),aB={kernelName:Ir,backendName:"webgl",kernelFunc:sB},oB=SF({opSnippet:"return x * x;"}),iB={kernelName:Fr,backendName:"webgl",kernelFunc:oB},lB="return (a - b) * (a - b);",uB=NF({opSnippet:lB,packedOpSnippet:lB}),cB={kernelName:_r,backendName:"webgl",kernelFunc:uB},hB={kernelName:Yr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new rF(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class pB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=VM(n.length),a=VM(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const dB={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Si(s.shape,a,o,i,l,u,c,h,p);let v;if(m)v=MF({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){re(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=hi(b,x,w),t=PD({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=MF({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=No(s.shape,s.dtype,e),r=B_(d,t,w,b);v=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new pB(b,w,d);v=n.runWebGLProgram(e,[s],s.dtype)}const k=MF({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},fB={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=U_(p,d,s,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},mB={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[u,c,h]=V_(i,l,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},gB={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(a.dataId),i=W_(o,s);return n.makeTensorInfo(a.shape,"int32",i)}},yB=SF({opSnippet:"return tan(x);"}),bB={kernelName:Br,backendName:"webgl",kernelFunc:yB},xB=SF({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),wB={kernelName:Ur,backendName:"webgl",kernelFunc:xB};class vB{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=VM(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function kB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Fs(e))):e,r=No(s.shape,s.dtype,t),o=G_(r,a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new vB(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}const IB={kernelName:Vr,backendName:"webgl",kernelFunc:kB};class SB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class NB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function TB(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function CB(e){let t=1;for(;t<e;)t*=2;return t}const EB={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=Ge().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ge().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<i||a>l){const e=n.readSync(s.dataId),[t,r]=H_(e,u,s.dtype,a,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,mL({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(s):s,f=ie(u)/c,m=MF({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&TB(n,d);const g=CB(a),y=CB(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const s=x(),a=new SB(r),o=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(a,s,"int32",o),TB(n,i)};for(let N=1;N<g;N*=2){const e=2*N;for(let t=N;t>=1;t/=2)w(e,t,[f,y])}for(let N=y;N>g;N/=2){const e=x(),t=new NB([f,N/2]),r=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(t,e,"int32",r),TB(n,s);const a=g/2,o=2*a;for(let n=a;n>=1;n/=2)w(o,n,b.shape)}let v=b;b=PD({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),TB(n,v);let k=_L({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});TB(n,m);const I=u.slice(0,-1);I.push(a),v=b,b=MF({inputs:{x:b},attrs:{shape:I},backend:n}),TB(n,v);const S=k;return k=MF({inputs:{x:k},attrs:{shape:I},backend:n}),TB(n,S),[k,b]}};class $B{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const AB={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=r,[c,h,p,d]=s.shape,[f,m]=null!=u?u:[h,p],g=new $B(h,p,o,i,l,[c,f,m,d]);return n.runWebGLProgram(g,[s,a],"float32")}},RB={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;NM(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(a.dataId),{outputValues:i,outputShape:l,indices:u}=K_(o,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}},MB={kernelName:qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s,i=o.shape.length,l=s.shape[a],u=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==a&&(u[c++]=o.shape[m]);const h=[],p=new Array(i).fill(0),d=o.shape.slice();d[a]=1;const f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;const e=PD({inputs:{x:o},backend:n,attrs:{begin:p,size:d}}),t=MF({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class _B{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const FB=[GF,qF,XF,ZF,eD,rD,sD,aD,hD,pD,fD,gD,bD,wD,kD,ND,TD,$D,AD,RD,FD,BD,UD,VD,qD,YD,QD,yF,nO,cO,gO,vO,kO,IO,SO,NO,CO,$O,RO,DO,OO,PO,UO,jO,GO,qO,XO,YO,JO,QO,tL,rL,aL,iL,cL,dL,gL,bL,vL,IL,TL,EL,$L,RL,FL,OL,PL,mF,zL,iO,UL,WL,GL,wF,qL,XL,YL,JL,eP,nP,sP,oP,uP,hP,dP,mP,gP,yP,wP,vP,kP,IP,SP,TP,$P,RP,BP,RF,UP,WP,GP,qP,jD,XP,JP,QP,rz,az,IF,oz,lz,HD,FP,cz,pz,fz,_F,yz,xz,kz,Sz,Cz,$z,Rz,_z,Dz,Lz,zz,Uz,Wz,Gz,qz,zD,zP,Xz,Yz,Zz,Jz,Qz,eB,tB,nB,aB,iB,cB,hB,dB,fB,mB,gB,LP,UF,bB,wB,IB,EB,AB,WF,RB,MB,{kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,l=[];let u=0;const c=Ac([u],i);let h=s;null!=c&&(h=VF({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Mc(1,i)[0]);const p=Ef(h.shape,u,o),d=ie([h.shape[u]]),f=MF({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=ra(s.dtype),g=(e,t,r,s,a)=>{const o=e.shape[0],i=e.shape[1],u=Cf(i,a),c=new _B({windowSize:u,inSize:i,batchSize:o,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const p=iz({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=kB({inputs:{x:p},backend:n,attrs:{reps:[i/u]}});return l.push(p),l.push(d),g(h,t,d,s,a)},y=MF({inputs:{x:g(f,"unsortedSegmentSum",a,m,o)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const e=Rc(c);b=VF({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},ZP];for(const OB of FB)us(OB);const DB={"tfjs-core":Bi,"tfjs-backend-cpu":"3.13.0","tfjs-backend-webgl":"3.13.0","tfjs-data":HN,"tfjs-layers":tx,"tfjs-converter":zS,tfjs:"3.13.0"}},8485:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(3645),s=n.n(r)()((function(e){return e[1]}));s.push([e.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0);z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]);const a=s},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var s={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(s[o]=!0)}for(var i=0;i<e.length;i++){var l=[].concat(e[i]);r&&s[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},7676:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '},9894:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '},2810:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),o&&(a[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),o&&(s[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?i(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=i(u(n,8)),a=g,o=0;o<e.length;o+=8){var l=Math.min(8,e.length-o),h=parseInt(e.substring(o,o+l),n);if(l<8){var p=i(u(n,l));a=a.mul(p).add(i(h))}else a=(a=a.mul(s)).add(i(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?i(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var x=o(1,!0);n.UONE=x;var w=o(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=i(u(e,6),this.unsigned),a=this,o="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,o=e.high>>>16,i=65535&e.high,u=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=s+u)>>>16,c+=(p+=n+i)>>>16,c+=t+o,l((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,o=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=o*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=o*p)>>>16,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=o*c)>>>16,f+=n*d+s*p+a*c+o*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:u(2,o-48),p=i(n),d=p.mul(e);d.isNegative()||d.gt(s);)d=(p=i(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),s=s.sub(d)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:(e,t,n)=>{var r=n(4832),s=n(8652),a=n(801),o=n(2030),i=n(3618),l=n(9049),u=n(1971);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=o,u.xor4096=i,u.tychei=l,e.exports=u},4832:function(e,t,n){var r;!function(e,s,a){function o(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new o(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,o,i=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var r;!function(s,a){var o,i=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(i.crypto||i.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,b(s)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<l;)o[s]=s++;for(s=0;s<l;s++)o[s]=o[a=p&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,o=r.S;e--;)t=o[s=p&s+1],n=n*l+o[p&(o[s]=o[a=p&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[p&s]=p&(n^=19*t[p&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),s),e.exports){e.exports=d;try{o=n(3906)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},4412:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>o});var r=n(3379),s=n.n(r),a=n(8485);s()(a.Z,{insert:"head",singleton:!1});const o=a.Z.locals||{}},3379:(e,t,n)=>{"use strict";var r,s=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function o(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function i(e,t){for(var n={},r=[],s=0;s<e.length;s++){var i=e[s],l=t.base?i[0]+t.base:i[0],u=n[l]||0,c="".concat(l," ").concat(u);n[l]=u+1;var h=o(c),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==h?(a[h].references++,a[h].updater(p)):a.push({identifier:c,updater:m(p,t),references:1}),r.push(c)}return r}function l(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var o=s(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var u,c=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function h(e,t,n,r){var s=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=c(t,s);else{var a=document.createTextNode(s),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}function p(e,t,n){var r=n.css,s=n.media,a=n.sourceMap;if(s?e.setAttribute("media",s):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var d=null,f=0;function m(e,t){var n,r,s;if(t.singleton){var a=f++;n=d||(d=l(t)),r=h.bind(null,n,a,!1),s=h.bind(null,n,a,!0)}else n=l(t),r=p.bind(null,n,t),s=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else s()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=i(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var s=o(n[r]);a[s].references--}for(var l=i(e,t),u=0;u<n.length;u++){var c=o(n[u]);0===a[c].references&&(a[c].updater(),a.splice(c,1))}n=l}}}},383:(e,t,n)=>{e.exports=function(){return n(9855)('(()=>{var t={508:(t,e,r)=>{const{resize:a}=r(140);t.exports={buildImageList:t=>{const e=[];let r=100/Math.min(t.width,t.height);for(;;)if(e.push(r),r*=Math.pow(2,1/3),r>=.95){r=1;break}e.push(r),e.reverse();const i=[];for(let r=0;r<e.length;r++)t.width,e[r],t.height,e[r],i.push(Object.assign(a({image:t,ratio:e[r]}),{scale:e[r]}));return i},buildTrackingImageList:t=>{const e=Math.min(t.width,t.height),r=[],i=[];r.push(256/e),r.push(128/e);for(let e=0;e<r.length;e++)i.push(Object.assign(a({image:t,ratio:r[e]}),{scale:r[e]}));return i}}},589:(t,e,r)=>{const{Cumsum:a}=r(535),i=({image:t,cx:e,cy:r,sdThresh:a,imageDataCumsum:i,imageDataSqrCumsum:s})=>{if(e-6<0||e+6>=t.width)return null;if(r-6<0||r+6>=t.height)return null;let h=i.query(e-6,r-6,e+6,r+6);h/=169;let o=s.query(e-6,r-6,e+6,r+6);return o-=2*h*i.query(e-6,r-6,e+6,r+6),o+=169*h*h,o/169<a*a?null:(o=Math.sqrt(o),o)},s=t=>{const{image:e,cx:r,cy:a,vlen:i,tx:s,ty:h,imageDataCumsum:o,imageDataSqrCumsum:l}=t,{data:u,width:n,height:m}=e;if(r-6<0||r+6>=n)return null;if(a-6<0||a+6>=m)return null;let c=o.query(r-6,a-6,r+6,a+6),f=l.query(r-6,a-6,r+6,a+6),g=0,d=(a-6)*n+(r-6),p=(h-6)*n+(s-6),w=n-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=u[d]*u[p],d+=1,p+=1;d+=w,p+=w}let M=o.query(s-6,h-6,s+6,h+6);M/=169,g-=M*c;let y=f-c*c/169;return 0==y?null:(y=Math.sqrt(y),1*g/(i*y))};t.exports={extract:t=>{const{data:e,width:r,height:h,scale:o}=t,l=[r*h];for(let t=0;t<l.length;t++)l[t]=!1;const u=new Float32Array(e.length);for(let t=0;t<r;t++)u[t]=-1,u[r*(h-1)+t]=-1;for(let t=0;t<h;t++)u[t*r]=-1,u[t*r+r-1]=-1;for(let t=1;t<r-1;t++)for(let a=1;a<h-1;a++){let i=t+r*a,s=0,h=0;for(let t=-1;t<=1;t++)s+=e[i+r*t+1]-e[i+r*t-1],h+=e[i+r+t]-e[i-r+t];s/=768,h/=768,u[i]=Math.sqrt((s*s+h*h)/2)}const n=new Uint32Array(1e3);for(let t=0;t<1e3;t++)n[t]=0;const m=[-1,1,-r,r];let c=0;for(let t=1;t<r-1;t++)for(let e=1;e<h-1;e++){let a=t+r*e,i=!0;for(let t=0;t<m.length;t++)if(u[a]<=u[a+m[t]]){i=!1;break}if(i){let t=Math.floor(1e3*u[a]);t>999&&(t=999),t<0&&(t=0),n[t]+=1,c+=1,l[a]=!0}}const f=.02*r*h;let g=999,d=0;for(;g>=0&&(d+=n[g],!(d>f));)g--;for(let t=0;t<l.length;t++)l[t]&&1e3*u[t]<g&&(l[t]=!1);const p=[];for(let t=0;t<e.length;t++)p[t]=e[t]*e[t];const w=new a(e,r,h),M=new a(p,r,h),y=new Float32Array(e.length);for(let e=0;e<r;e++)for(let a=0;a<h;a++){const h=a*r+e;if(!l[h]){y[h]=1;continue}const o=i({image:t,cx:e,cy:a,sdThresh:5,imageDataCumsum:w,imageDataSqrCumsum:M});if(null===o){y[h]=1;continue}let u=-1;for(let r=-10;r<=10;r++){for(let i=-10;i<=10;i++){if(i*i+r*r<=4)continue;const h=s({image:t,cx:e+i,cy:a+r,vlen:o,tx:e,ty:a,imageDataCumsum:w,imageDataSqrCumsum:M});if(null!==h&&h>u&&(u=h,u>.95))break}if(u>.95)break}y[h]=u}return(t=>{let{image:e,featureMap:r,templateSize:a,searchSize:h,occSize:o,maxSimThresh:l,minSimThresh:u,sdThresh:n,imageDataCumsum:m,imageDataSqrCumsum:c}=t;const{data:f,width:g,height:d,scale:p}=e;o=Math.floor(Math.min(e.width,e.height)/10);const w=3*(2*a+1),M=Math.floor(g/w),y=Math.floor(d/w);let x=Math.floor(g/o)*Math.floor(d/o)+M*y;const q=[],C=new Float32Array(f.length);for(let t=0;t<C.length;t++)C[t]=r[t];let S=0;for(;S<x;){let t=l,r=-1,f=-1;for(let e=0;e<d;e++)for(let a=0;a<g;a++)C[e*g+a]<t&&(t=C[e*g+a],r=a,f=e);if(-1===r)break;const p=i({image:e,cx:r,cy:f,sdThresh:0,imageDataCumsum:m,imageDataSqrCumsum:c});if(null===p){C[f*g+r]=1;continue}if(p/(2*a+1)<n){C[f*g+r]=1;continue}let w=1,M=-1;for(let a=-h;a<=h;a++){for(let i=-h;i<=h;i++){if(i*i+a*a>h*h)continue;if(0===i&&0===a)continue;const o=s({image:e,vlen:p,cx:r+i,cy:f+a,tx:r,ty:f,imageDataCumsum:m,imageDataSqrCumsum:c});if(null!==o){if(o<w&&(w=o,w<u&&w<t))break;if(o>M&&(M=o,M>.99))break}}if(w<u&&w<t||M>.99)break}if(w<u&&w<t||M>.99)C[f*g+r]=1;else{q.push({x:r,y:f}),S+=1;for(let t=-o;t<=o;t++)for(let e=-o;e<=o;e++)f+t<0||f+t>=d||r+e<0||r+e>=g||(C[(f+t)*g+(r+e)]=1)}}return q})({image:t,featureMap:y,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:w,imageDataSqrCumsum:M})}}},535:t=>{t.exports={Cumsum:class{constructor(t,e,r){this.cumsum=[];for(let t=0;t<r;t++){this.cumsum.push([]);for(let r=0;r<e;r++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let r=1;r<e;r++)this.cumsum[0][r]=this.cumsum[0][r-1]+t[r];for(let a=1;a<r;a++)this.cumsum[a][0]=this.cumsum[a-1][0]+t[a*e];for(let a=1;a<r;a++)for(let r=1;r<e;r++)this.cumsum[a][r]=t[a*e+r]+this.cumsum[a-1][r]+this.cumsum[a][r-1]-this.cumsum[a-1][r-1]}query(t,e,r,a){let i=this.cumsum[a][r];return e>0&&(i-=this.cumsum[e-1][r]),t>0&&(i-=this.cumsum[a][t-1]),t>0&&e>0&&(i+=this.cumsum[e-1][t-1]),i}}}},140:t=>{t.exports={downsampleBilinear:({image:t})=>{const{data:e,width:r,height:a}=t,i=Math.floor(r/2),s=Math.floor(a/2),h=new Float32Array(i*s),o=[0,1,r,r+1];for(let t=0;t<s;t++)for(let a=0;a<i;a++){let s=2*t*r+2*a,l=0;for(let t=0;t<o.length;t++)l+=e[s+o[t]];l*=.25,h[t*i+a]=l}return{data:h,width:i,height:s}},upsampleBilinear:({image:t,padOneWidth:e,padOneHeight:r})=>{const{width:a,height:i,data:s}=t,h=2*t.width+(e?1:0),o=2*t.height+(r?1:0),l=new Float32Array(h*o);for(let t=0;t<h;t++){const e=.5*t-.25;let r=Math.floor(e),u=Math.ceil(e);r<0&&(r=0),u>=a&&(u=a-1);for(let n=0;n<o;n++){const o=.5*n-.25;let m=Math.floor(o),c=Math.ceil(o);m<0&&(m=0),c>=i&&(c=i-1);const f=(u-e)*(c-o)*s[m*a+r]+(u-e)*(o-m)*s[c*a+r]+(e-r)*(c-o)*s[m*a+u]+(e-r)*(o-m)*s[c*a+u];l[n*h+t]=f}}return{data:l,width:h,height:o}},resize:({image:t,ratio:e})=>{const r=Math.round(t.width*e),a=Math.round(t.height*e),i=new Uint8Array(r*a);for(let s=0;s<r;s++){let h=Math.round(1*s/e),o=Math.round(1*(s+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<a;l++){let a=Math.round(1*l/e),u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let n=0,m=0;for(let e=h;e<=o;e++)for(let r=a;r<=u;r++)n+=1*t.data[r*t.width+e],m+=1;i[l*r+s]=Math.floor(n/m)}}return{data:i,width:r,height:a}}}}},e={};function r(a){if(e[a])return e[a].exports;var i=e[a]={exports:{}};return t[a](i,i.exports,r),i.exports}(()=>{const{extract:t}=r(589),{buildTrackingImageList:e}=r(508);onmessage=t=>{const{data:r}=t;if("compile"===r.type){const{targetImages:t}=r,i=50/t.length;let s=0;const h=[];for(let r=0;r<t.length;r++){const o=t[r],l=e(o),u=i/l.length,n=a(l,(t=>{s+=u,postMessage({type:"progress",percent:s})}));h.push(n)}postMessage({type:"compileDone",list:h})}};const a=(e,r)=>{const a=[];for(let i=0;i<e.length;i++){const s=e[i],h=t(s),o={data:s.data,scale:s.scale,width:s.width,height:s.height,points:h};a.push(o),r(i)}return a}})()})();',n.p+"compiler.worker.prod.js")}},1077:(e,t,n)=>{e.exports=function(){return n(9855)('(()=>{var t={331:(t,e,r)=>{"use strict";r.r(e),r.d(e,{AbstractMatrix:()=>v,CHO:()=>tt,CholeskyDecomposition:()=>tt,EVD:()=>K,EigenvalueDecomposition:()=>K,LU:()=>H,LuDecomposition:()=>H,Matrix:()=>k,MatrixColumnSelectionView:()=>T,MatrixColumnView:()=>I,MatrixFlipColumnView:()=>A,MatrixFlipRowView:()=>q,MatrixRowSelectionView:()=>P,MatrixRowView:()=>C,MatrixSelectionView:()=>V,MatrixSubView:()=>N,MatrixTransposeView:()=>j,NIPALS:()=>et,Nipals:()=>et,QR:()=>$,QrDecomposition:()=>$,SVD:()=>L,SingularValueDecomposition:()=>L,WrapperMatrix1D:()=>z,WrapperMatrix2D:()=>F,correlation:()=>J,covariance:()=>B,default:()=>k,determinant:()=>X,inverse:()=>O,linearDependencies:()=>Q,pseudoInverse:()=>W,solve:()=>U,wrap:()=>D});const s=Object.prototype.toString;function o(t){return s.call(t).endsWith("Array]")}const n=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]>h&&(h=t[l]);return h},i=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]<h&&(h=t[l]);return h},h=function(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!o(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var s=i(t),h=n(t);if(s===h)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var l=r.min,u=void 0===l?r.autoMinMax?s:0:l,a=r.max,c=void 0===a?r.autoMinMax?h:1:a;if(u>=c)throw new RangeError("min option must be smaller than max option");for(var f=(c-u)/(h-s),m=0;m<t.length;m++)e[m]=(t[m]-s)*f+u;return e},l=" ".repeat(2),u=" ".repeat(4);function a(t,e={}){const{maxRows:r=15,maxColumns:s=10,maxNumSize:o=8}=e;return`${t.constructor.name} {\\n${l}[\\n${u}${function(t,e,r,s){const{rows:o,columns:n}=t,i=Math.min(o,e),h=Math.min(n,r),l=[];for(let e=0;e<i;e++){let r=[];for(let o=0;o<h;o++)r.push(c(t.get(e,o),s));l.push(`${r.join(" ")}`)}return h!==n&&(l[l.length-1]+=` ... ${n-r} more columns`),i!==o&&l.push(`... ${o-e} more rows`),l.join(`\\n${u}`)}(t,r,s,o)}\\n${l}]\\n${l}rows: ${t.rows}\\n${l}columns: ${t.columns}\\n}`}function c(t,e){const r=String(t);if(r.length<=e)return r.padEnd(e," ");const s=t.toPrecision(e-2);if(s.length<=e)return s;const o=t.toExponential(e-2),n=o.indexOf("e"),i=o.slice(n);return o.slice(0,e-i.length)+i}function f(t,e,r){let s=r?t.rows:t.rows-1;if(e<0||e>s)throw new RangeError("Row index out of range")}function m(t,e,r){let s=r?t.columns:t.columns-1;if(e<0||e>s)throw new RangeError("Column index out of range")}function g(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function w(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function p(t,e,r){return{row:d(t,e),column:y(t,r)}}function d(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for row indices");if(e.some((e=>e<0||e>=t.rows)))throw new RangeError("row indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function y(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for column indices");if(e.some((e=>e<0||e>=t.columns)))throw new RangeError("column indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function M(t,e,r,s,o){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(x("startRow",e),x("endRow",r),x("startColumn",s),x("endColumn",o),e>r||s>o||e<0||e>=t.rows||r<0||r>=t.rows||s<0||s>=t.columns||o<0||o>=t.columns)throw new RangeError("Submatrix indices are out of range")}function b(t,e=0){let r=[];for(let s=0;s<t;s++)r.push(e);return r}function x(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function E(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class v{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let s=new k(t,e);for(let o=0;o<t;o++)for(let t=0;t<e;t++)s.set(o,t,r[o*e+t]);return s}static rowVector(t){let e=new k(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new k(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new k(t,e)}static ones(t,e){return new k(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:s=Math.random}=r;let o=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)o.set(r,t,s());return o}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:s=0,max:o=1e3,random:n=Math.random}=r;if(!Number.isInteger(s))throw new TypeError("min must be an integer");if(!Number.isInteger(o))throw new TypeError("max must be an integer");if(s>=o)throw new RangeError("min must be smaller than max");let i=o-s,h=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=s+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let s=Math.min(t,e),o=this.zeros(t,e);for(let t=0;t<s;t++)o.set(t,t,r);return o}static diag(t,e,r){let s=t.length;void 0===e&&(e=s),void 0===r&&(r=e);let o=Math.min(s,e,r),n=this.zeros(e,r);for(let e=0;e<o;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new k(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return o}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new this(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return o}static checkMatrix(t){return v.isMatrix(t)?t:new k(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);t++}return s}isReducedEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(s=!1);t++}return s}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let s=e;for(let o=e;o<t.rows;o++)t.get(o,r)>t.get(s,r)&&(s=o);if(0===t.get(s,r))r++;else{t.swapRows(e,s);let o=t.get(e,r);for(let s=r;s<t.columns;s++)t.set(e,s,t.get(e,s)/o);for(let s=e+1;s<t.rows;s++){let o=t.get(s,r)/t.get(e,r);t.set(s,r,0);for(let n=r+1;n<t.columns;n++)t.set(s,n,t.get(s,n)-t.get(e,n)*o)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,s=r-1;for(;s>=0;)if(0===t.maxRow(s))s--;else{let o=0,n=!1;for(;o<r&&!1===n;)1===t.get(s,o)?n=!0:o++;for(let r=0;r<s;r++){let n=t.get(r,o);for(let i=o;i<e;i++){let e=t.get(r,i)-n*t.get(s,i);t.set(r,i,e)}}s--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let s=new k(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)s.setSubMatrix(this,this.rows*t,this.columns*e);return s}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){f(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return k.rowVector(this.getRow(t))}setRow(t,e){f(this,t),e=g(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){f(this,t),f(this,e);for(let r=0;r<this.columns;r++){let s=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,s)}return this}getColumn(t){m(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return k.columnVector(this.getColumn(t))}setColumn(t,e){m(this,t),e=w(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){m(this,t),m(this,e);for(let r=0;r<this.rows;r++){let s=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,s)}return this}addRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){f(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){m(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}maxIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)>t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}min(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}minIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)<t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}maxRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)>e&&(e=this.get(t,s),r[1]=s);return r}minRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)<e&&(e=this.get(t,s),r[1]=s);return r}maxColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)>e&&(e=this.get(s,t),r[0]=s);return r}minColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)<e&&(e=this.get(s,t),r[0]=s);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){v.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let s=0;s<e.length;s++)r+=e[s]*t[s];return r}mmul(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.columns,o=new k(e,s),n=new Float64Array(r);for(let i=0;i<s;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let s=0;s<r;s++)e+=this.get(t,s)*n[s];o.set(t,i,e)}}return o}strassen2x2(t){t=k.checkMatrix(t);let e=new k(2,2);const r=this.get(0,0),s=t.get(0,0),o=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(s+u),c=(i+l)*s,f=r*(n-u),m=l*(h-s),g=(r+o)*u,w=a+m-g+(o-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(s+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=k.checkMatrix(t);let e=new k(3,3);const r=this.get(0,0),s=this.get(0,1),o=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),v=r*c,S=(-r+l+u)*(c-m+p),R=(-r+l)*(m-p),I=(l+u)*(-c+m),T=(-o+u+a)*(w+d-y),A=(o-a)*(w-y),q=o*d,C=(u+a)*(-d+y),P=(-o+i+h)*(p+d-M),V=(o-h)*(p-M),N=(i+h)*(-d+M),j=v+q+s*g,z=(r+s+o-n-i-u-a)*w+x+E+v+T+q+C,F=v+S+I+(r+s+o-i-h-l-u)*p+q+P+N,D=b+i*(-c+f+g-w-p-d+M)+x+v+q+P+V,H=b+x+E+v+h*y,_=q+P+V+N+n*m,$=v+S+R+u*(-c+m+g-w-p-d+y)+T+A+q,L=T+A+q+C+l*f,O=v+S+R+I+a*M;return e.set(0,0,j),e.set(0,1,z),e.set(0,2,F),e.set(1,0,D),e.set(1,1,H),e.set(1,2,_),e.set(2,0,$),e.set(2,1,L),e.set(2,2,O),e}mmulStrassen(t){t=k.checkMatrix(t);let e=this.clone(),r=e.rows,s=e.columns,o=t.rows,n=t.columns;function i(t,e,r){let s=t.rows,o=t.columns;if(s===e&&o===r)return t;{let s=v.zeros(e,r);return s=s.setSubMatrix(t,0,0),s}}s!==o&&console.warn(`Multiplying ${r} x ${s} and ${o} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,o),l=Math.max(s,n);return e=i(e,h,l),function t(e,r,s,o){if(s<=512||o<=512)return e.mmul(r);s%2==1&&o%2==1?(e=i(e,s+1,o+1),r=i(r,s+1,o+1)):s%2==1?(e=i(e,s+1,o),r=i(r,s+1,o)):o%2==1&&(e=i(e,s,o+1),r=i(r,s,o+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(v.add(l,g),v.add(u,w),n,h),d=t(v.add(f,g),u,n,h),y=t(l,v.sub(c,w),n,h),M=t(g,v.sub(m,u),n,h),b=t(v.add(l,a),w,n,h),x=t(v.sub(f,l),v.add(u,c),n,h),E=t(v.sub(a,g),v.add(m,w),n,h),S=v.add(p,M);S.sub(b),S.add(E);let k=v.add(y,b),R=v.add(d,M),I=v.sub(p,d);I.add(y),I.add(x);let T=v.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(k,S.rows,0),T=T.setSubMatrix(R,0,S.columns),T=T.setSubMatrix(I,S.rows,S.columns),T.subMatrix(0,s-1,0,o-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.rows;t++){const o=this.getRow(t);o.length>0&&h(o,{min:e,max:r,output:o}),s.setRow(t,o)}return s}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.columns;t++){const o=this.getColumn(t);o.length&&h(o,{min:e,max:r,output:o}),s.setColumn(t,o)}return s}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),s=this.get(e,this.columns-1-r);this.set(e,r,s),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),s=this.get(this.rows-1-r,e);this.set(r,e,s),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.rows,o=t.columns,n=new k(e*s,r*o);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<s;r++)for(let h=0;h<o;h++)n.set(s*i+r,o*e+h,this.get(i,e)*t.get(r,h));return n}transpose(){let t=new k(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=S){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=S){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,s){M(this,t,e,r,s);let o=new k(e-t+1,s-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=s;e++)o.set(n-t,e-r,this.get(n,e));return o}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let s=new k(t.length,r-e+1);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.rows)throw new RangeError(`Row index out of range: ${t[o]}`);s.set(o,n-e,this.get(t[o],n))}return s}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let s=new k(r-e+1,t.length);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.columns)throw new RangeError(`Column index out of range: ${t[o]}`);s.set(n-e,o,this.get(n,t[o]))}return s}setSubMatrix(t,e,r){if((t=k.checkMatrix(t)).isEmpty())return this;M(this,e,e+t.rows-1,r,r+t.columns-1);for(let s=0;s<t.rows;s++)for(let o=0;o<t.columns;o++)this.set(e+s,r+o,t.get(s,o));return this}selection(t,e){let r=p(this,t,e),s=new k(t.length,e.length);for(let t=0;t<r.row.length;t++){let e=r.row[t];for(let o=0;o<r.column.length;o++){let n=r.column[o];s.set(t,o,this.get(e,n))}}return s}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new k(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=b(t.rows);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]+=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]+=t.get(r,s);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e+=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=b(t.rows,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]*=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]*=t.get(r,s);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e*=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:s=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(i,e)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,s);case"column":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(e,i)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,s);case void 0:if("number"!=typeof s)throw new TypeError("mean must be a number");return function(t,e,r){const s=t.rows,o=t.columns,n=s*o;let i=0,h=0,l=0;for(let e=0;e<s;e++)for(let s=0;s<o;s++)l=t.get(e,s)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,s);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[r])}(this,r),this;case"column":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[s])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let s=0;for(let e=0;e<t.columns;e++)s+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let s=0;for(let e=0;e<t.rows;e++)s+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[s])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let s=0;s<t.columns;s++)for(let o=0;o<t.rows;o++)r+=Math.pow(t.get(o,s),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return a(this,t)}}function S(t,e){return t-e}v.prototype.klass="Matrix","undefined"!=typeof Symbol&&(v.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return a(this)}),v.random=v.rand,v.randomInt=v.randInt,v.diagonal=v.diag,v.prototype.diagonal=v.prototype.diag,v.identity=v.eye,v.prototype.negate=v.prototype.neg,v.prototype.tensorProduct=v.prototype.kroneckerProduct;class k extends v{constructor(t,e){if(super(),k.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!Array.isArray(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let s=0;s<t;s++){if(r[s].length!==e)throw new RangeError("Inconsistent array dimensions");this.data.push(Float64Array.from(r[s]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return f(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),f(this,t,!0),e=Float64Array.from(g(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){m(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let s=0;s<t;s++)r[s]=this.data[e][s];for(let s=t+1;s<this.columns;s++)r[s-1]=this.data[e][s];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),m(this,t,!0),e=w(this,e);for(let r=0;r<this.rows;r++){const s=new Float64Array(this.columns+1);let o=0;for(;o<t;o++)s[o]=this.data[r][o];for(s[o++]=e[r];o<this.columns+1;o++)s[o]=this.data[r][o-1];this.data[r]=s}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(v,k);class R extends v{constructor(t,e,r){super(),this.matrix=t,this.rows=e,this.columns=r}}class I extends R{constructor(t,e){m(t,e),super(t,t.rows,1),this.column=e}set(t,e,r){return this.matrix.set(t,this.column,r),this}get(t){return this.matrix.get(t,this.column)}}class T extends R{constructor(t,e){e=y(t,e),super(t,t.rows,e.length),this.columnIndices=e}set(t,e,r){return this.matrix.set(t,this.columnIndices[e],r),this}get(t,e){return this.matrix.get(t,this.columnIndices[e])}}class A extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(t,this.columns-e-1,r),this}get(t,e){return this.matrix.get(t,this.columns-e-1)}}class q extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(this.rows-t-1,e,r),this}get(t,e){return this.matrix.get(this.rows-t-1,e)}}class C extends R{constructor(t,e){f(t,e),super(t,1,t.columns),this.row=e}set(t,e,r){return this.matrix.set(this.row,e,r),this}get(t,e){return this.matrix.get(this.row,e)}}class P extends R{constructor(t,e){super(t,(e=d(t,e)).length,t.columns),this.rowIndices=e}set(t,e,r){return this.matrix.set(this.rowIndices[t],e,r),this}get(t,e){return this.matrix.get(this.rowIndices[t],e)}}class V extends R{constructor(t,e,r){let s=p(t,e,r);super(t,s.row.length,s.column.length),this.rowIndices=s.row,this.columnIndices=s.column}set(t,e,r){return this.matrix.set(this.rowIndices[t],this.columnIndices[e],r),this}get(t,e){return this.matrix.get(this.rowIndices[t],this.columnIndices[e])}}class N extends R{constructor(t,e,r,s,o){M(t,e,r,s,o),super(t,r-e+1,o-s+1),this.startRow=e,this.startColumn=s}set(t,e,r){return this.matrix.set(this.startRow+t,this.startColumn+e,r),this}get(t,e){return this.matrix.get(this.startRow+t,this.startColumn+e)}}class j extends R{constructor(t){super(t,t.columns,t.rows)}set(t,e,r){return this.matrix.set(e,t,r),this}get(t,e){return this.matrix.get(e,t)}}class z extends v{constructor(t,e={}){const{rows:r=1}=e;if(t.length%r!=0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=r,this.columns=t.length/r,this.data=t}set(t,e,r){let s=this._calculateIndex(t,e);return this.data[s]=r,this}get(t,e){let r=this._calculateIndex(t,e);return this.data[r]}_calculateIndex(t,e){return t*this.columns+e}}class F extends v{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}function D(t,e){if(Array.isArray(t))return t[0]&&Array.isArray(t[0])?new F(t):new z(t,e);throw new Error("the argument is not an array")}class H{constructor(t){let e,r,s,o,n,i,h,l,u,a=(t=F.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,s=0;s<u;s++)n+=a.get(e,s)*l[s];l[e]-=n,a.set(e,r,l[e])}for(o=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[o])&&(o=e);if(o!==r){for(s=0;s<f;s++)i=a.get(o,s),a.set(o,s,a.get(r,s)),a.set(r,s,i);h=m[o],m[o]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=k.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,s,o,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(o=0;o<h;o++)for(r=o+1;r<h;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o));for(o=h-1;o>=0;o--){for(s=0;s<n;s++)i.set(o,s,i.get(o,s)/e.get(o,o));for(r=0;r<o;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let s=0;s<r;s++)e*=t.get(s,s);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o>e?s.set(o,e,t.get(o,e)):o===e?s.set(o,e,1):s.set(o,e,0);return s}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o<=e?s.set(o,e,t.get(o,e)):s.set(o,e,0);return s}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function _(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class ${constructor(t){let e,r,s,o,n=(t=F.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(s=0;s<h;s++){let t=0;for(e=s;e<i;e++)t=_(t,n.get(e,s));if(0!==t){for(n.get(s,s)<0&&(t=-t),e=s;e<i;e++)n.set(e,s,n.get(e,s)/t);for(n.set(s,s,n.get(s,s)+1),r=s+1;r<h;r++){for(o=0,e=s;e<i;e++)o+=n.get(e,s)*n.get(e,r);for(o=-o/n.get(s,s),e=s;e<i;e++)n.set(e,r,n.get(e,r)+o*n.get(e,s))}}l[s]=-t}this.QR=n,this.Rdiag=l}solve(t){t=k.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let s,o,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(o=0;o<h;o++){for(i=0,s=n;s<r;s++)i+=e.get(s,n)*l.get(s,o);for(i=-i/e.get(n,n),s=n;s<r;s++)l.set(s,o,l.get(s,o)+i*e.get(s,n))}for(n=u-1;n>=0;n--){for(o=0;o<h;o++)l.set(n,o,l.get(n,o)/this.Rdiag[n]);for(s=0;s<n;s++)for(o=0;o<h;o++)l.set(s,o,l.get(s,o)-l.get(n,o)*e.get(s,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,s=r.columns,o=new k(s,s);for(t=0;t<s;t++)for(e=0;e<s;e++)t<e?o.set(t,e,r.get(t,e)):t===e?o.set(t,e,this.Rdiag[t]):o.set(t,e,0);return o}get orthogonalMatrix(){let t,e,r,s,o=this.QR,n=o.rows,i=o.columns,h=new k(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==o.get(r,r)){for(s=0,t=r;t<n;t++)s+=o.get(t,r)*h.get(t,e);for(s=-s/o.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+s*o.get(t,r))}}return h}}class L{constructor(t,e={}){if((t=F.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,s=t.columns;const{computeLeftSingularVectors:o=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(o),u=Boolean(n),a=!1;if(r<s)if(i){h=t.transpose(),r=h.rows,s=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,s),f=Math.min(r+1,s),m=new Float64Array(f),g=new k(r,c),w=new k(s,s),p=new Float64Array(s),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,s),b=Math.max(0,Math.min(s-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=_(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<s;e++){if(t<M&&0!==m[t]){let s=0;for(let o=t;o<r;o++)s+=h.get(o,t)*h.get(o,e);s=-s/h.get(t,t);for(let o=t;o<r;o++)h.set(o,e,h.get(o,e)+s*h.get(o,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<s;e++)p[t]=_(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<s;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<s;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<s;e++){let s=-p[e]/p[t+1];for(let o=t+1;o<r;o++)h.set(o,e,h.get(o,e)+s*d[o])}}if(u)for(let e=t+1;e<s;e++)w.set(e,t,p[e])}}let E=Math.min(s,r+1);if(M<s&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let s=0;for(let o=t;o<r;o++)s+=g.get(o,t)*g.get(o,e);s=-s/g.get(t,t);for(let o=t;o<r;o++)g.set(o,e,g.get(o,e)+s*g.get(o,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=s-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<s;e++){let r=0;for(let o=t+1;o<s;o++)r+=w.get(o,t)*w.get(o,e);r=-r/w.get(t+1,t);for(let o=t+1;o<s;o++)w.set(o,e,w.get(o,e)+r*w.get(o,t))}for(let e=0;e<s;e++)w.set(e,t,0);w.set(t,t,1)}let v=E-1,S=0,R=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+R*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=R*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let o=_(m[r],e),n=m[r]/o,i=e/o;if(m[r]=o,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<s;t++)o=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,o)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let s=t;s<E;s++){let o=_(m[s],e),n=m[s]/o,i=e/o;if(m[s]=o,e=-i*p[s],p[s]=n*p[s],l)for(let e=0;e<r;e++)o=n*g.get(e,s)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,s)+n*g.get(e,t-1)),g.set(e,s,o)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),o=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+o)*(n-o)+i*i)/2,f=o*i*(o*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+o)*(h-o)+d,M=h*a;for(let e=t;e<E-1;e++){let o=_(y,M);0===o&&(o=Number.MIN_VALUE);let n=y/o,i=M/o;if(e!==t&&(p[e-1]=o),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<s;t++)o=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,o);if(o=_(y,M),0===o&&(o=Number.MIN_VALUE),n=y/o,i=M/o,m[e]=o,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)o=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,o)}p[E-2]=y,S+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=v;e++)w.set(e,t,-w.get(e,t));for(;t<v&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<s-1)for(let r=0;r<s;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let s=0;s<r;s++)e=g.get(s,t+1),g.set(s,t+1,g.get(s,t)),g.set(s,t,e);t++}S=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=s,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,s=this.s.length,o=k.zeros(s,s);for(let t=0;t<s;t++)Math.abs(this.s[t])<=r?o.set(t,t,0):o.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(o),l=i.rows,u=n.rows,a=k.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let o=0;o<s;o++)r+=h.get(t,o)*n.get(e,o);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(k.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,s=t.columns,o=new k(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<s;r++)Math.abs(this.s[r])>e&&o.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new k(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let s=0;s<h;s++)r+=o.get(t,s)*n.get(e,s);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let s=0,o=r.length;s<o;s++)r[s]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return k.diag(this.s)}}function O(t,e=!1){return t=F.checkMatrix(t),e?new L(t).inverse():U(t,k.eye(t.rows))}function U(t,e,r=!1){return t=F.checkMatrix(t),e=F.checkMatrix(e),r?new L(t).solve(e):t.isSquare()?new H(t).solve(e):new $(t).solve(e)}function X(t){if((t=k.checkMatrix(t)).isSquare()){if(0===t.columns)return 1;let e,r,s,o;if(2===t.columns)return e=t.get(0,0),r=t.get(0,1),s=t.get(1,0),o=t.get(1,1),e*o-r*s;if(3===t.columns){let o,n,i;return o=new V(t,[1,2],[1,2]),n=new V(t,[1,2],[0,2]),i=new V(t,[1,2],[0,1]),e=t.get(0,0),r=t.get(0,1),s=t.get(0,2),e*X(o)-r*X(n)+s*X(i)}return new H(t).determinant}throw Error("determinant can only be calculated for a square matrix")}function Y(t,e){let r=[];for(let s=0;s<t;s++)s!==e&&r.push(s);return r}function G(t,e,r,s=1e-9,o=1e-9){if(t>o)return new Array(e.rows+1).fill(0);{let t=e.addRow(r,[0]);for(let e=0;e<t.rows;e++)Math.abs(t.get(e,0))<s&&t.set(e,0,0);return t.to1DArray()}}function Q(t,e={}){const{thresholdValue:r=1e-9,thresholdError:s=1e-9}=e;let o=(t=k.checkMatrix(t)).rows,n=new k(o,o);for(let e=0;e<o;e++){let i=k.columnVector(t.getRow(e)),h=t.subMatrixRow(Y(o,e)).transpose(),l=new L(h).solve(i),u=k.sub(i,h.mmul(l)).abs().max();n.setRow(e,G(u,l,e,r,s))}return n}function W(t,e=Number.EPSILON){if((t=k.checkMatrix(t)).isEmpty())return t.transpose();let r=new L(t,{autoTranspose:!0}),s=r.leftSingularVectors,o=r.rightSingularVectors,n=r.diagonal;for(let t=0;t<n.length;t++)Math.abs(n[t])>e?n[t]=1/n[t]:n[t]=0;return o.mmul(k.diag(n).mmul(s.transpose()))}function B(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0}=r;o&&(t=t.center("column"),s||(e=e.center("column")));const n=t.transpose().mmul(e);for(let e=0;e<n.rows;e++)for(let r=0;r<n.columns;r++)n.set(e,r,n.get(e,r)*(1/(t.rows-1)));return n}function J(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0,scale:n=!0}=r;o&&(t.center("column"),s||e.center("column")),n&&(t.scale("column"),s||e.scale("column"));const i=t.standardDeviation("column",{unbiased:!0}),h=s?i:e.standardDeviation("column",{unbiased:!0}),l=t.transpose().mmul(e);for(let e=0;e<l.rows;e++)for(let r=0;r<l.columns;r++)l.set(e,r,l.get(e,r)*(1/(i[e]*h[r]))*(1/(t.rows-1)));return l}class K{constructor(t,e={}){const{assumeSymmetric:r=!1}=e;if(!(t=F.checkMatrix(t)).isSquare())throw new Error("Matrix is not a square matrix");if(t.isEmpty())throw new Error("Matrix must be non-empty");let s,o,n=t.columns,i=new k(n,n),h=new Float64Array(n),l=new Float64Array(n),u=t,a=!1;if(a=!!r||t.isSymmetric(),a){for(s=0;s<n;s++)for(o=0;o<n;o++)i.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c;for(l=0;l<t;l++)r[l]=s.get(t-1,l);for(h=t-1;h>0;h--){for(c=0,i=0,u=0;u<h;u++)c+=Math.abs(r[u]);if(0===c)for(e[h]=r[h-1],l=0;l<h;l++)r[l]=s.get(h-1,l),s.set(h,l,0),s.set(l,h,0);else{for(u=0;u<h;u++)r[u]/=c,i+=r[u]*r[u];for(o=r[h-1],n=Math.sqrt(i),o>0&&(n=-n),e[h]=c*n,i-=o*n,r[h-1]=o-n,l=0;l<h;l++)e[l]=0;for(l=0;l<h;l++){for(o=r[l],s.set(l,h,o),n=e[l]+s.get(l,l)*o,u=l+1;u<=h-1;u++)n+=s.get(u,l)*r[u],e[u]+=s.get(u,l)*o;e[l]=n}for(o=0,l=0;l<h;l++)e[l]/=i,o+=e[l]*r[l];for(a=o/(i+i),l=0;l<h;l++)e[l]-=a*r[l];for(l=0;l<h;l++){for(o=r[l],n=e[l],u=l;u<=h-1;u++)s.set(u,l,s.get(u,l)-(o*e[u]+n*r[u]));r[l]=s.get(h-1,l),s.set(h,l,0)}}r[h]=i}for(h=0;h<t-1;h++){if(s.set(t-1,h,s.get(h,h)),s.set(h,h,1),i=r[h+1],0!==i){for(u=0;u<=h;u++)r[u]=s.get(u,h+1)/i;for(l=0;l<=h;l++){for(n=0,u=0;u<=h;u++)n+=s.get(u,h+1)*s.get(u,l);for(u=0;u<=h;u++)s.set(u,l,s.get(u,l)-n*r[u])}}for(u=0;u<=h;u++)s.set(u,h+1,0)}for(l=0;l<t;l++)r[l]=s.get(t-1,l),s.set(t-1,l,0);s.set(t-1,t-1,1),e[0]=0}(n,l,h,i),function(t,e,r,s){let o,n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b;for(i=1;i<t;i++)e[i-1]=e[i];e[t-1]=0;let x=0,E=0,v=Number.EPSILON;for(u=0;u<t;u++){for(E=Math.max(E,Math.abs(r[u])+Math.abs(e[u])),a=u;a<t&&!(Math.abs(e[a])<=v*E);)a++;if(a>u){b=0;do{for(b+=1,o=r[u],c=(r[u+1]-o)/(2*e[u]),f=_(c,1),c<0&&(f=-f),r[u]=e[u]/(c+f),r[u+1]=e[u]*(c+f),m=r[u+1],n=o-r[u],i=u+2;i<t;i++)r[i]-=n;for(x+=n,c=r[a],g=1,w=g,p=g,d=e[u+1],y=0,M=0,i=a-1;i>=u;i--)for(p=w,w=g,M=y,o=g*e[i],n=g*c,f=_(c,e[i]),e[i+1]=y*f,y=e[i]/f,g=c/f,c=g*r[i]-y*o,r[i+1]=n+y*(g*o+y*r[i]),l=0;l<t;l++)n=s.get(l,i+1),s.set(l,i+1,y*s.get(l,i)+g*n),s.set(l,i,g*s.get(l,i)-y*n);c=-y*M*p*d*e[u]/m,e[u]=y*c,r[u]=g*c}while(Math.abs(e[u])>v*E)}r[u]=r[u]+x,e[u]=0}for(i=0;i<t-1;i++){for(l=i,c=r[i],h=i+1;h<t;h++)r[h]<c&&(l=h,c=r[h]);if(l!==i)for(r[l]=r[i],r[i]=c,h=0;h<t;h++)c=s.get(h,i),s.set(h,i,s.get(h,l)),s.set(h,l,c)}}(n,l,h,i)}else{let t=new k(n,n),e=new Float64Array(n);for(o=0;o<n;o++)for(s=0;s<n;s++)t.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c=t-1;for(u=1;u<=c-1;u++){for(a=0,h=u;h<=c;h++)a+=Math.abs(e.get(h,u-1));if(0!==a){for(i=0,h=c;h>=u;h--)r[h]=e.get(h,u-1)/a,i+=r[h]*r[h];for(n=Math.sqrt(i),r[u]>0&&(n=-n),i-=r[u]*n,r[u]=r[u]-n,l=u;l<t;l++){for(o=0,h=c;h>=u;h--)o+=r[h]*e.get(h,l);for(o/=i,h=u;h<=c;h++)e.set(h,l,e.get(h,l)-o*r[h])}for(h=0;h<=c;h++){for(o=0,l=c;l>=u;l--)o+=r[l]*e.get(h,l);for(o/=i,l=u;l<=c;l++)e.set(h,l,e.get(h,l)-o*r[l])}r[u]=a*r[u],e.set(u,u-1,a*n)}}for(h=0;h<t;h++)for(l=0;l<t;l++)s.set(h,l,h===l?1:0);for(u=c-1;u>=1;u--)if(0!==e.get(u,u-1)){for(h=u+1;h<=c;h++)r[h]=e.get(h,u-1);for(l=u;l<=c;l++){for(n=0,h=u;h<=c;h++)n+=r[h]*s.get(h,l);for(n=n/r[u]/e.get(u,u-1),h=u;h<=c;h++)s.set(h,l,s.get(h,l)+n*r[h])}}}(n,t,e,i),function(t,e,r,s,o){let n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b=t-1,x=t-1,E=Number.EPSILON,v=0,S=0,k=0,R=0,I=0,T=0,A=0,q=0;for(n=0;n<t;n++)for((n<0||n>x)&&(r[n]=o.get(n,n),e[n]=0),i=Math.max(n-1,0);i<t;i++)S+=Math.abs(o.get(n,i));for(;b>=0;){for(l=b;l>0&&(T=Math.abs(o.get(l-1,l-1))+Math.abs(o.get(l,l)),0===T&&(T=S),!(Math.abs(o.get(l,l-1))<E*T));)l--;if(l===b)o.set(b,b,o.get(b,b)+v),r[b]=o.get(b,b),e[b]=0,b--,q=0;else if(l===b-1){if(c=o.get(b,b-1)*o.get(b-1,b),k=(o.get(b-1,b-1)-o.get(b,b))/2,R=k*k+c,A=Math.sqrt(Math.abs(R)),o.set(b,b,o.get(b,b)+v),o.set(b-1,b-1,o.get(b-1,b-1)+v),f=o.get(b,b),R>=0){for(A=k>=0?k+A:k-A,r[b-1]=f+A,r[b]=r[b-1],0!==A&&(r[b]=f-c/A),e[b-1]=0,e[b]=0,f=o.get(b,b-1),T=Math.abs(f)+Math.abs(A),k=f/T,R=A/T,I=Math.sqrt(k*k+R*R),k/=I,R/=I,i=b-1;i<t;i++)A=o.get(b-1,i),o.set(b-1,i,R*A+k*o.get(b,i)),o.set(b,i,R*o.get(b,i)-k*A);for(n=0;n<=b;n++)A=o.get(n,b-1),o.set(n,b-1,R*A+k*o.get(n,b)),o.set(n,b,R*o.get(n,b)-k*A);for(n=0;n<=x;n++)A=s.get(n,b-1),s.set(n,b-1,R*A+k*s.get(n,b)),s.set(n,b,R*s.get(n,b)-k*A)}else r[b-1]=f+k,r[b]=f+k,e[b-1]=A,e[b]=-A;b-=2,q=0}else{if(f=o.get(b,b),m=0,c=0,l<b&&(m=o.get(b-1,b-1),c=o.get(b,b-1)*o.get(b-1,b)),10===q){for(v+=f,n=0;n<=b;n++)o.set(n,n,o.get(n,n)-f);T=Math.abs(o.get(b,b-1))+Math.abs(o.get(b-1,b-2)),f=m=.75*T,c=-.4375*T*T}if(30===q&&(T=(m-f)/2,T=T*T+c,T>0)){for(T=Math.sqrt(T),m<f&&(T=-T),T=f-c/((m-f)/2+T),n=0;n<=b;n++)o.set(n,n,o.get(n,n)-T);v+=T,f=m=c=.964}for(q+=1,u=b-2;u>=l&&(A=o.get(u,u),I=f-A,T=m-A,k=(I*T-c)/o.get(u+1,u)+o.get(u,u+1),R=o.get(u+1,u+1)-A-I-T,I=o.get(u+2,u+1),T=Math.abs(k)+Math.abs(R)+Math.abs(I),k/=T,R/=T,I/=T,u!==l)&&!(Math.abs(o.get(u,u-1))*(Math.abs(R)+Math.abs(I))<E*(Math.abs(k)*(Math.abs(o.get(u-1,u-1))+Math.abs(A)+Math.abs(o.get(u+1,u+1)))));)u--;for(n=u+2;n<=b;n++)o.set(n,n-2,0),n>u+2&&o.set(n,n-3,0);for(h=u;h<=b-1&&(y=h!==b-1,h!==u&&(k=o.get(h,h-1),R=o.get(h+1,h-1),I=y?o.get(h+2,h-1):0,f=Math.abs(k)+Math.abs(R)+Math.abs(I),0!==f&&(k/=f,R/=f,I/=f)),0!==f);h++)if(T=Math.sqrt(k*k+R*R+I*I),k<0&&(T=-T),0!==T){for(h!==u?o.set(h,h-1,-T*f):l!==u&&o.set(h,h-1,-o.get(h,h-1)),k+=T,f=k/T,m=R/T,A=I/T,R/=k,I/=k,i=h;i<t;i++)k=o.get(h,i)+R*o.get(h+1,i),y&&(k+=I*o.get(h+2,i),o.set(h+2,i,o.get(h+2,i)-k*A)),o.set(h,i,o.get(h,i)-k*f),o.set(h+1,i,o.get(h+1,i)-k*m);for(n=0;n<=Math.min(b,h+3);n++)k=f*o.get(n,h)+m*o.get(n,h+1),y&&(k+=A*o.get(n,h+2),o.set(n,h+2,o.get(n,h+2)-k*I)),o.set(n,h,o.get(n,h)-k),o.set(n,h+1,o.get(n,h+1)-k*R);for(n=0;n<=x;n++)k=f*s.get(n,h)+m*s.get(n,h+1),y&&(k+=A*s.get(n,h+2),s.set(n,h+2,s.get(n,h+2)-k*I)),s.set(n,h,s.get(n,h)-k),s.set(n,h+1,s.get(n,h+1)-k*R)}}}if(0!==S){for(b=t-1;b>=0;b--)if(k=r[b],R=e[b],0===R)for(l=b,o.set(b,b,1),n=b-1;n>=0;n--){for(c=o.get(n,n)-k,I=0,i=l;i<=b;i++)I+=o.get(n,i)*o.get(i,b);if(e[n]<0)A=c,T=I;else if(l=n,0===e[n]?o.set(n,b,0!==c?-I/c:-I/(E*S)):(f=o.get(n,n+1),m=o.get(n+1,n),R=(r[n]-k)*(r[n]-k)+e[n]*e[n],a=(f*T-A*I)/R,o.set(n,b,a),o.set(n+1,b,Math.abs(f)>Math.abs(A)?(-I-c*a)/f:(-T-m*a)/A)),a=Math.abs(o.get(n,b)),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b,o.get(i,b)/a)}else if(R<0)for(l=b-1,Math.abs(o.get(b,b-1))>Math.abs(o.get(b-1,b))?(o.set(b-1,b-1,R/o.get(b,b-1)),o.set(b-1,b,-(o.get(b,b)-k)/o.get(b,b-1))):(M=Z(0,-o.get(b-1,b),o.get(b-1,b-1)-k,R),o.set(b-1,b-1,M[0]),o.set(b-1,b,M[1])),o.set(b,b-1,0),o.set(b,b,1),n=b-2;n>=0;n--){for(g=0,w=0,i=l;i<=b;i++)g+=o.get(n,i)*o.get(i,b-1),w+=o.get(n,i)*o.get(i,b);if(c=o.get(n,n)-k,e[n]<0)A=c,I=g,T=w;else if(l=n,0===e[n]?(M=Z(-g,-w,c,R),o.set(n,b-1,M[0]),o.set(n,b,M[1])):(f=o.get(n,n+1),m=o.get(n+1,n),p=(r[n]-k)*(r[n]-k)+e[n]*e[n]-R*R,d=2*(r[n]-k)*R,0===p&&0===d&&(p=E*S*(Math.abs(c)+Math.abs(R)+Math.abs(f)+Math.abs(m)+Math.abs(A))),M=Z(f*I-A*g+R*w,f*T-A*w-R*g,p,d),o.set(n,b-1,M[0]),o.set(n,b,M[1]),Math.abs(f)>Math.abs(A)+Math.abs(R)?(o.set(n+1,b-1,(-g-c*o.get(n,b-1)+R*o.get(n,b))/f),o.set(n+1,b,(-w-c*o.get(n,b)-R*o.get(n,b-1))/f)):(M=Z(-I-m*o.get(n,b-1),-T-m*o.get(n,b),A,R),o.set(n+1,b-1,M[0]),o.set(n+1,b,M[1]))),a=Math.max(Math.abs(o.get(n,b-1)),Math.abs(o.get(n,b))),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b-1,o.get(i,b-1)/a),o.set(i,b,o.get(i,b)/a)}for(n=0;n<t;n++)if(n<0||n>x)for(i=n;i<t;i++)s.set(n,i,o.get(n,i));for(i=t-1;i>=0;i--)for(n=0;n<=x;n++){for(A=0,h=0;h<=Math.min(i,x);h++)A+=s.get(n,h)*o.get(h,i);s.set(n,i,A)}}}(n,l,h,i,t)}this.n=n,this.e=l,this.d=h,this.V=i}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let t,e,r=this.n,s=this.e,o=this.d,n=new k(r,r);for(t=0;t<r;t++){for(e=0;e<r;e++)n.set(t,e,0);n.set(t,t,o[t]),s[t]>0?n.set(t,t+1,s[t]):s[t]<0&&n.set(t,t-1,s[t])}return n}}function Z(t,e,r,s){let o,n;return Math.abs(r)>Math.abs(s)?(o=s/r,n=r+o*s,[(t+o*e)/n,(e-o*t)/n]):(o=r/s,n=s+o*r,[(o*t+e)/n,(o*e-t)/n])}class tt{constructor(t){if(!(t=F.checkMatrix(t)).isSymmetric())throw new Error("Matrix is not symmetric");let e,r,s,o=t,n=o.rows,i=new k(n,n),h=!0;for(r=0;r<n;r++){let t=0;for(s=0;s<r;s++){let n=0;for(e=0;e<s;e++)n+=i.get(s,e)*i.get(r,e);n=(o.get(r,s)-n)/i.get(s,s),i.set(r,s,n),t+=n*n}for(t=o.get(r,r)-t,h&=t>0,i.set(r,r,Math.sqrt(Math.max(t,0))),s=r+1;s<n;s++)i.set(r,s,0)}this.L=i,this.positiveDefinite=Boolean(h)}isPositiveDefinite(){return this.positiveDefinite}solve(t){t=F.checkMatrix(t);let e=this.L,r=e.rows;if(t.rows!==r)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let s,o,n,i=t.columns,h=t.clone();for(n=0;n<r;n++)for(o=0;o<i;o++){for(s=0;s<n;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(n,s));h.set(n,o,h.get(n,o)/e.get(n,n))}for(n=r-1;n>=0;n--)for(o=0;o<i;o++){for(s=n+1;s<r;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(s,n));h.set(n,o,h.get(n,o)/e.get(n,n))}return h}get lowerTriangularMatrix(){return this.L}}class et{constructor(t,e={}){t=F.checkMatrix(t);let{Y:r}=e;const{scaleScores:s=!1,maxIterations:o=1e3,terminationCriteria:n=1e-10}=e;let i;if(r){if(r=Array.isArray(r)&&"number"==typeof r[0]?k.columnVector(r):F.checkMatrix(r),!r.isColumnVector()||r.rows!==t.rows)throw new Error("Y must be a column vector of length X.rows");i=r}else i=t.getColumnVector(0);let h,l,u,a,c=1;for(let e=0;e<o&&c>n;e++)u=t.transpose().mmul(i).div(i.transpose().mmul(i).get(0,0)),u=u.div(u.norm()),h=t.mmul(u).div(u.transpose().mmul(u).get(0,0)),e>0&&(c=h.clone().sub(a).pow(2).sum()),a=h.clone(),r?(l=r.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),l=l.div(l.norm()),i=r.mmul(l).div(l.transpose().mmul(l).get(0,0))):i=h;if(r){let e=t.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0));e=e.div(e.norm());let s=t.clone().sub(h.clone().mmul(e.transpose())),o=i.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),n=r.clone().sub(h.clone().mulS(o.get(0,0)).mmul(l.transpose()));this.t=h,this.p=e.transpose(),this.w=u.transpose(),this.q=l,this.u=i,this.s=h.transpose().mmul(h),this.xResidual=s,this.yResidual=n,this.betas=o}else this.w=u.transpose(),this.s=h.transpose().mmul(h).sqrt(),this.t=s?h.clone().div(this.s.get(0,0)):h,this.xResidual=t.sub(h.mmul(u.transpose()))}}},842:(t,e,r)=>{"use strict";r.d(e,{Z:()=>s});class s{constructor(t=[],e=o){if(this.data=t,this.length=this.data.length,this.compare=e,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,s=e[t];for(;t>0;){const o=t-1>>1,n=e[o];if(r(s,n)>=0)break;e[t]=n,t=o}e[t]=s}_down(t){const{data:e,compare:r}=this,s=this.length>>1,o=e[t];for(;t<s;){let s=1+(t<<1),n=e[s];const i=s+1;if(i<this.length&&r(e[i],n)<0&&(s=i,n=e[i]),r(n,o)>=0)break;e[t]=n,t=s}e[t]=o}}function o(t,e){return t<e?-1:t>e?1:0}},902:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{solveHomography:n}=r(450);t.exports={estimate:({screenCoords:t,worldCoords:e,projectionTransform:r})=>{const i=n(e.map((t=>[t.x,t.y])),t.map((t=>[t.x,t.y]))),h=new s([[i[0],i[1],i[2]],[i[3],i[4],i[5]],[i[6],i[7],i[8]]]),l=new s(r),u=o(l).mmul(h).to1DArray(),a=Math.sqrt(u[0]*u[0]+u[3]*u[3]+u[6]*u[6]),c=Math.sqrt(u[1]*u[1]+u[4]*u[4]+u[7]*u[7]),f=(a+c)/2,m=[];m[0]=u[0]/a,m[3]=u[3]/a,m[6]=u[6]/a,m[1]=u[1]/c,m[4]=u[4]/c,m[7]=u[7]/c,m[2]=m[3]*m[7]-m[6]*m[4],m[5]=m[6]*m[1]-m[0]*m[7],m[8]=m[0]*m[4]-m[1]*m[3];const g=Math.sqrt(m[2]*m[2]+m[5]*m[5]+m[8]*m[8]);m[2]/=g,m[5]/=g,m[8]/=g;const w=[];return w[0]=u[2]/f,w[1]=u[5]/f,w[2]=u[8]/f,[[m[0],m[1],m[2],w[0]],[m[3],m[4],m[5],w[1]],[m[6],m[7],m[8],w[2]]]}}},421:(t,e,r)=>{const{estimate:s}=r(902),{refineEstimate:o}=r(269);t.exports={Estimator:class{constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return s({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return o({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}}},269:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{normalizePoints:n,applyModelViewProjectionTransform:i,buildModelViewProjectionTransform:h,computeScreenCoordiate:l}=r(420);let u=[[],[],[]],a=[[],[]],c=[[],[],[]];const f=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s,inlierProb:o})=>{const n=o<1;let i=t,u=0,a=0,c=new Array(r.length),f=new Array(r.length),p=new Array(r.length),d=new Array(r.length);for(let t=0;t<=10;t++){const y=h(e,i);for(let t=0;t<r.length;t++){const e=l(y,r[t].x,r[t].y,r[t].z),o=s[t].x-e.x,n=s[t].y-e.y;p[t]=o,d[t]=n,c[t]=o*o+n*n}let M;if(a=0,n){const t=Math.max(3,Math.floor(r.length*o)-1);for(let t=0;t<r.length;t++)f[t]=c[t];f.sort(((t,e)=>t-e)),M=Math.max(4*f[t],16);for(let t=0;t<r.length;t++)f[t]>M?a+=M/6:a+=M/6*(1-(1-f[t]/M)*(1-f[t]/M)*(1-f[t]/M))}else for(let t=0;t<r.length;t++)a+=c[t];if(a/=r.length,a<.1)break;if(t>0&&a/u>.99)break;if(10===t)break;u=a;const b=[],x=[];for(let t=0;t<r.length;t++){if(n&&c[t]>M)continue;const s=w({modelViewProjectionTransform:y,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-c[t]/M)*(1-c[t]/M);for(let t=0;t<2;t++)for(let r=0;r<6;r++)s[t][r]*=e;b.push([p[t]*e]),b.push([d[t]*e])}else b.push([p[t]]),b.push([d[t]]);for(let t=0;t<s.length;t++)x.push(s[t])}const E=g({dU:b,J_U_S:x});if(null===E)break;i=m({modelViewTransform:i,dS:E})}return{modelViewTransform:i,err:a}},m=({modelViewTransform:t,dS:e})=>{let r,s,o,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];n<1e-6?(r=1,s=0,o=0,n=0):(n=Math.sqrt(n),r=e[0]/n,s=e[1]/n,o=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;u[0][0]=r*r*l+i,u[0][1]=r*s*l-o*h,u[0][2]=r*o*l+s*h,u[0][3]=e[3],u[1][0]=s*r*l+o*h,u[1][1]=s*s*l+i,u[1][2]=s*o*l-r*h,u[1][3]=e[4],u[2][0]=o*r*l-s*h,u[2][1]=o*s*l+r*h,u[2][2]=o*o*l+i,u[2][3]=e[5];const a=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)a[e][r]=t[e][0]*u[0][r]+t[e][1]*u[1][r]+t[e][2]*u[2][r];a[e][3]+=t[e][3]}return a},g=({dU:t,J_U_S:e})=>{const r=new s(e),n=new s(t),i=r.transpose(),h=i.mmul(r),l=i.mmul(n);let u;try{u=o(h)}catch(t){return null}return u.mmul(l).to1DArray()},w=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:s})=>{const o=e,{x:n,y:h,z:l}=s,u=i(t,n,h,l),f=u.z*u.z;a[0][0]=r[0][0]*u.z/f,a[0][1]=r[0][1]*u.z/f,a[0][2]=(r[0][2]*u.z-r[2][2]*u.x)/f,a[1][0]=r[1][0]*u.z/f,a[1][1]=r[1][1]*u.z/f,a[1][2]=(r[1][2]*u.z-r[2][2]*u.y)/f,c[0][0]=o[0][2]*h,c[0][1]=-o[0][2]*n,c[0][2]=o[0][1]*n-o[0][0]*h,c[0][3]=o[0][0],c[0][4]=o[0][1],c[0][5]=o[0][2],c[1][0]=o[1][2]*h,c[1][1]=-o[1][2]*n,c[1][2]=o[1][1]*n-o[1][0]*h,c[1][3]=o[1][0],c[1][4]=o[1][1],c[1][5]=o[1][2],c[2][0]=o[2][2]*h,c[2][1]=-o[2][2]*n,c[2][2]=o[2][1]*n-o[2][0]*h,c[2][3]=o[2][0],c[2][4]=o[2][1],c[2][5]=o[2][2];const m=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){m[t][e]=0;for(let r=0;r<3;r++)m[t][e]+=a[t][r]*c[r][e]}return m};t.exports={refineEstimate:({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s})=>{let o=0,n=0;for(let t=0;t<r.length;t++)o+=r[t].x,n+=r[t].y;o/=r.length,n/=r.length;const i=[];for(let t=0;t<r.length;t++)i.push({x:r[t].x-o,y:r[t].y-n,z:r[t].z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*o+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*o+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*o+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(let t=0;t<l.length;t++){const r=f({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:s,inlierProb:l[t]});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*o-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*o-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*o-a[2][1]*n,a)}}},420:t=>{const e=(t,e,r,s)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]});t.exports={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:e,computeScreenCoordiate:(t,r,s,o)=>{const{x:n,y:i,z:h}=e(t,r,s);return{x:n/h,y:i/h}}}},233:t=>{t.exports={compute:t=>{const{v1:e,v2:r}=t;let s=0;for(let t=0;t<e.length;t++){let i=(e[t]^r[t])>>>0;s+=(n=void 0,((n=((n=((n=((n=(o=i)-(o>>1&1431655765))>>2&858993459)+(858993459&n))>>4)+n&252645135)>>8)+n&16711935)>>16)+n&65535)}var o,n;return s}}},934:t=>{const e=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:s,scaleOneOverLogK:o})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*s+c,y:u[2]*r+u[3]*s+f,angle:n,scale:Math.log(i)*o}};t.exports={computeHoughMatches:t=>{const{keywidth:r,keyheight:s,querywidth:o,queryheight:n,matches:i}=t,h=1.2*o,l=-h,u=1.2*n,a=-u,c=12,f=1/Math.log(10),m=Math.max(r,s),g=Math.floor(r/2),w=Math.floor(s/2),p=[];for(let t=0;t<i.length;t++){const e=i[t].querypoint.scale,r=i[t].keypoint.scale;0==r&&console.log("ERROR divide zero");const s=e/r;p.push(s*m)}p.sort(((t,e)=>t-e));const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((h-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*c,E=[],v=[],S={};for(let t=0;t<i.length;t++){const r=i[t].querypoint,s=i[t].keypoint,{x:o,y:n,scale:m,angle:p}=e({querypoint:r,keypoint:s,keycenterX:g,keycenterY:w,scaleOneOverLogK:f});if(o<l||o>=h||n<a||n>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}let d=y*(o-l)/(h-l),k=M*(n-a)/(u-a),R=c*(p+Math.PI)/(2*Math.PI),I=10*(m- -1)/2;v[t]={binX:d,binY:k,binAngle:R,binScale:I};let T=Math.floor(d-.5),A=Math.floor(k-.5),q=Math.floor(I-.5),C=(Math.floor(R-.5)+c)%c;if(T<0||T+1>=y||A<0||A+1>=M||q<0||q+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){let e=T+t;for(let t=0;t<2;t++){let r=A+t;for(let t=0;t<2;t++){let s=(C+t)%c;for(let t=0;t<2;t++){const o=e+r*y+s*b+(q+t)*x;void 0===S[o]&&(S[o]=0),S[o]+=1}}}}E[t]=!0}}let k=0,R=-1;if(Object.keys(S).forEach((t=>{S[t]>k&&(k=S[t],R=t)})),k<3)return[];const I=Math.floor(R%x%b%y),T=Math.floor((R-I)%x%b/y),A=Math.floor((R-I-T*y)%x/b),q=Math.floor((R-I-T*y-A*b)/x),C=[];for(let t=0;t<i.length;t++){if(!E[t])continue;const e=v[t];if(Math.abs(e.binX-(I+.5))>=1)continue;if(Math.abs(e.binY-(T+.5))>=1)continue;if(Math.abs(e.binScale-(q+.5))>=1)continue;const r=Math.abs(e.binAngle-(A+.5));Math.min(r,c-r)>=1||C.push(i[t])}return C}}},582:(t,e,r)=>{const{match:s}=r(492);t.exports={Matcher:class{constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){let r={frames:[]},o=null;for(let n=0;n<t.length;n++){const{H:i,matches:h,debugExtra:l}=s({keyframe:t[n],querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});r.frames.push(l),i&&(null===o||o.matches.length<h.length)&&(o={keyframeIndex:n,H:i,matches:h})}if(null===o)return{keyframeIndex:-1,debugExtra:r};const n=[],i=[],h=t[o.keyframeIndex];for(let t=0;t<o.matches.length;t++){const e=o.matches[t].querypoint,r=o.matches[t].keypoint;n.push({x:e.x,y:e.y}),i.push({x:(r.x+.5)/h.scale,y:(r.y+.5)/h.scale,z:0})}return{screenCoords:n,worldCoords:i,keyframeIndex:o.keyframeIndex,debugExtra:r}}}}},492:(t,e,r)=>{const s=r(842).Z,{compute:o}=r(233),{computeHoughMatches:n}=r(934),{computeHomography:i}=r(838),{multiplyPointHomographyInhomogenous:h,matrixInverse33:l}=r(289),u=({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(let e=0;e<t.pointIndexes.length;e++)n.push(t.pointIndexes[e]);return}const h=[];for(let s=0;s<t.children.length;s++){const n=t.children[s].centerPointIndex,i=o({v1:e[n].descriptors,v2:r.descriptors});h.push(i)}let l=Number.MAX_SAFE_INTEGER;for(let e=0;e<t.children.length;e++)l=Math.min(l,h[e]);for(let e=0;e<t.children.length;e++)h[e]!==l&&s.push({node:t.children[e],d:h[e]});for(let o=0;o<t.children.length;o++)h[o]===l&&u({node:t.children[o],keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i});if(i<8&&s.length>0){const{node:t,d:o}=s.pop();u({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i+=1})}},a=t=>{const{H:e,matches:r,threshold:s}=t,o=s*s,n=[];for(let t=0;t<r.length;t++){const s=r[t].querypoint,i=r[t].keypoint,l=h([i.x,i.y],e);(l[0]-s.x)*(l[0]-s.x)+(l[1]-s.y)*(l[1]-s.y)<=o&&n.push(r[t])}return n};t.exports={match:({keyframe:t,querypoints:e,querywidth:r,queryheight:c,debugMode:f})=>{let m={};const g=[];for(let r=0;r<e.length;r++){const n=e[r],i=n.maxima?t.maximaPoints:t.minimaPoints;if(0===i.length)continue;const h=n.maxima?t.maximaPointsCluster.rootNode:t.minimaPointsCluster.rootNode,l=[],a=new s([],((t,e)=>t.d-e.d));u({node:h,keypoints:i,querypoint:n,queue:a,keypointIndexes:l,numPop:0});let c=-1,f=Number.MAX_SAFE_INTEGER,m=Number.MAX_SAFE_INTEGER;for(let t=0;t<l.length;t++){const e=i[l[t]],r=o({v1:e.descriptors,v2:n.descriptors});r<f?(m=f,f=r,c=l[t]):r<m&&(m=r)}-1!==c&&(m===Number.MAX_SAFE_INTEGER||1*f/m<.7)&&g.push({querypoint:n,keypoint:i[c]})}if(f&&(m.matches=g),g.length<6)return{debugExtra:m};const w=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:g});f&&(m.houghMatches=w);const p=i({srcPoints:w.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:w.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===p)return{debugExtra:m};const d=a({H:p,matches:w,threshold:3});if(f&&(m.inlierMatches=d),d.length<6)return{debugExtra:m};const y=l(p,1e-5),M=[];for(let r=0;r<e.length;r++){const s=e[r],n=h([s.x,s.y],y);let i=-1,l=Number.MAX_SAFE_INTEGER,u=Number.MAX_SAFE_INTEGER;const a=s.maxima?t.maximaPoints:t.minimaPoints;for(let t=0;t<a.length;t++){const e=a[t];if((e.x-n[0])*(e.x-n[0])+(e.y-n[1])*(e.y-n[1])>100)continue;const r=o({v1:e.descriptors,v2:s.descriptors});r<l?(u=l,l=r,i=t):r<u&&(u=r)}-1!==i&&(u===Number.MAX_SAFE_INTEGER||1*l/u<.7)&&M.push({querypoint:s,keypoint:a[i]})}f&&(m.matches2=M);const b=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:M});f&&(m.houghMatches2=b);const x=i({srcPoints:b.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:b.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===x)return{debugExtra:m};const E=a({H:x,matches:b,threshold:3});return f&&(m.inlierMatches2=E),{H:x,matches:E,debugExtra:m}}}},838:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{createRandomizer:n}=r(48),{quadrilateralConvex:i,matrixInverse33:h,smallestTriangleArea:l,multiplyPointHomographyInhomogenous:u,checkThreePointsConsistent:a,checkFourPointsConsistent:c,determinant:f}=r(289),{solveHomography:m}=r(450),g=({H:t,testPoints:e,keyframe:r})=>{const s=h(t,1e-5);if(null===s)return!1;const o=[];for(let t=0;t<e.length;t++)o.push(u(e[t],s));return!(l(o[0],o[1],o[2],o[3])<r.width*r.height*1e-4||!i(o[0],o[1],o[2],o[3]))},w=({inH:t})=>{const e=1/t[8],r=[];for(let s=0;s<8;s++)r[s]=t[s]*e;return r[8]=1,r},p=({H:t,srcPoint:e,dstPoint:r,oneOverScale2:s})=>{const o=u(e,t),n=[o[0]-r[0],o[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*s)},d=({H:t,testPoints:e})=>{const r=[];for(let s=0;s<e.length;s++)r[s]=u(e[s],t);for(let t=0;t<e.length;t++){const s=t,o=(t+1)%e.length,n=(t+2)%e.length;if(!a(e[s],e[o],e[n],r[s],r[o],r[n]))return!1}return!0};t.exports={computeHomography:t=>{const{srcPoints:e,dstPoints:r,keyframe:s,quickMode:o}=t,i=[[0,0],[s.width,0],[s.width,s.height],[0,s.height]];if(e.length<4)return null;const h=Math.min(10,e.length),l=n(),u=[];for(let t=0;t<e.length;t++)u[t]=t;l.arrayShuffle({arr:u,sampleSize:u.length});const a=o?10:20,f=2*a;let y=0;const M=[];for(;y<f&&M.length<a;){if(y+=1,l.arrayShuffle({arr:u,sampleSize:4}),!c(e[u[0]],e[u[1]],e[u[2]],e[u[3]],r[u[0]],r[u[1]],r[u[2]],r[u[3]]))continue;const t=m([e[u[0]],e[u[1]],e[u[2]],e[u[3]]],[r[u[0]],r[u[1]],r[u[2]],r[u[3]]]);null!==t&&d({H:t,testPoints:i})&&M.push(t)}if(0===M.length)return null;const b=[];for(let t=0;t<M.length;t++)b.push({H:M[t],cost:0});let x=h;for(let t=0;t<e.length&&b.length>2;t+=x){x=Math.min(h,e.length-t);let s=t+x;for(let o=0;o<b.length;o++)for(let n=t;n<s;n++){const t=p({H:b[o].H,srcPoint:e[n],dstPoint:r[n],oneOverScale2:1e4});b[o].cost+=t}b.sort(((t,e)=>t.cost-e.cost)),b.splice(-Math.floor((b.length+1)/2))}let E=null;for(let t=0;t<b.length;t++){const e=w({inH:b[t].H});if(g({H:e,testPoints:i,keyframe:s})){E=e;break}}return E}}},289:t=>{const e=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),r=t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],s=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*s},s=(t,e)=>[t[0]-e[0],t[1]-e[1]],o=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)};t.exports={matrixInverse33:(t,e)=>{const s=r(t);if(Math.abs(s)<=e)return null;const o=1/s;return[(t[4]*t[8]-t[5]*t[7])*o,(t[2]*t[7]-t[1]*t[8])*o,(t[1]*t[5]-t[2]*t[4])*o,(t[5]*t[6]-t[3]*t[8])*o,(t[0]*t[8]-t[2]*t[6])*o,(t[2]*t[3]-t[0]*t[5])*o,(t[3]*t[7]-t[4]*t[6])*o,(t[1]*t[6]-t[0]*t[7])*o,(t[0]*t[4]-t[1]*t[3])*o]},matrixMul33:(t,e)=>{const r=[];return r[0]=t[0]*e[0]+t[1]*e[3]+t[2]*e[6],r[1]=t[0]*e[1]+t[1]*e[4]+t[2]*e[7],r[2]=t[0]*e[2]+t[1]*e[5]+t[2]*e[8],r[3]=t[3]*e[0]+t[4]*e[3]+t[5]*e[6],r[4]=t[3]*e[1]+t[4]*e[4]+t[5]*e[7],r[5]=t[3]*e[2]+t[4]*e[5]+t[5]*e[8],r[6]=t[6]*e[0]+t[7]*e[3]+t[8]*e[6],r[7]=t[6]*e[1]+t[7]*e[4]+t[8]*e[7],r[8]=t[6]*e[2]+t[7]*e[5]+t[8]*e[8],r},quadrilateralConvex:(t,r,s,o)=>{const n=e(t,r,s)<=0;return e(r,s,o)<=0===n&&e(s,o,t)<=0===n&&e(o,t,r)<=0===n},smallestTriangleArea:(t,e,r,n)=>{const i=s(e,t),h=s(r,t),l=s(n,t),u=s(e,r),a=s(n,r),c=o(i,h),f=o(h,l),m=o(i,l),g=o(u,a);return Math.min(Math.min(Math.min(c,f),m),g)},multiplyPointHomographyInhomogenous:(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8],s=[];return s[0]=(e[0]*t[0]+e[1]*t[1]+e[2])/r,s[1]=(e[3]*t[0]+e[4]*t[1]+e[5])/r,s},checkThreePointsConsistent:(t,r,s,o,n,i)=>e(t,r,s)>0==e(o,n,i)>0,checkFourPointsConsistent:(t,r,s,o,n,i,h,l)=>e(t,r,s)>0==e(n,i,h)>0&&e(r,s,o)>0==e(i,h,l)>0&&e(s,o,t)>0==e(h,l,n)>0&&e(o,t,r)>0==e(l,n,i)>0,determinant:r}},450:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),n=t=>{let e=0,r=0;for(let s=0;s<t.length;s++)e+=t[s][0],r+=t[s][1];let s=e/t.length,o=r/t.length,n=0;for(let e=0;e<t.length;e++){const r=t[e][0]-s,i=t[e][1]-o;n+=Math.sqrt(r*r+i*i)}let i=Math.sqrt(2)*t.length/n;const h=[];for(let e=0;e<t.length;e++)h.push([(t[e][0]-s)*i,(t[e][1]-o)*i]);return{normPoints:h,param:{meanX:s,meanY:o,s:i}}};t.exports={solveHomography:(t,e)=>{const{normPoints:r,param:i}=n(t),{normPoints:h,param:l}=n(e),u=h.length,a=[],c=[];for(let t=0;t<u;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*h[t][0],-r[t][1]*h[t][0]],s=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*h[t][1],-r[t][1]*h[t][1]];a.push(e),a.push(s),c.push([h[t][0]]),c.push([h[t][1]])}try{const t=new s(a),e=new s(c),r=t.transpose(),n=r.mmul(t),h=r.mmul(e);return((t,e,r)=>{const s=r.s*r.meanX,o=r.s*r.meanY,n=[t[0]+s*t[6],t[1]+s*t[7],(t[0]+s*t[6])*-e.meanX+(t[1]+s*t[7])*-e.meanY+(t[2]+s)/e.s,t[3]+o*t[6],t[4]+o*t[7],(t[3]+o*t[6])*-e.meanX+(t[4]+o*t[7])*-e.meanY+(t[5]+o)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})(o(n).mmul(h).to1DArray(),i,l)}catch(t){return null}}}},48:t=>{t.exports={createRandomizer:()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;let s=e[t];e[t]=e[r],e[r]=s}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}})}}},e={};function r(s){if(e[s])return e[s].exports;var o=e[s]={exports:{}};return t[s](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{const{Matcher:t}=r(582),{Estimator:e}=r(421);let s=null,o=null,n=!1,i=null,h=null;onmessage=r=>{const{data:l}=r;if("setup"===l.type)s=l.projectionTransform,o=l.matchingDataList,n=l.debugMode,i=new t(l.inputWidth,l.inputHeight,n),h=new e(l.projectionTransform);else if("match"===l.type){const t=l.targetIndexes;let e=-1,r=null,s=null;for(let n=0;n<t.length;n++){const u=t[n],{keyframeIndex:a,screenCoords:c,worldCoords:f,debugExtra:m}=i.matchDetection(o[u],l.featurePoints);if(s=m,-1!==a){const t=h.estimate({screenCoords:c,worldCoords:f});t&&(e=u,r=t);break}}postMessage({type:"matchDone",targetIndex:e,modelViewTransform:r,debugExtra:s})}else if("trackUpdate"===l.type){const{modelViewTransform:t,worldCoords:e,screenCoords:r}=l,s=h.refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:s})}}})()})();',n.p+"controller.worker.prod.js")}},9855:e=>{"use strict";var t=window.URL||window.webkitURL;e.exports=function(e,n){try{try{var r;try{(r=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(e),r=r.getBlob()}catch(t){r=new Blob([e])}return new Worker(t.createObjectURL(r))}catch(t){return new Worker("data:application/javascript,"+encodeURIComponent(e))}}catch(e){if(!n)throw Error("Inline worker is not supported");return new Worker(n)}}},5217:(e,t,n)=>{const r=n(383),{Detector:s}=n(6416),{buildImageList:a,buildTrackingImageList:o}=n(7508),{build:i}=n(723),l=n(1113),u=n(4563),c=async(e,t)=>{const n=[];for(let r=0;r<e.length;r++){const a=e[r],o=new s(a.width,a.height);await u.nextFrame(),u.tidy((()=>{const e=u.tensor(a.data,[a.data.length],"float32").reshape([a.height,a.width]),{featurePoints:s}=o.detect(e),l=s.filter((e=>e.maxima)),c=s.filter((e=>!e.maxima)),h=i({points:l}),p=i({points:c});n.push({maximaPoints:l,minimaPoints:c,maximaPointsCluster:h,minimaPointsCluster:p,width:a.width,height:a.height,scale:a.scale}),t(r)}))}return n};e.exports={Compiler:class{constructor(){this.data=null}compileImageTargets(e,t){return new Promise((async(n,s)=>{const i=[];for(let t=0;t<e.length;t++){const n=e[t],r=document.createElement("canvas");r.width=n.width,r.height=n.height;const s=r.getContext("2d");s.drawImage(n,0,0,n.width,n.height);const a=s.getImageData(0,0,n.width,n.height),o=new Uint8Array(n.width*n.height);for(let e=0;e<o.length;e++){const t=4*e;o[e]=Math.floor((a.data[t]+a.data[t+1]+a.data[t+2])/3)}const l={data:o,height:n.height,width:n.width};i.push(l)}const l=50/i.length;let u=0;this.data=[];for(let e=0;e<i.length;e++){const n=i[e],r=a(n),s=l/r.length,o=await c(r,(()=>{u+=s,t(u)}));this.data.push({targetImage:n,imageList:r,matchingData:o})}for(let e=0;e<i.length;e++){const t=o(i[e]);this.data[e].trackingImageList=t}const h=await new Promise(((e,n)=>{const s=new r;s.onmessage=n=>{"progress"===n.data.type?t(50+n.data.percent):"compileDone"===n.data.type&&e(n.data.list)},s.postMessage({type:"compile",targetImages:i})}));for(let e=0;e<i.length;e++)this.data[e].trackingData=h[e];n(this.data)}))}exportData(){const e=[];for(let t=0;t<this.data.length;t++)e.push({targetImage:{width:this.data[t].targetImage.width,height:this.data[t].targetImage.height},trackingData:this.data[t].trackingData,matchingData:this.data[t].matchingData});return l.encode({v:2,dataList:e})}importData(e){const t=l.decode(new Uint8Array(e));if(!t.v||2!==t.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=t;this.data=[];for(let r=0;r<n.length;r++)this.data.push({targetImage:n[r].targetImage,trackingData:n[r].trackingData,matchingData:n[r].matchingData});return this.data}}}},7957:(e,t,n)=>{const r=n(4563),s=n(1077),{Tracker:a}=n(6417),{CropDetector:o}=n(7051),{Compiler:i}=n(5217),{InputLoader:l}=n(7325),{OneEuroFilter:u}=n(344);e.exports={Controller:class{constructor({inputWidth:e,inputHeight:t,onUpdate:n=null,debugMode:r=!1,maxTrack:a=1,warmupTolerance:i=null,missTolerance:u=null,filterMinCF:c=null,filterBeta:h=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=a,this.filterMinCF=null===c?.001:c,this.filterBeta=null===h?1e3:h,this.warmupTolerance=null===i?5:i,this.missTolerance=null===u?5:u,this.cropDetector=new o(this.inputWidth,this.inputHeight,r),this.inputLoader=new l(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=r,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const p=45*Math.PI/180,d=this.inputHeight/2/Math.tan(p/2);this.projectionTransform=[[d,0,this.inputWidth/2],[0,d,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new s,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=e=>{"matchDone"===e.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(e.data),"trackUpdateDone"===e.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(e.data)}}showTFStats(){console.log(r.memory().numTensors),console.table(r.memory())}addImageTargets(e){return new Promise((async(t,n)=>{const r=await fetch(e),s=await r.arrayBuffer();t(this.addImageTargetsFromBuffer(s))}))}addImageTargetsFromBuffer(e){const t=(new i).importData(e),n=[],r=[],s=[];for(let a=0;a<t.length;a++)r.push(t[a].matchingData),n.push(t[a].trackingData),s.push([t[a].targetImage.width,t[a].targetImage.height]);return this.tracker=new a(s,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=s,{dimensions:s,matchingDataList:r,trackingDataList:n}}dummyRun(e){const t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){const{featurePoints:n}=this.cropDetector.detectMoving(e),{targetIndex:r,modelViewTransform:s}=await this._workerMatch(n,t);return{targetIndex:r,modelViewTransform:s}}async _trackAndUpdate(e,t,n){const{worldCoords:r,screenCoords:s}=this.tracker.track(e,t,n);return r.length<4?null:await this._workerTrackUpdate(t,{worldCoords:r,screenCoords:s})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let e=0;e<this.markerDimensions.length;e++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new u({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce(((e,t)=>e+(t.isTracking?1:0)),0)<this.maxTrack){const e=[];for(let t=0;t<this.trackingStates.length;t++)!0!==this.trackingStates[t].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||e.push(t));const{targetIndex:n,modelViewTransform:r}=await this._detectAndMatch(t,e);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=r)}for(let e=0;e<this.trackingStates.length;e++){const n=this.trackingStates[e];if(n.isTracking){let r=await this._trackAndUpdate(t,n.currentModelViewTransform,e);null===r?n.isTracking=!1:n.currentModelViewTransform=r}if(n.showing||n.isTracking&&(n.trackMiss=0,n.trackCount+=1,n.trackCount>this.warmupTolerance&&(n.showing=!0,n.trackingMatrix=null,n.filter.reset())),n.showing&&(n.isTracking?n.trackMiss=0:(n.trackCount=0,n.trackMiss+=1,n.trackMiss>this.missTolerance&&(n.showing=!1,n.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:null})))),n.showing){const t=this._glModelViewMatrix(n.currentModelViewTransform,e);n.trackingMatrix=n.filter.filter(Date.now(),t);const r=[];for(let e=0;e<n.trackingMatrix.length;e++)r[e]=n.trackingMatrix[e];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:r})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await r.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:n,debugExtra:r}}async match(e,t){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(e,[t]);return{modelViewTransform:n,debugExtra:r}}async track(e,t,n){const r=this.inputLoader.loadInput(e),s=this.tracker.track(r,t,n);return r.dispose(),s}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise((async(n,r)=>{this.workerMatchDone=e=>{n({targetIndex:e.targetIndex,modelViewTransform:e.modelViewTransform,debugExtra:e.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})}))}_workerTrackUpdate(e,t){return new Promise((async(n,r)=>{this.workerTrackDone=e=>{n(e.modelViewTransform)};const{worldCoords:s,screenCoords:a}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:s,screenCoords:a})}))}_glModelViewMatrix(e,t){const n=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*n+e[0][3],-(e[1][1]*n+e[1][3]),-(e[2][1]*n+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:n,near:r,far:s}){const a=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/n,-(2*e[1][2]/n-1),0],[0,0,-(s+r)/(s-r),-2*s*r/(s-r)],[0,0,-1,0]],o=[];for(let i=0;i<4;i++)for(let e=0;e<4;e++)o.push(a[e][i]);return o}}}},7051:(e,t,n)=>{n(4563);const{Detector:r}=n(6416),{buildModelViewProjectionTransform:s,computeScreenCoordiate:a}=n(7420);e.exports={CropDetector:class{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let s=Math.min(e,t)/2,a=Math.pow(2,Math.round(Math.log(s)/Math.log(2)));this.cropSize=a,this.detector=new r(a,a,n),this.kernelCaches={},this.lastRandomIndex=4}detect(e){const t=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=this._detect(e,n,t);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:t,cropSize:this.cropSize}),r}detectMoving(e){const t=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),s=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return s<0&&(s=0),r<0&&(r=0),s>=this.width-this.cropSize&&(s=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,s,r)}_detect(e,t,n){const r=e.slice([n,t],[this.cropSize,this.cropSize]),{featurePoints:s,debugExtra:a}=this.detector.detect(r);return s.forEach((e=>{e.x+=t,e.y+=n})),this.debugMode&&(a.projectedImage=r.arraySync()),r.dispose(),{featurePoints:s,debugExtra:a}}}}},6416:(e,t,n)=>{const r=n(4563),{FREAKPOINTS:s}=n(2793),a=(s.length-1)*s.length/2;e.exports={Detector:class{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let r=0;for(;e>=8&&t>=8&&(e/=2,t/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let r=0;r<e.length;r++)t[4*r]=e[r],t[4*r+1]=e[r],t[4*r+2]=e[r],t[4*r+3]=255;const n=new ImageData(t,this.width,this.height);return this.detect(n)}detect(e){let t=null;const n=[];for(let g=0;g<this.numOctaves;g++){let t,r;t=0===g?this._applyFilter(e):this._downsampleBilinear(n[g-1][n[g-1].length-1]),r=this._applyFilter(t),n.push([t,r])}const r=[];for(let g=0;g<this.numOctaves;g++){let e=this._differenceImageBinomial(n[g][0],n[g][1]);r.push(e)}const s=[];for(let g=1;g<this.numOctaves-1;g++){const e=this._buildExtremas(r[g-1],r[g],r[g+1]);s.push(e)}const a=this._applyPrune(s),o=this._computeLocalization(a,r),i=this._computeOrientationHistograms(o,n),l=this._smoothHistograms(i),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,o,u),h=this._computeFreakDescriptors(c),p=o.arraySync(),d=u.arraySync(),f=h.arraySync();this.debugMode&&(t={pyramidImages:n.map((e=>e.map((e=>e.arraySync())))),dogPyramidImages:r.map((e=>e?e.arraySync():null)),extremasResults:s.map((e=>e.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:a,localizedExtremas:o.arraySync()}),n.forEach((e=>e.forEach((e=>e.dispose())))),r.forEach((e=>e&&e.dispose())),s.forEach((e=>e.dispose())),o.dispose(),i.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose();const m=[];for(let g=0;g<p.length;g++){if(0==p[g][0])continue;const e=[];for(let o=0;o<f[g].length;o+=4){let t=16777216*f[g][o]+65536*f[g][o+1]+256*f[g][o+2]+f[g][o+3];e.push(t)}const t=p[g][1],n=p[g][2],r=p[g][3]*Math.pow(2,t)+Math.pow(2,t-1)-.5,s=n*Math.pow(2,t)+Math.pow(2,t-1)-.5,a=Math.pow(2,t);m.push({maxima:p[g][0]>0,x:r,y:s,scale:a,angle:d[g],descriptors:e})}return{featurePoints:m,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const t=[],n=[];for(let r=0;r<e.shape[1];r++)for(let s=r+1;s<e.shape[1];s++)t.push(r),n.push(s);const s=r.tensor(t,[t.length]).cast("int32"),a=r.tensor(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:r.keep(r.stack([s,a],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(a/8);if(!this.kernelCaches.computeFreakDescriptors){const t={variableNames:["freak","p"],outputShape:[e.shape[0],n],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${a}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`};this.kernelCaches.computeFreakDescriptors=[t]}return r.tidy((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[e,t],"int32")}))}_computeExtremaFreak(e,t,n){this.tensorCaches._computeExtremaFreak||r.tidy((()=>{const e=r.tensor(s);this.tensorCaches._computeExtremaFreak={freakPointsT:r.keep(e)}}));const{freakPointsT:a}=this.tensorCaches._computeExtremaFreak,o=[];for(let r=1;r<e.length;r++)o.push(e[r][1]);if(!this.kernelCaches._computeExtremaFreak){const n=[];for(let t=1;t<e.length;t++)n.push("image"+t);let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)r+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n\t`;r+="}";const a={variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[t.shape[0],s.length],userCode:`\n\t  ${r}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`};this.kernelCaches._computeExtremaFreak=[a]}return r.tidy((()=>{const[e]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(e,[...o,t,n,a])}))}_computeExtremaAngles(e){if(!this.kernelCaches.computeExtremaAngles){const t={variableNames:["histogram"],outputShape:[e.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`};this.kernelCaches.computeExtremaAngles=t}return r.tidy((()=>{const t=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(t,[e])}))}_computeOrientationHistograms(e,t){const n=[];for(let r=1;r<t.length;r++)n.push(t[r][1]);this.tensorCaches.orientationHistograms||r.tidy((()=>{const e=Math.ceil(4.5),t=[];for(let n=-e;n<=e;n++)for(let r=-e;r<=e;r++){const e=r*r+n*n;if(e<=20.25){const s=-.05555555555555555*e;let a=.0013888888*(720+s*(720+s*(360+s*(120+s*(30+s*(6+s))))));t.push([n,r,a])}}this.tensorCaches.orientationHistograms={radialPropertiesT:r.keep(r.tensor(t,[t.length,3]))}}));const{radialPropertiesT:s}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const n=[];for(let e=1;e<t.length;e++)n.push("image"+e);let r="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)r+=`\n\t  if (octave == ${e}) {\n\t    return getImage${e}(y, x);\n\t  }\n\t`;r+="}";const a={variableNames:[...n,"extrema","radial"],outputShape:[e.shape[0],s.shape[0],2],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * 0.159154943091895;\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`},o={variableNames:["fbinMag"],outputShape:[e.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${s.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`};this.kernelCaches.computeOrientationHistograms=[a,o]}return r.tidy((()=>{const[t,r]=this.kernelCaches.computeOrientationHistograms,a=this._compileAndRun(t,[...n,e,s]);return this._compileAndRun(r,[a])}))}_smoothHistograms(e){if(!this.kernelCaches.smoothHistograms){const t={variableNames:["histogram"],outputShape:[e.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"};this.kernelCaches.smoothHistograms=t}return r.tidy((()=>{const t=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)e=this._compileAndRun(t,[e]);return e}))}_computeLocalization(e,t){if(!this.kernelCaches.computeLocalization){const n=[];let r="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)n.push("image"+e),r+=`\n\t  if (octave == ${e}) {\n\t    return getImage${e}(y, x);\n\t  }\n \t`;r+="}";const s={variableNames:[...n,"extrema"],outputShape:[e.length,3,3],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`};this.kernelCaches.computeLocalization=[s]}return r.tidy((()=>{const n=this.kernelCaches.computeLocalization[0],s=r.tensor(e,[e.length,e[0].length],"int32"),a=this._compileAndRun(n,[...t.slice(1),s]).arraySync(),o=[];for(let e=0;e<a.length;e++){o.push([]);for(let t=0;t<a[e].length;t++)o[e].push([])}const i=[];for(let t=0;t<e.length;t++)i[t]=[e[t][0],e[t][1],e[t][2],e[t][3]];for(let e=0;e<i.length;e++){if(0===i[e][0])continue;const t=a[e],n=.5*(t[1][2]-t[1][0]),r=.5*(t[2][1]-t[0][1]),s=t[1][2]+t[1][0]-2*t[1][1],o=t[2][1]+t[0][1]-2*t[1][1],l=.25*(t[0][0]+t[2][2]-t[0][2]-t[2][0]),u=s*o-l*l,c=(o*-n+-l*-r)/u,h=(-l*-n+s*-r)/u,p=i[e][2]+h,d=i[e][3]+c;Math.abs(u)<1e-4||(i[e][2]=p,i[e][3]=d)}return r.tensor(i,[i.length,i[0].length],"float32")}))}_applyPrune(e){if(!this.kernelCaches.applyPrune){const t=[];for(let n=0;n<e.length;n++){const r=e[n].shape[0],s=e[n].shape[1],a={variableNames:["extrema"],outputShape:[Math.floor(r/2),Math.floor(s/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};t.push(a)}this.kernelCaches.applyPrune={reductionKernels:t}}const t=[],n=[];for(let r=0;r<100;r++){n.push([]),t.push([]);for(let e=0;e<5;e++)n[r].push([0,0,0,0]),t[r].push(0)}r.tidy((()=>{const{reductionKernels:r}=this.kernelCaches.applyPrune;for(let s=0;s<e.length;s++){const a=r[s],o=this._compileAndRun(a,[e[s]]),i=s+1,l=o.arraySync(),u=o.shape[0],c=o.shape[1],h=2*c/10,p=2*u/10;for(let e=0;e<u;e++)for(let r=0;r<c;r++){const s=l[e][r];if(0==s)continue;const a=s%1e3,o=Math.floor(Math.abs(s)/1e3),u=2*r+(2===o||3===o?1:0),c=2*e+(1===o||3===o?1:0),d=Math.floor(u/h),f=10*Math.floor(c/p)+d,m=Math.abs(a);let g=5;for(;g>=1&&m>t[f][g-1];)g-=1;if(g<5){for(let e=4;e>=g+1;e--)t[f][e]=t[f][e-1],n[f][e][0]=n[f][e-1][0],n[f][e][1]=n[f][e-1][1],n[f][e][2]=n[f][e-1][2],n[f][e][3]=n[f][e-1][3];t[f][g]=m,n[f][g][0]=a,n[f][g][1]=i,n[f][g][2]=c,n[f][g][3]=u}}}}));const s=[];for(let r=0;r<100;r++)for(let e=0;e<5;e++)s.push(n[r][e]);return s}_buildExtremas(e,t,n){const s=t.shape[0],a=t.shape[1],o="w"+a;if(this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),!this.kernelCaches.buildExtremas[o]){const e={variableNames:["image0","image1","image2"],outputShape:[s,a],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${s-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${a-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`};this.kernelCaches.buildExtremas[o]=e}return r.tidy((()=>{const r=this.kernelCaches.buildExtremas[o];return e=this._downsampleBilinear(e),n=this._upsampleBilinear(n,t),this._compileAndRun(r,[e,t,n])}))}_differenceImageBinomial(e,t){return r.tidy((()=>e.sub(t)))}_applyFilter(e){const t=e.shape[0],n=e.shape[1],s="w"+n;if(this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),!this.kernelCaches.applyFilter[s]){const e={variableNames:["p"],outputShape:[t,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"},r={variableNames:["p"],outputShape:[t,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.applyFilter[s]=[e,r]}return r.tidy((()=>{const[t,n]=this.kernelCaches.applyFilter[s],r=this._compileAndRun(t,[e]);return this._compileAndRun(n,[r])}))}_upsampleBilinear(e,t){e.shape[0];const n="w"+e.shape[1];if(this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),!this.kernelCaches.upsampleBilinear[n]){const e={variableNames:["p"],outputShape:[t.shape[0],t.shape[1]],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.upsampleBilinear[n]=e}return r.tidy((()=>{const t=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(t,[e])}))}_downsampleBilinear(e){const t=e.shape[0],n=e.shape[1],s="w"+n;if(this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),!this.kernelCaches.downsampleBilinear[s]){const e={variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(n/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.downsampleBilinear[s]=e}return r.tidy((()=>{const t=this.kernelCaches.downsampleBilinear[s];return this._compileAndRun(t,[e])}))}_compileAndRun(e,t){const n=r.backend().compileAndRun(e,t);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const s=r.backend().runWebGLProgram(e,t,n);return r.engine().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}}},2793:e=>{const t=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],n=[];for(let r=0;r<t.length;r++){const e=t[r].sigma;for(let s=0;s<t[r].points.length;s++){const a=t[r].points[s];n.push([e,a[0],a[1]])}}e.exports={FREAKPOINTS:n}},7420:e=>{const t=(e,t,n,r)=>({x:e[0][0]*t+e[0][1]*n+e[0][3],y:e[1][0]*t+e[1][1]*n+e[1][3],z:e[2][0]*t+e[2][1]*n+e[2][3]});e.exports={buildModelViewProjectionTransform:(e,t)=>[[e[0][0]*t[0][0]+e[0][2]*t[2][0],e[0][0]*t[0][1]+e[0][2]*t[2][1],e[0][0]*t[0][2]+e[0][2]*t[2][2],e[0][0]*t[0][3]+e[0][2]*t[2][3]],[e[1][1]*t[1][0]+e[1][2]*t[2][0],e[1][1]*t[1][1]+e[1][2]*t[2][1],e[1][1]*t[1][2]+e[1][2]*t[2][2],e[1][1]*t[1][3]+e[1][2]*t[2][3]],[t[2][0],t[2][1],t[2][2],t[2][3]]],applyModelViewProjectionTransform:t,computeScreenCoordiate:(e,n,r,s)=>{const{x:a,y:o,z:i}=t(e,n,r);return{x:a/i,y:o/i}}}},7508:(e,t,n)=>{const{resize:r}=n(9140);e.exports={buildImageList:e=>{const t=[];let n=100/Math.min(e.width,e.height);for(;;)if(t.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}t.push(n),t.reverse();const s=[];for(let a=0;a<t.length;a++)e.width,t[a],e.height,t[a],s.push(Object.assign(r({image:e,ratio:t[a]}),{scale:t[a]}));return s},buildTrackingImageList:e=>{const t=Math.min(e.width,e.height),n=[],s=[];n.push(256/t),n.push(128/t);for(let a=0;a<n.length;a++)s.push(Object.assign(r({image:e,ratio:n[a]}),{scale:n[a]}));return s}}},5260:(e,t,n)=>{const{Controller:r}=n(7957),{Compiler:s}=n(5217),{UI:a}=n(2749),o={Controller:r,Compiler:s,UI:a};window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE=o,e.exports=o},7325:(e,t,n)=>{const r=n(4563);e.exports={InputLoader:class{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const n=document.createElement("canvas").getContext("2d");n.canvas.width=e,n.canvas.height=t,this.context=n,this.program=this.buildProgram(e,t);const s=r.backend();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"float32"),s.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return r.tidy((()=>{let t=r.browser.fromPixels(e);return t=t.mean(2),t}))}loadInput(e){this.context.drawImage(e,0,0,this.width,this.height);const t=r.backend();return t.gpgpu.uploadPixelDataToTexture(t.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){const n=2===r.env().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(e,t){const n=r.backend().compileAndRun(e,t);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const s=r.backend().runWebGLProgram(e,t,n);return r.engine().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}}},2233:e=>{e.exports={compute:e=>{const{v1:t,v2:n}=e;let r=0;for(let o=0;o<t.length;o++){let e=(t[o]^n[o])>>>0;r+=(a=void 0,((a=((a=((a=((a=(s=e)-(s>>1&1431655765))>>2&858993459)+(858993459&a))>>4)+a&252645135)>>8)+a&16711935)>>16)+a&65535)}var s,a;return r}}},723:(e,t,n)=>{const{compute:r}=n(2233),{createRandomizer:s}=n(6048),a=e=>{const{points:t,pointIndexes:n,centerPointIndex:s,randomizer:o}=e;let i=!1;(n.length<=8||n.length<=16)&&(i=!0);const l={};if(!i){const e=(e=>{const{points:t,pointIndexes:n,randomizer:s}=e,a=[];for(let r=0;r<n.length;r++)a.push(r);let o=Number.MAX_SAFE_INTEGER,i=-1;const l=[];for(let u=0;u<128;u++){s.arrayShuffle({arr:a,sampleSize:8});let e=0;const c=[];for(let s=0;s<n.length;s++){let o=Number.MAX_SAFE_INTEGER;for(let e=0;e<8;e++){const i=n[a[e]],l=r({v1:t[n[s]].descriptors,v2:t[i].descriptors});l<o&&(c[s]=a[e],o=l)}e+=o}l.push(c),e<o&&(o=e,i=u)}return l[i]})({points:t,pointIndexes:n,randomizer:o});for(let t=0;t<e.length;t++)void 0===l[n[e[t]]]&&(l[n[e[t]]]=[]),l[n[e[t]]].push(n[t])}1===Object.keys(l).length&&(i=!0);const u={centerPointIndex:s};if(i){u.leaf=!0,u.pointIndexes=[];for(let e=0;e<n.length;e++)u.pointIndexes.push(n[e]);return u}return u.leaf=!1,u.children=[],Object.keys(l).forEach((e=>{u.children.push(a({points:t,pointIndexes:l[e],centerPointIndex:e,randomizer:o}))})),u};e.exports={build:({points:e})=>{const t=[];for(let r=0;r<e.length;r++)t.push(r);const n=s();return{rootNode:a({points:e,pointIndexes:t,centerPointIndex:null,randomizer:n})}}}},6417:(e,t,n)=>{const r=n(4563),{buildModelViewProjectionTransform:s,computeScreenCoordiate:a}=n(7420);e.exports={Tracker:class{constructor(e,t,n,r,s,a=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=n,this.debugMode=a,this.trackingKeyframeList=[];for(let i=0;i<t.length;i++)this.trackingKeyframeList.push(t[i][1]);let o=0;for(let i=0;i<this.trackingKeyframeList.length;i++)o=Math.max(o,this.trackingKeyframeList[i].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let i=0;i<this.trackingKeyframeList.length;i++){const{featurePoints:e,imagePixels:t,imageProperties:n}=this._prebuild(this.trackingKeyframeList[i],o);this.featurePointsListT[i]=e,this.imagePixelsListT[i]=t,this.imagePropertiesListT[i]=n}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(e,t,n)}track(e,t,n){let r={};const o=s(this.projectionTransform,t),i=this._buildAdjustedModelViewTransform(o),l=(this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height,this.featurePointsListT[n]),u=this.imagePixelsListT[n],c=this.imagePropertiesListT[n],h=this._computeProjection(i,e,n),{matchingPointsT:p,simT:d}=this._computeMatching(l,u,c,h),f=p.arraySync(),m=d.arraySync(),g=this.trackingKeyframeList[n],y=[],b=[],x=[];for(let s=0;s<f.length;s++)if(m[s]>.8&&s<g.points.length){x.push(s);const e=a(o,f[s][0],f[s][1]);b.push(e),y.push({x:g.points[s].x/g.scale,y:g.points[s].y/g.scale,z:0})}return this.debugMode&&(r={projectedImage:h.arraySync(),matchingPoints:p.arraySync(),goodTrack:x,trackedPoints:b}),i.dispose(),h.dispose(),p.dispose(),d.dispose(),{worldCoords:y,screenCoords:b,debugExtra:r}}_computeMatching(e,t,n,s){const a=s.shape[0],o=s.shape[1],i=e.shape[0];if(!this.kernelCaches.computeMatching){const e={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[i,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${o} - 6) || sy < 6 || sy >= (${a} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},t={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[i,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[i],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[e,t,n]}return r.tidy((()=>{const r=this.kernelCaches.computeMatching,a=this._compileAndRun(r[0],[e,t,n,s]),o=a.argMax(1);return{matchingPointsT:this._compileAndRun(r[1],[e,n,o]),simT:this._compileAndRun(r[2],[a,o])}}))}_computeProjection(e,t,n){const s=this.trackingKeyframeList[n].width,a=this.trackingKeyframeList[n].height,o=this.trackingKeyframeList[n].scale,i=s+"-"+a+"-"+o;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[i]){const e={variableNames:["M","pixel"],outputShape:[a,s],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${o});\n\t      float x = float(coords[1]) / float(${o});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[i]=e}return r.tidy((()=>{const n=this.kernelCaches.computeProjection[i];return this._compileAndRun(n,[e,t])}))}_buildAdjustedModelViewTransform(e){return r.tidy((()=>{let t=[];for(let n=0;n<e.length;n++){t.push([]);for(let r=0;r<e[n].length;r++)t[n].push(e[n][r]/1e3)}return r.tensor(t,[3,4])}))}_prebuild(e,t){return r.tidy((()=>{const n=e.scale,s=[];for(let r=0;r<t;r++)r<e.points.length?s.push([e.points[r].x/n,e.points[r].y/n]):s.push([-1,-1]);const a=r.tensor(e.data,[e.width*e.height]),o=r.tensor([e.width,e.height,e.scale],[3]);return{featurePoints:r.tensor(s,[s.length,2],"float32"),imagePixels:a,imageProperties:o}}))}_compileAndRun(e,t){const n=r.backend().compileAndRun(e,t);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}}},9140:e=>{e.exports={downsampleBilinear:({image:e})=>{const{data:t,width:n,height:r}=e,s=Math.floor(n/2),a=Math.floor(r/2),o=new Float32Array(s*a),i=[0,1,n,n+1];for(let l=0;l<a;l++)for(let e=0;e<s;e++){let r=2*l*n+2*e,a=0;for(let e=0;e<i.length;e++)a+=t[r+i[e]];a*=.25,o[l*s+e]=a}return{data:o,width:s,height:a}},upsampleBilinear:({image:e,padOneWidth:t,padOneHeight:n})=>{const{width:r,height:s,data:a}=e,o=2*e.width+(t?1:0),i=2*e.height+(n?1:0),l=new Float32Array(o*i);for(let u=0;u<o;u++){const e=.5*u-.25;let t=Math.floor(e),n=Math.ceil(e);t<0&&(t=0),n>=r&&(n=r-1);for(let c=0;c<i;c++){const i=.5*c-.25;let h=Math.floor(i),p=Math.ceil(i);h<0&&(h=0),p>=s&&(p=s-1);const d=(n-e)*(p-i)*a[h*r+t]+(n-e)*(i-h)*a[p*r+t]+(e-t)*(p-i)*a[h*r+n]+(e-t)*(i-h)*a[p*r+n];l[c*o+u]=d}}return{data:l,width:o,height:i}},resize:({image:e,ratio:t})=>{const n=Math.round(e.width*t),r=Math.round(e.height*t),s=new Uint8Array(n*r);for(let a=0;a<n;a++){let o=Math.round(1*a/t),i=Math.round(1*(a+1)/t)-1;i>=e.width&&(i=e.width-1);for(let l=0;l<r;l++){let r=Math.round(1*l/t),u=Math.round(1*(l+1)/t)-1;u>=e.height&&(u=e.height-1);let c=0,h=0;for(let t=o;t<=i;t++)for(let n=r;n<=u;n++)c+=1*e.data[n*e.width+t],h+=1;s[l*n+a]=Math.floor(c/h)}}return{data:s,width:n,height:r}}}},6048:e=>{e.exports={createRandomizer:()=>({seed:1234,arrayShuffle(e){const{arr:t,sampleSize:n}=e;for(let r=0;r<n;r++){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;e%=t.length;let n=t[r];t[r]=t[e],t[e]=n}},nextInt(e){this.seed=(214013*this.seed+2531011)%(1<<31);let t=this.seed>>16&32767;return t%=e,t}})}},344:e=>{const t=(e,t)=>{const n=2*Math.PI*t*e;return n/(n+1)},n=(e,t,n)=>e*t+(1-e)*n;e.exports={OneEuroFilter:class{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,r){if(!this.initialized)return this.initialized=!0,this.xPrev=r,this.dxPrev=r.map((()=>0)),this.tPrev=e,r;const{xPrev:s,tPrev:a,dxPrev:o}=this,i=e-a,l=t(i,this.dCutOff),u=[],c=[],h=[];for(let p=0;p<r.length;p++){u[p]=(r[p]-s[p])/i,c[p]=n(l,u[p],o[p]);const e=this.minCutOff+this.beta*Math.abs(c[p]),a=t(i,e);h[p]=n(a,r[p],s[p])}return this.xPrev=h,this.dxPrev=c,this.tPrev=e,h}}}},2749:(e,t,n)=>{n(4412);const r=n(9894).Z,s=n(7676).Z,a=n(2810).Z;e.exports={UI:class{constructor({uiLoading:e,uiScanning:t,uiError:n}){"yes"===e?this.loadingModal=this._loadHTML(r):"no"!==e&&(this.loadingModal=document.querySelector(e)),"yes"===n?this.compatibilityModal=this._loadHTML(s):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===t?this.scanningMask=this._loadHTML(a):"no"!==t&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const n=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}}},3906:()=>{},2993:()=>{},8352:()=>{},4589:()=>{},1758:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="",n(5260)})()}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}!function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}();!function(){"use strict";n(7658);function e(e,t){const n=Object.create(null),r=e.split(",");for(let s=0;s<r.length;s++)n[r[s]]=!0;return t?e=>!!n[e.toLowerCase()]:e=>!!n[e]}function t(e){if(S(e)){const n={};for(let r=0;r<e.length;r++){const s=e[r],a=E(s)?o(s):t(s);if(a)for(const e in a)n[e]=a[e]}return n}return E(e)||A(e)?e:void 0}const r=/;(?![^(]*\))/g,s=/:([^]+)/,a=/\/\*.*?\*\//gs;function o(e){const t={};return e.replace(a,"").split(r).forEach((e=>{if(e){const n=e.split(s);n.length>1&&(t[n[0].trim()]=n[1].trim())}})),t}function i(e){let t="";if(E(e))t=e;else if(S(e))for(let n=0;n<e.length;n++){const r=i(e[n]);r&&(t+=r+" ")}else if(A(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const l="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",u=e(l);function c(e){return!!e||""===e}const h=e=>E(e)?e:null==e?"":S(e)||A(e)&&(e.toString===M||!C(e.toString))?JSON.stringify(e,p,2):String(e),p=(e,t)=>t&&t.__v_isRef?p(e,t.value):N(t)?{[`Map(${t.size})`]:[...t.entries()].reduce(((e,[t,n])=>(e[`${t} =>`]=n,e)),{})}:T(t)?{[`Set(${t.size})`]:[...t.values()]}:!A(t)||S(t)||D(t)?t:String(t),d={},f=[],m=()=>{},g=()=>!1,y=/^on[^a-z]/,b=e=>y.test(e),x=e=>e.startsWith("onUpdate:"),w=Object.assign,v=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},k=Object.prototype.hasOwnProperty,I=(e,t)=>k.call(e,t),S=Array.isArray,N=e=>"[object Map]"===_(e),T=e=>"[object Set]"===_(e),C=e=>"function"===typeof e,E=e=>"string"===typeof e,$=e=>"symbol"===typeof e,A=e=>null!==e&&"object"===typeof e,R=e=>A(e)&&C(e.then)&&C(e.catch),M=Object.prototype.toString,_=e=>M.call(e),F=e=>_(e).slice(8,-1),D=e=>"[object Object]"===_(e),O=e=>E(e)&&"NaN"!==e&&"-"!==e[0]&&""+parseInt(e,10)===e,L=e(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),P=e=>{const t=Object.create(null);return n=>{const r=t[n];return r||(t[n]=e(n))}},z=/-(\w)/g,B=P((e=>e.replace(z,((e,t)=>t?t.toUpperCase():"")))),U=/\B([A-Z])/g,V=P((e=>e.replace(U,"-$1").toLowerCase())),W=P((e=>e.charAt(0).toUpperCase()+e.slice(1))),j=P((e=>e?`on${W(e)}`:"")),G=(e,t)=>!Object.is(e,t),H=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},q=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},K=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let X;const Y=()=>X||(X="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof n.g?n.g:{});n(541);let Z;class J{constructor(e=!1){this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Z,!e&&Z&&(this.index=(Z.scopes||(Z.scopes=[])).push(this)-1)}run(e){if(this.active){const t=Z;try{return Z=this,e()}finally{Z=t}}else 0}on(){Z=this}off(){Z=this.parent}stop(e){if(this.active){let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0,this.active=!1}}}function Q(e,t=Z){t&&t.active&&t.effects.push(e)}const ee=e=>{const t=new Set(e);return t.w=0,t.n=0,t},te=e=>(e.w&ie)>0,ne=e=>(e.n&ie)>0,re=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=ie},se=e=>{const{deps:t}=e;if(t.length){let n=0;for(let r=0;r<t.length;r++){const s=t[r];te(s)&&!ne(s)?s.delete(e):t[n++]=s,s.w&=~ie,s.n&=~ie}t.length=n}},ae=new WeakMap;let oe=0,ie=1;const le=30;let ue;const ce=Symbol(""),he=Symbol("");class pe{constructor(e,t=null,n){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,Q(this,n)}run(){if(!this.active)return this.fn();let e=ue,t=fe;while(e){if(e===this)return;e=e.parent}try{return this.parent=ue,ue=this,fe=!0,ie=1<<++oe,oe<=le?re(this):de(this),this.fn()}finally{oe<=le&&se(this),ie=1<<--oe,ue=this.parent,fe=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){ue===this?this.deferStop=!0:this.active&&(de(this),this.onStop&&this.onStop(),this.active=!1)}}function de(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let fe=!0;const me=[];function ge(){me.push(fe),fe=!1}function ye(){const e=me.pop();fe=void 0===e||e}function be(e,t,n){if(fe&&ue){let t=ae.get(e);t||ae.set(e,t=new Map);let r=t.get(n);r||t.set(n,r=ee());const s=void 0;xe(r,s)}}function xe(e,t){let n=!1;oe<=le?ne(e)||(e.n|=ie,n=!te(e)):n=!e.has(ue),n&&(e.add(ue),ue.deps.push(e))}function we(e,t,n,r,s,a){const o=ae.get(e);if(!o)return;let i=[];if("clear"===t)i=[...o.values()];else if("length"===n&&S(e)){const e=K(r);o.forEach(((t,n)=>{("length"===n||n>=e)&&i.push(t)}))}else switch(void 0!==n&&i.push(o.get(n)),t){case"add":S(e)?O(n)&&i.push(o.get("length")):(i.push(o.get(ce)),N(e)&&i.push(o.get(he)));break;case"delete":S(e)||(i.push(o.get(ce)),N(e)&&i.push(o.get(he)));break;case"set":N(e)&&i.push(o.get(ce));break}if(1===i.length)i[0]&&ve(i[0]);else{const e=[];for(const t of i)t&&e.push(...t);ve(ee(e))}}function ve(e,t){const n=S(e)?e:[...e];for(const r of n)r.computed&&ke(r,t);for(const r of n)r.computed||ke(r,t)}function ke(e,t){(e!==ue||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const Ie=e("__proto__,__v_isRef,__isVue"),Se=new Set(Object.getOwnPropertyNames(Symbol).filter((e=>"arguments"!==e&&"caller"!==e)).map((e=>Symbol[e])).filter($)),Ne=Ae(),Te=Ae(!1,!0),Ce=Ae(!0),Ee=$e();function $e(){const e={};return["includes","indexOf","lastIndexOf"].forEach((t=>{e[t]=function(...e){const n=vt(this);for(let t=0,s=this.length;t<s;t++)be(n,"get",t+"");const r=n[t](...e);return-1===r||!1===r?n[t](...e.map(vt)):r}})),["push","pop","shift","unshift","splice"].forEach((t=>{e[t]=function(...e){ge();const n=vt(this)[t].apply(this,e);return ye(),n}})),e}function Ae(e=!1,t=!1){return function(n,r,s){if("__v_isReactive"===r)return!e;if("__v_isReadonly"===r)return e;if("__v_isShallow"===r)return t;if("__v_raw"===r&&s===(e?t?ct:ut:t?lt:it).get(n))return n;const a=S(n);if(!e&&a&&I(Ee,r))return Reflect.get(Ee,r,s);const o=Reflect.get(n,r,s);return($(r)?Se.has(r):Ie(r))?o:(e||be(n,"get",r),t?o:Ct(o)?a&&O(r)?o:o.value:A(o)?e?mt(o):dt(o):o)}}const Re=_e(),Me=_e(!0);function _e(e=!1){return function(t,n,r,s){let a=t[n];if(bt(a)&&Ct(a)&&!Ct(r))return!1;if(!e&&(xt(r)||bt(r)||(a=vt(a),r=vt(r)),!S(t)&&Ct(a)&&!Ct(r)))return a.value=r,!0;const o=S(t)&&O(n)?Number(n)<t.length:I(t,n),i=Reflect.set(t,n,r,s);return t===vt(s)&&(o?G(r,a)&&we(t,"set",n,r,a):we(t,"add",n,r)),i}}function Fe(e,t){const n=I(e,t),r=e[t],s=Reflect.deleteProperty(e,t);return s&&n&&we(e,"delete",t,void 0,r),s}function De(e,t){const n=Reflect.has(e,t);return $(t)&&Se.has(t)||be(e,"has",t),n}function Oe(e){return be(e,"iterate",S(e)?"length":ce),Reflect.ownKeys(e)}const Le={get:Ne,set:Re,deleteProperty:Fe,has:De,ownKeys:Oe},Pe={get:Ce,set(e,t){return!0},deleteProperty(e,t){return!0}},ze=w({},Le,{get:Te,set:Me}),Be=e=>e,Ue=e=>Reflect.getPrototypeOf(e);function Ve(e,t,n=!1,r=!1){e=e["__v_raw"];const s=vt(e),a=vt(t);n||(t!==a&&be(s,"get",t),be(s,"get",a));const{has:o}=Ue(s),i=r?Be:n?St:It;return o.call(s,t)?i(e.get(t)):o.call(s,a)?i(e.get(a)):void(e!==s&&e.get(t))}function We(e,t=!1){const n=this["__v_raw"],r=vt(n),s=vt(e);return t||(e!==s&&be(r,"has",e),be(r,"has",s)),e===s?n.has(e):n.has(e)||n.has(s)}function je(e,t=!1){return e=e["__v_raw"],!t&&be(vt(e),"iterate",ce),Reflect.get(e,"size",e)}function Ge(e){e=vt(e);const t=vt(this),n=Ue(t),r=n.has.call(t,e);return r||(t.add(e),we(t,"add",e,e)),this}function He(e,t){t=vt(t);const n=vt(this),{has:r,get:s}=Ue(n);let a=r.call(n,e);a||(e=vt(e),a=r.call(n,e));const o=s.call(n,e);return n.set(e,t),a?G(t,o)&&we(n,"set",e,t,o):we(n,"add",e,t),this}function qe(e){const t=vt(this),{has:n,get:r}=Ue(t);let s=n.call(t,e);s||(e=vt(e),s=n.call(t,e));const a=r?r.call(t,e):void 0,o=t.delete(e);return s&&we(t,"delete",e,void 0,a),o}function Ke(){const e=vt(this),t=0!==e.size,n=void 0,r=e.clear();return t&&we(e,"clear",void 0,void 0,n),r}function Xe(e,t){return function(n,r){const s=this,a=s["__v_raw"],o=vt(a),i=t?Be:e?St:It;return!e&&be(o,"iterate",ce),a.forEach(((e,t)=>n.call(r,i(e),i(t),s)))}}function Ye(e,t,n){return function(...r){const s=this["__v_raw"],a=vt(s),o=N(a),i="entries"===e||e===Symbol.iterator&&o,l="keys"===e&&o,u=s[e](...r),c=n?Be:t?St:It;return!t&&be(a,"iterate",l?he:ce),{next(){const{value:e,done:t}=u.next();return t?{value:e,done:t}:{value:i?[c(e[0]),c(e[1])]:c(e),done:t}},[Symbol.iterator](){return this}}}}function Ze(e){return function(...t){return"delete"!==e&&this}}function Je(){const e={get(e){return Ve(this,e)},get size(){return je(this)},has:We,add:Ge,set:He,delete:qe,clear:Ke,forEach:Xe(!1,!1)},t={get(e){return Ve(this,e,!1,!0)},get size(){return je(this)},has:We,add:Ge,set:He,delete:qe,clear:Ke,forEach:Xe(!1,!0)},n={get(e){return Ve(this,e,!0)},get size(){return je(this,!0)},has(e){return We.call(this,e,!0)},add:Ze("add"),set:Ze("set"),delete:Ze("delete"),clear:Ze("clear"),forEach:Xe(!0,!1)},r={get(e){return Ve(this,e,!0,!0)},get size(){return je(this,!0)},has(e){return We.call(this,e,!0)},add:Ze("add"),set:Ze("set"),delete:Ze("delete"),clear:Ze("clear"),forEach:Xe(!0,!0)},s=["keys","values","entries",Symbol.iterator];return s.forEach((s=>{e[s]=Ye(s,!1,!1),n[s]=Ye(s,!0,!1),t[s]=Ye(s,!1,!0),r[s]=Ye(s,!0,!0)})),[e,n,t,r]}const[Qe,et,tt,nt]=Je();function rt(e,t){const n=t?e?nt:tt:e?et:Qe;return(t,r,s)=>"__v_isReactive"===r?!e:"__v_isReadonly"===r?e:"__v_raw"===r?t:Reflect.get(I(n,r)&&r in t?n:t,r,s)}const st={get:rt(!1,!1)},at={get:rt(!1,!0)},ot={get:rt(!0,!1)};const it=new WeakMap,lt=new WeakMap,ut=new WeakMap,ct=new WeakMap;function ht(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function pt(e){return e["__v_skip"]||!Object.isExtensible(e)?0:ht(F(e))}function dt(e){return bt(e)?e:gt(e,!1,Le,st,it)}function ft(e){return gt(e,!1,ze,at,lt)}function mt(e){return gt(e,!0,Pe,ot,ut)}function gt(e,t,n,r,s){if(!A(e))return e;if(e["__v_raw"]&&(!t||!e["__v_isReactive"]))return e;const a=s.get(e);if(a)return a;const o=pt(e);if(0===o)return e;const i=new Proxy(e,2===o?r:n);return s.set(e,i),i}function yt(e){return bt(e)?yt(e["__v_raw"]):!(!e||!e["__v_isReactive"])}function bt(e){return!(!e||!e["__v_isReadonly"])}function xt(e){return!(!e||!e["__v_isShallow"])}function wt(e){return yt(e)||bt(e)}function vt(e){const t=e&&e["__v_raw"];return t?vt(t):e}function kt(e){return q(e,"__v_skip",!0),e}const It=e=>A(e)?dt(e):e,St=e=>A(e)?mt(e):e;function Nt(e){fe&&ue&&(e=vt(e),xe(e.dep||(e.dep=ee())))}function Tt(e,t){e=vt(e),e.dep&&ve(e.dep)}function Ct(e){return!(!e||!0!==e.__v_isRef)}function Et(e){return At(e,!1)}function $t(e){return At(e,!0)}function At(e,t){return Ct(e)?e:new Rt(e,t)}class Rt{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:vt(e),this._value=t?e:It(e)}get value(){return Nt(this),this._value}set value(e){const t=this.__v_isShallow||xt(e)||bt(e);e=t?e:vt(e),G(e,this._rawValue)&&(this._rawValue=e,this._value=t?e:It(e),Tt(this,e))}}function Mt(e){return Ct(e)?e.value:e}const _t={get:(e,t,n)=>Mt(Reflect.get(e,t,n)),set:(e,t,n,r)=>{const s=e[t];return Ct(s)&&!Ct(n)?(s.value=n,!0):Reflect.set(e,t,n,r)}};function Ft(e){return yt(e)?e:new Proxy(e,_t)}var Dt;class Ot{constructor(e,t,n,r){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this[Dt]=!1,this._dirty=!0,this.effect=new pe(e,(()=>{this._dirty||(this._dirty=!0,Tt(this))})),this.effect.computed=this,this.effect.active=this._cacheable=!r,this["__v_isReadonly"]=n}get value(){const e=vt(this);return Nt(e),!e._dirty&&e._cacheable||(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function Lt(e,t,n=!1){let r,s;const a=C(e);a?(r=e,s=m):(r=e.get,s=e.set);const o=new Ot(r,s,a||!s,n);return o}Dt="__v_isReadonly";function Pt(e,t,n,r){let s;try{s=r?e(...r):e()}catch(a){Bt(a,t,n)}return s}function zt(e,t,n,r){if(C(e)){const s=Pt(e,t,n,r);return s&&R(s)&&s.catch((e=>{Bt(e,t,n)})),s}const s=[];for(let a=0;a<e.length;a++)s.push(zt(e[a],t,n,r));return s}function Bt(e,t,n,r=!0){const s=t?t.vnode:null;if(t){let r=t.parent;const s=t.proxy,a=n;while(r){const t=r.ec;if(t)for(let n=0;n<t.length;n++)if(!1===t[n](e,s,a))return;r=r.parent}const o=t.appContext.config.errorHandler;if(o)return void Pt(o,null,10,[e,s,a])}Ut(e,n,s,r)}function Ut(e,t,n,r=!0){console.error(e)}let Vt=!1,Wt=!1;const jt=[];let Gt=0;const Ht=[];let qt=null,Kt=0;const Xt=Promise.resolve();let Yt=null;function Zt(e){const t=Yt||Xt;return e?t.then(this?e.bind(this):e):t}function Jt(e){let t=Gt+1,n=jt.length;while(t<n){const r=t+n>>>1,s=an(jt[r]);s<e?t=r+1:n=r}return t}function Qt(e){jt.length&&jt.includes(e,Vt&&e.allowRecurse?Gt+1:Gt)||(null==e.id?jt.push(e):jt.splice(Jt(e.id),0,e),en())}function en(){Vt||Wt||(Wt=!0,Yt=Xt.then(ln))}function tn(e){const t=jt.indexOf(e);t>Gt&&jt.splice(t,1)}function nn(e){S(e)?Ht.push(...e):qt&&qt.includes(e,e.allowRecurse?Kt+1:Kt)||Ht.push(e),en()}function rn(e,t=(Vt?Gt+1:0)){for(0;t<jt.length;t++){const e=jt[t];e&&e.pre&&(jt.splice(t,1),t--,e())}}function sn(e){if(Ht.length){const e=[...new Set(Ht)];if(Ht.length=0,qt)return void qt.push(...e);for(qt=e,qt.sort(((e,t)=>an(e)-an(t))),Kt=0;Kt<qt.length;Kt++)qt[Kt]();qt=null,Kt=0}}const an=e=>null==e.id?1/0:e.id,on=(e,t)=>{const n=an(e)-an(t);if(0===n){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function ln(e){Wt=!1,Vt=!0,jt.sort(on);try{for(Gt=0;Gt<jt.length;Gt++){const e=jt[Gt];e&&!1!==e.active&&Pt(e,null,14)}}finally{Gt=0,jt.length=0,sn(e),Vt=!1,Yt=null,(jt.length||Ht.length)&&ln(e)}}new Set;new Map;function un(e,t,...n){if(e.isUnmounted)return;const r=e.vnode.props||d;let s=n;const a=t.startsWith("update:"),o=a&&t.slice(7);if(o&&o in r){const e=`${"modelValue"===o?"model":o}Modifiers`,{number:t,trim:a}=r[e]||d;a&&(s=n.map((e=>E(e)?e.trim():e))),t&&(s=n.map(K))}let i;let l=r[i=j(t)]||r[i=j(B(t))];!l&&a&&(l=r[i=j(V(t))]),l&&zt(l,e,6,s);const u=r[i+"Once"];if(u){if(e.emitted){if(e.emitted[i])return}else e.emitted={};e.emitted[i]=!0,zt(u,e,6,s)}}function cn(e,t,n=!1){const r=t.emitsCache,s=r.get(e);if(void 0!==s)return s;const a=e.emits;let o={},i=!1;if(!C(e)){const r=e=>{const n=cn(e,t,!0);n&&(i=!0,w(o,n))};!n&&t.mixins.length&&t.mixins.forEach(r),e.extends&&r(e.extends),e.mixins&&e.mixins.forEach(r)}return a||i?(S(a)?a.forEach((e=>o[e]=null)):w(o,a),A(e)&&r.set(e,o),o):(A(e)&&r.set(e,null),null)}function hn(e,t){return!(!e||!b(t))&&(t=t.slice(2).replace(/Once$/,""),I(e,t[0].toLowerCase()+t.slice(1))||I(e,V(t))||I(e,t))}let pn=null,dn=null;function fn(e){const t=pn;return pn=e,dn=e&&e.type.__scopeId||null,t}function mn(e,t=pn,n){if(!t)return e;if(e._n)return e;const r=(...n)=>{r._d&&bs(-1);const s=fn(t);let a;try{a=e(...n)}finally{fn(s),r._d&&bs(1)}return a};return r._n=!0,r._c=!0,r._d=!0,r}function gn(e){const{type:t,vnode:n,proxy:r,withProxy:s,props:a,propsOptions:[o],slots:i,attrs:l,emit:u,render:c,renderCache:h,data:p,setupState:d,ctx:f,inheritAttrs:m}=e;let g,y;const b=fn(e);try{if(4&n.shapeFlag){const e=s||r;g=Fs(c.call(e,e,h,a,d,p,f)),y=l}else{const e=t;0,g=Fs(e.length>1?e(a,{attrs:l,slots:i,emit:u}):e(a,null)),y=t.props?l:yn(l)}}catch(v){ds.length=0,Bt(v,e,1),g=Es(hs)}let w=g;if(y&&!1!==m){const e=Object.keys(y),{shapeFlag:t}=w;e.length&&7&t&&(o&&e.some(x)&&(y=bn(y,o)),w=Rs(w,y))}return n.dirs&&(w=Rs(w),w.dirs=w.dirs?w.dirs.concat(n.dirs):n.dirs),n.transition&&(w.transition=n.transition),g=w,fn(b),g}const yn=e=>{let t;for(const n in e)("class"===n||"style"===n||b(n))&&((t||(t={}))[n]=e[n]);return t},bn=(e,t)=>{const n={};for(const r in e)x(r)&&r.slice(9)in t||(n[r]=e[r]);return n};function xn(e,t,n){const{props:r,children:s,component:a}=e,{props:o,children:i,patchFlag:l}=t,u=a.emitsOptions;if(t.dirs||t.transition)return!0;if(!(n&&l>=0))return!(!s&&!i||i&&i.$stable)||r!==o&&(r?!o||wn(r,o,u):!!o);if(1024&l)return!0;if(16&l)return r?wn(r,o,u):!!o;if(8&l){const e=t.dynamicProps;for(let t=0;t<e.length;t++){const n=e[t];if(o[n]!==r[n]&&!hn(u,n))return!0}}return!1}function wn(e,t,n){const r=Object.keys(t);if(r.length!==Object.keys(e).length)return!0;for(let s=0;s<r.length;s++){const a=r[s];if(t[a]!==e[a]&&!hn(n,a))return!0}return!1}function vn({vnode:e,parent:t},n){while(t&&t.subTree===e)(e=t.vnode).el=n,t=t.parent}const kn=e=>e.__isSuspense;function In(e,t){t&&t.pendingBranch?S(e)?t.effects.push(...e):t.effects.push(e):nn(e)}function Sn(e,t){if(Vs){let n=Vs.provides;const r=Vs.parent&&Vs.parent.provides;r===n&&(n=Vs.provides=Object.create(r)),n[e]=t}else 0}function Nn(e,t,n=!1){const r=Vs||pn;if(r){const s=null==r.parent?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides;if(s&&e in s)return s[e];if(arguments.length>1)return n&&C(t)?t.call(r.proxy):t}else 0}const Tn={};function Cn(e,t,n){return En(e,t,n)}function En(e,t,{immediate:n,deep:r,flush:s,onTrack:a,onTrigger:o}=d){const i=Vs;let l,u,c=!1,h=!1;if(Ct(e)?(l=()=>e.value,c=xt(e)):yt(e)?(l=()=>e,r=!0):S(e)?(h=!0,c=e.some((e=>yt(e)||xt(e))),l=()=>e.map((e=>Ct(e)?e.value:yt(e)?Rn(e):C(e)?Pt(e,i,2):void 0))):l=C(e)?t?()=>Pt(e,i,2):()=>{if(!i||!i.isUnmounted)return u&&u(),zt(e,i,3,[f])}:m,t&&r){const e=l;l=()=>Rn(e())}let p,f=e=>{u=x.onStop=()=>{Pt(e,i,4)}};if(Xs){if(f=m,t?n&&zt(t,i,3,[l(),h?[]:void 0,f]):l(),"sync"!==s)return m;{const e=la();p=e.__watcherHandles||(e.__watcherHandles=[])}}let g=h?new Array(e.length).fill(Tn):Tn;const y=()=>{if(x.active)if(t){const e=x.run();(r||c||(h?e.some(((e,t)=>G(e,g[t]))):G(e,g)))&&(u&&u(),zt(t,i,3,[e,g===Tn?void 0:h&&g[0]===Tn?[]:g,f]),g=e)}else x.run()};let b;y.allowRecurse=!!t,"sync"===s?b=y:"post"===s?b=()=>ns(y,i&&i.suspense):(y.pre=!0,i&&(y.id=i.uid),b=()=>Qt(y));const x=new pe(l,b);t?n?y():g=x.run():"post"===s?ns(x.run.bind(x),i&&i.suspense):x.run();const w=()=>{x.stop(),i&&i.scope&&v(i.scope.effects,x)};return p&&p.push(w),w}function $n(e,t,n){const r=this.proxy,s=E(e)?e.includes(".")?An(r,e):()=>r[e]:e.bind(r,r);let a;C(t)?a=t:(a=t.handler,n=t);const o=Vs;js(this);const i=En(s,a.bind(r),n);return o?js(o):Gs(),i}function An(e,t){const n=t.split(".");return()=>{let t=e;for(let e=0;e<n.length&&t;e++)t=t[n[e]];return t}}function Rn(e,t){if(!A(e)||e["__v_skip"])return e;if(t=t||new Set,t.has(e))return e;if(t.add(e),Ct(e))Rn(e.value,t);else if(S(e))for(let n=0;n<e.length;n++)Rn(e[n],t);else if(T(e)||N(e))e.forEach((e=>{Rn(e,t)}));else if(D(e))for(const n in e)Rn(e[n],t);return e}function Mn(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return tr((()=>{e.isMounted=!0})),sr((()=>{e.isUnmounting=!0})),e}const _n=[Function,Array],Fn={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:_n,onEnter:_n,onAfterEnter:_n,onEnterCancelled:_n,onBeforeLeave:_n,onLeave:_n,onAfterLeave:_n,onLeaveCancelled:_n,onBeforeAppear:_n,onAppear:_n,onAfterAppear:_n,onAppearCancelled:_n},setup(e,{slots:t}){const n=Ws(),r=Mn();let s;return()=>{const a=t.default&&Un(t.default(),!0);if(!a||!a.length)return;let o=a[0];if(a.length>1){let e=!1;for(const t of a)if(t.type!==hs){0,o=t,e=!0;break}}const i=vt(e),{mode:l}=i;if(r.isLeaving)return Pn(o);const u=zn(o);if(!u)return Pn(o);const c=Ln(u,i,r,n);Bn(u,c);const h=n.subTree,p=h&&zn(h);let d=!1;const{getTransitionKey:f}=u.type;if(f){const e=f();void 0===s?s=e:e!==s&&(s=e,d=!0)}if(p&&p.type!==hs&&(!Is(u,p)||d)){const e=Ln(p,i,r,n);if(Bn(p,e),"out-in"===l)return r.isLeaving=!0,e.afterLeave=()=>{r.isLeaving=!1,!1!==n.update.active&&n.update()},Pn(o);"in-out"===l&&u.type!==hs&&(e.delayLeave=(e,t,n)=>{const s=On(r,p);s[String(p.key)]=p,e._leaveCb=()=>{t(),e._leaveCb=void 0,delete c.delayedLeave},c.delayedLeave=n})}return o}}},Dn=Fn;function On(e,t){const{leavingVNodes:n}=e;let r=n.get(t.type);return r||(r=Object.create(null),n.set(t.type,r)),r}function Ln(e,t,n,r){const{appear:s,mode:a,persisted:o=!1,onBeforeEnter:i,onEnter:l,onAfterEnter:u,onEnterCancelled:c,onBeforeLeave:h,onLeave:p,onAfterLeave:d,onLeaveCancelled:f,onBeforeAppear:m,onAppear:g,onAfterAppear:y,onAppearCancelled:b}=t,x=String(e.key),w=On(n,e),v=(e,t)=>{e&&zt(e,r,9,t)},k=(e,t)=>{const n=t[1];v(e,t),S(e)?e.every((e=>e.length<=1))&&n():e.length<=1&&n()},I={mode:a,persisted:o,beforeEnter(t){let r=i;if(!n.isMounted){if(!s)return;r=m||i}t._leaveCb&&t._leaveCb(!0);const a=w[x];a&&Is(e,a)&&a.el._leaveCb&&a.el._leaveCb(),v(r,[t])},enter(e){let t=l,r=u,a=c;if(!n.isMounted){if(!s)return;t=g||l,r=y||u,a=b||c}let o=!1;const i=e._enterCb=t=>{o||(o=!0,v(t?a:r,[e]),I.delayedLeave&&I.delayedLeave(),e._enterCb=void 0)};t?k(t,[e,i]):i()},leave(t,r){const s=String(e.key);if(t._enterCb&&t._enterCb(!0),n.isUnmounting)return r();v(h,[t]);let a=!1;const o=t._leaveCb=n=>{a||(a=!0,r(),v(n?f:d,[t]),t._leaveCb=void 0,w[s]===e&&delete w[s])};w[s]=e,p?k(p,[t,o]):o()},clone(e){return Ln(e,t,n,r)}};return I}function Pn(e){if(jn(e))return e=Rs(e),e.children=null,e}function zn(e){return jn(e)?e.children?e.children[0]:void 0:e}function Bn(e,t){6&e.shapeFlag&&e.component?Bn(e.component.subTree,t):128&e.shapeFlag?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function Un(e,t=!1,n){let r=[],s=0;for(let a=0;a<e.length;a++){let o=e[a];const i=null==n?o.key:String(n)+String(null!=o.key?o.key:a);o.type===us?(128&o.patchFlag&&s++,r=r.concat(Un(o.children,t,i))):(t||o.type!==hs)&&r.push(null!=i?Rs(o,{key:i}):o)}if(s>1)for(let a=0;a<r.length;a++)r[a].patchFlag=-2;return r}function Vn(e){return C(e)?{setup:e,name:e.name}:e}const Wn=e=>!!e.type.__asyncLoader;const jn=e=>e.type.__isKeepAlive;RegExp,RegExp;function Gn(e,t){return S(e)?e.some((e=>Gn(e,t))):E(e)?e.split(",").includes(t):!!e.test&&e.test(t)}function Hn(e,t){Kn(e,"a",t)}function qn(e,t){Kn(e,"da",t)}function Kn(e,t,n=Vs){const r=e.__wdc||(e.__wdc=()=>{let t=n;while(t){if(t.isDeactivated)return;t=t.parent}return e()});if(Jn(t,r,n),n){let e=n.parent;while(e&&e.parent)jn(e.parent.vnode)&&Xn(r,t,n,e),e=e.parent}}function Xn(e,t,n,r){const s=Jn(t,e,r,!0);ar((()=>{v(r[t],s)}),n)}function Yn(e){e.shapeFlag&=-257,e.shapeFlag&=-513}function Zn(e){return 128&e.shapeFlag?e.ssContent:e}function Jn(e,t,n=Vs,r=!1){if(n){const s=n[e]||(n[e]=[]),a=t.__weh||(t.__weh=(...r)=>{if(n.isUnmounted)return;ge(),js(n);const s=zt(t,n,e,r);return Gs(),ye(),s});return r?s.unshift(a):s.push(a),a}}const Qn=e=>(t,n=Vs)=>(!Xs||"sp"===e)&&Jn(e,((...e)=>t(...e)),n),er=Qn("bm"),tr=Qn("m"),nr=Qn("bu"),rr=Qn("u"),sr=Qn("bum"),ar=Qn("um"),or=Qn("sp"),ir=Qn("rtg"),lr=Qn("rtc");function ur(e,t=Vs){Jn("ec",e,t)}function cr(e,t,n,r){const s=e.dirs,a=t&&t.dirs;for(let o=0;o<s.length;o++){const i=s[o];a&&(i.oldValue=a[o].value);let l=i.dir[r];l&&(ge(),zt(l,n,8,[e.el,i,e,t]),ye())}}const hr="components";function pr(e,t){return fr(hr,e,!0,t)||e}const dr=Symbol();function fr(e,t,n=!0,r=!1){const s=pn||Vs;if(s){const n=s.type;if(e===hr){const e=ra(n,!1);if(e&&(e===t||e===B(t)||e===W(B(t))))return n}const a=mr(s[e]||n[e],t)||mr(s.appContext[e],t);return!a&&r?n:a}}function mr(e,t){return e&&(e[t]||e[B(t)]||e[W(B(t))])}function gr(e,t,n,r){let s;const a=n&&n[r];if(S(e)||E(e)){s=new Array(e.length);for(let n=0,r=e.length;n<r;n++)s[n]=t(e[n],n,void 0,a&&a[n])}else if("number"===typeof e){0,s=new Array(e);for(let n=0;n<e;n++)s[n]=t(n+1,n,void 0,a&&a[n])}else if(A(e))if(e[Symbol.iterator])s=Array.from(e,((e,n)=>t(e,n,void 0,a&&a[n])));else{const n=Object.keys(e);s=new Array(n.length);for(let r=0,o=n.length;r<o;r++){const o=n[r];s[r]=t(e[o],o,r,a&&a[r])}}else s=[];return n&&(n[r]=s),s}const yr=e=>e?Hs(e)?na(e)||e.proxy:yr(e.parent):null,br=w(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>yr(e.parent),$root:e=>yr(e.root),$emit:e=>e.emit,$options:e=>Tr(e),$forceUpdate:e=>e.f||(e.f=()=>Qt(e.update)),$nextTick:e=>e.n||(e.n=Zt.bind(e.proxy)),$watch:e=>$n.bind(e)}),xr=(e,t)=>e!==d&&!e.__isScriptSetup&&I(e,t),wr={get({_:e},t){const{ctx:n,setupState:r,data:s,props:a,accessCache:o,type:i,appContext:l}=e;let u;if("$"!==t[0]){const i=o[t];if(void 0!==i)switch(i){case 1:return r[t];case 2:return s[t];case 4:return n[t];case 3:return a[t]}else{if(xr(r,t))return o[t]=1,r[t];if(s!==d&&I(s,t))return o[t]=2,s[t];if((u=e.propsOptions[0])&&I(u,t))return o[t]=3,a[t];if(n!==d&&I(n,t))return o[t]=4,n[t];vr&&(o[t]=0)}}const c=br[t];let h,p;return c?("$attrs"===t&&be(e,"get",t),c(e)):(h=i.__cssModules)&&(h=h[t])?h:n!==d&&I(n,t)?(o[t]=4,n[t]):(p=l.config.globalProperties,I(p,t)?p[t]:void 0)},set({_:e},t,n){const{data:r,setupState:s,ctx:a}=e;return xr(s,t)?(s[t]=n,!0):r!==d&&I(r,t)?(r[t]=n,!0):!I(e.props,t)&&(("$"!==t[0]||!(t.slice(1)in e))&&(a[t]=n,!0))},has({_:{data:e,setupState:t,accessCache:n,ctx:r,appContext:s,propsOptions:a}},o){let i;return!!n[o]||e!==d&&I(e,o)||xr(t,o)||(i=a[0])&&I(i,o)||I(r,o)||I(br,o)||I(s.config.globalProperties,o)},defineProperty(e,t,n){return null!=n.get?e._.accessCache[t]=0:I(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};let vr=!0;function kr(e){const t=Tr(e),n=e.proxy,r=e.ctx;vr=!1,t.beforeCreate&&Sr(t.beforeCreate,e,"bc");const{data:s,computed:a,methods:o,watch:i,provide:l,inject:u,created:c,beforeMount:h,mounted:p,beforeUpdate:d,updated:f,activated:g,deactivated:y,beforeDestroy:b,beforeUnmount:x,destroyed:w,unmounted:v,render:k,renderTracked:I,renderTriggered:N,errorCaptured:T,serverPrefetch:E,expose:$,inheritAttrs:R,components:M,directives:_,filters:F}=t,D=null;if(u&&Ir(u,r,D,e.appContext.config.unwrapInjectedRef),o)for(const m in o){const e=o[m];C(e)&&(r[m]=e.bind(n))}if(s){0;const t=s.call(n,n);0,A(t)&&(e.data=dt(t))}if(vr=!0,a)for(const S in a){const e=a[S],t=C(e)?e.bind(n,n):C(e.get)?e.get.bind(n,n):m;0;const s=!C(e)&&C(e.set)?e.set.bind(n):m,o=aa({get:t,set:s});Object.defineProperty(r,S,{enumerable:!0,configurable:!0,get:()=>o.value,set:e=>o.value=e})}if(i)for(const m in i)Nr(i[m],r,n,m);if(l){const e=C(l)?l.call(n):l;Reflect.ownKeys(e).forEach((t=>{Sn(t,e[t])}))}function O(e,t){S(t)?t.forEach((t=>e(t.bind(n)))):t&&e(t.bind(n))}if(c&&Sr(c,e,"c"),O(er,h),O(tr,p),O(nr,d),O(rr,f),O(Hn,g),O(qn,y),O(ur,T),O(lr,I),O(ir,N),O(sr,x),O(ar,v),O(or,E),S($))if($.length){const t=e.exposed||(e.exposed={});$.forEach((e=>{Object.defineProperty(t,e,{get:()=>n[e],set:t=>n[e]=t})}))}else e.exposed||(e.exposed={});k&&e.render===m&&(e.render=k),null!=R&&(e.inheritAttrs=R),M&&(e.components=M),_&&(e.directives=_)}function Ir(e,t,n=m,r=!1){S(e)&&(e=Rr(e));for(const s in e){const n=e[s];let a;a=A(n)?"default"in n?Nn(n.from||s,n.default,!0):Nn(n.from||s):Nn(n),Ct(a)&&r?Object.defineProperty(t,s,{enumerable:!0,configurable:!0,get:()=>a.value,set:e=>a.value=e}):t[s]=a}}function Sr(e,t,n){zt(S(e)?e.map((e=>e.bind(t.proxy))):e.bind(t.proxy),t,n)}function Nr(e,t,n,r){const s=r.includes(".")?An(n,r):()=>n[r];if(E(e)){const n=t[e];C(n)&&Cn(s,n)}else if(C(e))Cn(s,e.bind(n));else if(A(e))if(S(e))e.forEach((e=>Nr(e,t,n,r)));else{const r=C(e.handler)?e.handler.bind(n):t[e.handler];C(r)&&Cn(s,r,e)}else 0}function Tr(e){const t=e.type,{mixins:n,extends:r}=t,{mixins:s,optionsCache:a,config:{optionMergeStrategies:o}}=e.appContext,i=a.get(t);let l;return i?l=i:s.length||n||r?(l={},s.length&&s.forEach((e=>Cr(l,e,o,!0))),Cr(l,t,o)):l=t,A(t)&&a.set(t,l),l}function Cr(e,t,n,r=!1){const{mixins:s,extends:a}=t;a&&Cr(e,a,n,!0),s&&s.forEach((t=>Cr(e,t,n,!0)));for(const o in t)if(r&&"expose"===o);else{const r=Er[o]||n&&n[o];e[o]=r?r(e[o],t[o]):t[o]}return e}const Er={data:$r,props:_r,emits:_r,methods:_r,computed:_r,beforeCreate:Mr,created:Mr,beforeMount:Mr,mounted:Mr,beforeUpdate:Mr,updated:Mr,beforeDestroy:Mr,beforeUnmount:Mr,destroyed:Mr,unmounted:Mr,activated:Mr,deactivated:Mr,errorCaptured:Mr,serverPrefetch:Mr,components:_r,directives:_r,watch:Fr,provide:$r,inject:Ar};function $r(e,t){return t?e?function(){return w(C(e)?e.call(this,this):e,C(t)?t.call(this,this):t)}:t:e}function Ar(e,t){return _r(Rr(e),Rr(t))}function Rr(e){if(S(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function Mr(e,t){return e?[...new Set([].concat(e,t))]:t}function _r(e,t){return e?w(w(Object.create(null),e),t):t}function Fr(e,t){if(!e)return t;if(!t)return e;const n=w(Object.create(null),e);for(const r in t)n[r]=Mr(e[r],t[r]);return n}function Dr(e,t,n,r=!1){const s={},a={};q(a,Ss,1),e.propsDefaults=Object.create(null),Lr(e,t,s,a);for(const o in e.propsOptions[0])o in s||(s[o]=void 0);n?e.props=r?s:ft(s):e.type.props?e.props=s:e.props=a,e.attrs=a}function Or(e,t,n,r){const{props:s,attrs:a,vnode:{patchFlag:o}}=e,i=vt(s),[l]=e.propsOptions;let u=!1;if(!(r||o>0)||16&o){let r;Lr(e,t,s,a)&&(u=!0);for(const a in i)t&&(I(t,a)||(r=V(a))!==a&&I(t,r))||(l?!n||void 0===n[a]&&void 0===n[r]||(s[a]=Pr(l,i,a,void 0,e,!0)):delete s[a]);if(a!==i)for(const e in a)t&&I(t,e)||(delete a[e],u=!0)}else if(8&o){const n=e.vnode.dynamicProps;for(let r=0;r<n.length;r++){let o=n[r];if(hn(e.emitsOptions,o))continue;const c=t[o];if(l)if(I(a,o))c!==a[o]&&(a[o]=c,u=!0);else{const t=B(o);s[t]=Pr(l,i,t,c,e,!1)}else c!==a[o]&&(a[o]=c,u=!0)}}u&&we(e,"set","$attrs")}function Lr(e,t,n,r){const[s,a]=e.propsOptions;let o,i=!1;if(t)for(let l in t){if(L(l))continue;const u=t[l];let c;s&&I(s,c=B(l))?a&&a.includes(c)?(o||(o={}))[c]=u:n[c]=u:hn(e.emitsOptions,l)||l in r&&u===r[l]||(r[l]=u,i=!0)}if(a){const t=vt(n),r=o||d;for(let o=0;o<a.length;o++){const i=a[o];n[i]=Pr(s,t,i,r[i],e,!I(r,i))}}return i}function Pr(e,t,n,r,s,a){const o=e[n];if(null!=o){const e=I(o,"default");if(e&&void 0===r){const e=o.default;if(o.type!==Function&&C(e)){const{propsDefaults:a}=s;n in a?r=a[n]:(js(s),r=a[n]=e.call(null,t),Gs())}else r=e}o[0]&&(a&&!e?r=!1:!o[1]||""!==r&&r!==V(n)||(r=!0))}return r}function zr(e,t,n=!1){const r=t.propsCache,s=r.get(e);if(s)return s;const a=e.props,o={},i=[];let l=!1;if(!C(e)){const r=e=>{l=!0;const[n,r]=zr(e,t,!0);w(o,n),r&&i.push(...r)};!n&&t.mixins.length&&t.mixins.forEach(r),e.extends&&r(e.extends),e.mixins&&e.mixins.forEach(r)}if(!a&&!l)return A(e)&&r.set(e,f),f;if(S(a))for(let c=0;c<a.length;c++){0;const e=B(a[c]);Br(e)&&(o[e]=d)}else if(a){0;for(const e in a){const t=B(e);if(Br(t)){const n=a[e],r=o[t]=S(n)||C(n)?{type:n}:Object.assign({},n);if(r){const e=Wr(Boolean,r.type),n=Wr(String,r.type);r[0]=e>-1,r[1]=n<0||e<n,(e>-1||I(r,"default"))&&i.push(t)}}}}const u=[o,i];return A(e)&&r.set(e,u),u}function Br(e){return"$"!==e[0]}function Ur(e){const t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:null===e?"null":""}function Vr(e,t){return Ur(e)===Ur(t)}function Wr(e,t){return S(t)?t.findIndex((t=>Vr(t,e))):C(t)&&Vr(t,e)?0:-1}const jr=e=>"_"===e[0]||"$stable"===e,Gr=e=>S(e)?e.map(Fs):[Fs(e)],Hr=(e,t,n)=>{if(t._n)return t;const r=mn(((...e)=>Gr(t(...e))),n);return r._c=!1,r},qr=(e,t,n)=>{const r=e._ctx;for(const s in e){if(jr(s))continue;const n=e[s];if(C(n))t[s]=Hr(s,n,r);else if(null!=n){0;const e=Gr(n);t[s]=()=>e}}},Kr=(e,t)=>{const n=Gr(t);e.slots.default=()=>n},Xr=(e,t)=>{if(32&e.vnode.shapeFlag){const n=t._;n?(e.slots=vt(t),q(t,"_",n)):qr(t,e.slots={})}else e.slots={},t&&Kr(e,t);q(e.slots,Ss,1)},Yr=(e,t,n)=>{const{vnode:r,slots:s}=e;let a=!0,o=d;if(32&r.shapeFlag){const e=t._;e?n&&1===e?a=!1:(w(s,t),n||1!==e||delete s._):(a=!t.$stable,qr(t,s)),o=t}else t&&(Kr(e,t),o={default:1});if(a)for(const i in s)jr(i)||i in o||delete s[i]};function Zr(){return{app:null,config:{isNativeTag:g,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Jr=0;function Qr(e,t){return function(n,r=null){C(n)||(n=Object.assign({},n)),null==r||A(r)||(r=null);const s=Zr(),a=new Set;let o=!1;const i=s.app={_uid:Jr++,_component:n,_props:r,_container:null,_context:s,_instance:null,version:ua,get config(){return s.config},set config(e){0},use(e,...t){return a.has(e)||(e&&C(e.install)?(a.add(e),e.install(i,...t)):C(e)&&(a.add(e),e(i,...t))),i},mixin(e){return s.mixins.includes(e)||s.mixins.push(e),i},component(e,t){return t?(s.components[e]=t,i):s.components[e]},directive(e,t){return t?(s.directives[e]=t,i):s.directives[e]},mount(a,l,u){if(!o){0;const c=Es(n,r);return c.appContext=s,l&&t?t(c,a):e(c,a,u),o=!0,i._container=a,a.__vue_app__=i,na(c.component)||c.component.proxy}},unmount(){o&&(e(null,i._container),delete i._container.__vue_app__)},provide(e,t){return s.provides[e]=t,i}};return i}}function es(e,t,n,r,s=!1){if(S(e))return void e.forEach(((e,a)=>es(e,t&&(S(t)?t[a]:t),n,r,s)));if(Wn(r)&&!s)return;const a=4&r.shapeFlag?na(r.component)||r.component.proxy:r.el,o=s?null:a,{i:i,r:l}=e;const u=t&&t.r,c=i.refs===d?i.refs={}:i.refs,h=i.setupState;if(null!=u&&u!==l&&(E(u)?(c[u]=null,I(h,u)&&(h[u]=null)):Ct(u)&&(u.value=null)),C(l))Pt(l,i,12,[o,c]);else{const t=E(l),r=Ct(l);if(t||r){const i=()=>{if(e.f){const n=t?I(h,l)?h[l]:c[l]:l.value;s?S(n)&&v(n,a):S(n)?n.includes(a)||n.push(a):t?(c[l]=[a],I(h,l)&&(h[l]=c[l])):(l.value=[a],e.k&&(c[e.k]=l.value))}else t?(c[l]=o,I(h,l)&&(h[l]=o)):r&&(l.value=o,e.k&&(c[e.k]=o))};o?(i.id=-1,ns(i,n)):i()}else 0}}function ts(){}const ns=In;function rs(e){return ss(e)}function ss(e,t){ts();const n=Y();n.__VUE__=!0;const{insert:r,remove:s,patchProp:a,createElement:o,createText:i,createComment:l,setText:u,setElementText:c,parentNode:h,nextSibling:p,setScopeId:g=m,insertStaticContent:y}=e,b=(e,t,n,r=null,s=null,a=null,o=!1,i=null,l=!!t.dynamicChildren)=>{if(e===t)return;e&&!Is(e,t)&&(r=K(e),V(e,s,a,!0),e=null),-2===t.patchFlag&&(l=!1,t.dynamicChildren=null);const{type:u,ref:c,shapeFlag:h}=t;switch(u){case cs:x(e,t,n,r);break;case hs:w(e,t,n,r);break;case ps:null==e&&v(t,n,r,o);break;case us:R(e,t,n,r,s,a,o,i,l);break;default:1&h?S(e,t,n,r,s,a,o,i,l):6&h?M(e,t,n,r,s,a,o,i,l):(64&h||128&h)&&u.process(e,t,n,r,s,a,o,i,l,Z)}null!=c&&s&&es(c,e&&e.ref,a,t||e,!t)},x=(e,t,n,s)=>{if(null==e)r(t.el=i(t.children),n,s);else{const n=t.el=e.el;t.children!==e.children&&u(n,t.children)}},w=(e,t,n,s)=>{null==e?r(t.el=l(t.children||""),n,s):t.el=e.el},v=(e,t,n,r)=>{[e.el,e.anchor]=y(e.children,t,n,r,e.el,e.anchor)},k=({el:e,anchor:t},n,s)=>{let a;while(e&&e!==t)a=p(e),r(e,n,s),e=a;r(t,n,s)},I=({el:e,anchor:t})=>{let n;while(e&&e!==t)n=p(e),s(e),e=n;s(t)},S=(e,t,n,r,s,a,o,i,l)=>{o=o||"svg"===t.type,null==e?N(t,n,r,s,a,o,i,l):E(e,t,s,a,o,i,l)},N=(e,t,n,s,i,l,u,h)=>{let p,d;const{type:f,props:m,shapeFlag:g,transition:y,dirs:b}=e;if(p=e.el=o(e.type,l,m&&m.is,m),8&g?c(p,e.children):16&g&&C(e.children,p,null,s,i,l&&"foreignObject"!==f,u,h),b&&cr(e,null,s,"created"),m){for(const t in m)"value"===t||L(t)||a(p,t,null,m[t],l,e.children,s,i,q);"value"in m&&a(p,"value",null,m.value),(d=m.onVnodeBeforeMount)&&Ps(d,s,e)}T(p,e,e.scopeId,u,s),b&&cr(e,null,s,"beforeMount");const x=(!i||i&&!i.pendingBranch)&&y&&!y.persisted;x&&y.beforeEnter(p),r(p,t,n),((d=m&&m.onVnodeMounted)||x||b)&&ns((()=>{d&&Ps(d,s,e),x&&y.enter(p),b&&cr(e,null,s,"mounted")}),i)},T=(e,t,n,r,s)=>{if(n&&g(e,n),r)for(let a=0;a<r.length;a++)g(e,r[a]);if(s){let n=s.subTree;if(t===n){const t=s.vnode;T(e,t,t.scopeId,t.slotScopeIds,s.parent)}}},C=(e,t,n,r,s,a,o,i,l=0)=>{for(let u=l;u<e.length;u++){const l=e[u]=i?Ds(e[u]):Fs(e[u]);b(null,l,t,n,r,s,a,o,i)}},E=(e,t,n,r,s,o,i)=>{const l=t.el=e.el;let{patchFlag:u,dynamicChildren:h,dirs:p}=t;u|=16&e.patchFlag;const f=e.props||d,m=t.props||d;let g;n&&as(n,!1),(g=m.onVnodeBeforeUpdate)&&Ps(g,n,t,e),p&&cr(t,e,n,"beforeUpdate"),n&&as(n,!0);const y=s&&"foreignObject"!==t.type;if(h?$(e.dynamicChildren,h,l,n,r,y,o):i||P(e,t,l,null,n,r,y,o,!1),u>0){if(16&u)A(l,t,f,m,n,r,s);else if(2&u&&f.class!==m.class&&a(l,"class",null,m.class,s),4&u&&a(l,"style",f.style,m.style,s),8&u){const o=t.dynamicProps;for(let t=0;t<o.length;t++){const i=o[t],u=f[i],c=m[i];c===u&&"value"!==i||a(l,i,u,c,s,e.children,n,r,q)}}1&u&&e.children!==t.children&&c(l,t.children)}else i||null!=h||A(l,t,f,m,n,r,s);((g=m.onVnodeUpdated)||p)&&ns((()=>{g&&Ps(g,n,t,e),p&&cr(t,e,n,"updated")}),r)},$=(e,t,n,r,s,a,o)=>{for(let i=0;i<t.length;i++){const l=e[i],u=t[i],c=l.el&&(l.type===us||!Is(l,u)||70&l.shapeFlag)?h(l.el):n;b(l,u,c,null,r,s,a,o,!0)}},A=(e,t,n,r,s,o,i)=>{if(n!==r){if(n!==d)for(const l in n)L(l)||l in r||a(e,l,n[l],null,i,t.children,s,o,q);for(const l in r){if(L(l))continue;const u=r[l],c=n[l];u!==c&&"value"!==l&&a(e,l,c,u,i,t.children,s,o,q)}"value"in r&&a(e,"value",n.value,r.value)}},R=(e,t,n,s,a,o,l,u,c)=>{const h=t.el=e?e.el:i(""),p=t.anchor=e?e.anchor:i("");let{patchFlag:d,dynamicChildren:f,slotScopeIds:m}=t;m&&(u=u?u.concat(m):m),null==e?(r(h,n,s),r(p,n,s),C(t.children,n,p,a,o,l,u,c)):d>0&&64&d&&f&&e.dynamicChildren?($(e.dynamicChildren,f,n,a,o,l,u),(null!=t.key||a&&t===a.subTree)&&os(e,t,!0)):P(e,t,n,p,a,o,l,u,c)},M=(e,t,n,r,s,a,o,i,l)=>{t.slotScopeIds=i,null==e?512&t.shapeFlag?s.ctx.activate(t,n,r,o,l):_(t,n,r,s,a,o,l):F(e,t,l)},_=(e,t,n,r,s,a,o)=>{const i=e.component=Us(e,r,s);if(jn(e)&&(i.ctx.renderer=Z),Ys(i),i.asyncDep){if(s&&s.registerDep(i,D),!e.el){const e=i.subTree=Es(hs);w(null,e,t,n)}}else D(i,e,t,n,s,a,o)},F=(e,t,n)=>{const r=t.component=e.component;if(xn(e,t,n)){if(r.asyncDep&&!r.asyncResolved)return void O(r,t,n);r.next=t,tn(r.update),r.update()}else t.el=e.el,r.vnode=t},D=(e,t,n,r,s,a,o)=>{const i=()=>{if(e.isMounted){let t,{next:n,bu:r,u:i,parent:l,vnode:u}=e,c=n;0,as(e,!1),n?(n.el=u.el,O(e,n,o)):n=u,r&&H(r),(t=n.props&&n.props.onVnodeBeforeUpdate)&&Ps(t,l,n,u),as(e,!0);const p=gn(e);0;const d=e.subTree;e.subTree=p,b(d,p,h(d.el),K(d),e,s,a),n.el=p.el,null===c&&vn(e,p.el),i&&ns(i,s),(t=n.props&&n.props.onVnodeUpdated)&&ns((()=>Ps(t,l,n,u)),s)}else{let o;const{el:i,props:l}=t,{bm:u,m:c,parent:h}=e,p=Wn(t);if(as(e,!1),u&&H(u),!p&&(o=l&&l.onVnodeBeforeMount)&&Ps(o,h,t),as(e,!0),i&&Q){const n=()=>{e.subTree=gn(e),Q(i,e.subTree,e,s,null)};p?t.type.__asyncLoader().then((()=>!e.isUnmounted&&n())):n()}else{0;const o=e.subTree=gn(e);0,b(null,o,n,r,e,s,a),t.el=o.el}if(c&&ns(c,s),!p&&(o=l&&l.onVnodeMounted)){const e=t;ns((()=>Ps(o,h,e)),s)}(256&t.shapeFlag||h&&Wn(h.vnode)&&256&h.vnode.shapeFlag)&&e.a&&ns(e.a,s),e.isMounted=!0,t=n=r=null}},l=e.effect=new pe(i,(()=>Qt(u)),e.scope),u=e.update=()=>l.run();u.id=e.uid,as(e,!0),u()},O=(e,t,n)=>{t.component=e;const r=e.vnode.props;e.vnode=t,e.next=null,Or(e,t.props,r,n),Yr(e,t.children,n),ge(),rn(),ye()},P=(e,t,n,r,s,a,o,i,l=!1)=>{const u=e&&e.children,h=e?e.shapeFlag:0,p=t.children,{patchFlag:d,shapeFlag:f}=t;if(d>0){if(128&d)return void B(u,p,n,r,s,a,o,i,l);if(256&d)return void z(u,p,n,r,s,a,o,i,l)}8&f?(16&h&&q(u,s,a),p!==u&&c(n,p)):16&h?16&f?B(u,p,n,r,s,a,o,i,l):q(u,s,a,!0):(8&h&&c(n,""),16&f&&C(p,n,r,s,a,o,i,l))},z=(e,t,n,r,s,a,o,i,l)=>{e=e||f,t=t||f;const u=e.length,c=t.length,h=Math.min(u,c);let p;for(p=0;p<h;p++){const r=t[p]=l?Ds(t[p]):Fs(t[p]);b(e[p],r,n,null,s,a,o,i,l)}u>c?q(e,s,a,!0,!1,h):C(t,n,r,s,a,o,i,l,h)},B=(e,t,n,r,s,a,o,i,l)=>{let u=0;const c=t.length;let h=e.length-1,p=c-1;while(u<=h&&u<=p){const r=e[u],c=t[u]=l?Ds(t[u]):Fs(t[u]);if(!Is(r,c))break;b(r,c,n,null,s,a,o,i,l),u++}while(u<=h&&u<=p){const r=e[h],u=t[p]=l?Ds(t[p]):Fs(t[p]);if(!Is(r,u))break;b(r,u,n,null,s,a,o,i,l),h--,p--}if(u>h){if(u<=p){const e=p+1,h=e<c?t[e].el:r;while(u<=p)b(null,t[u]=l?Ds(t[u]):Fs(t[u]),n,h,s,a,o,i,l),u++}}else if(u>p)while(u<=h)V(e[u],s,a,!0),u++;else{const d=u,m=u,g=new Map;for(u=m;u<=p;u++){const e=t[u]=l?Ds(t[u]):Fs(t[u]);null!=e.key&&g.set(e.key,u)}let y,x=0;const w=p-m+1;let v=!1,k=0;const I=new Array(w);for(u=0;u<w;u++)I[u]=0;for(u=d;u<=h;u++){const r=e[u];if(x>=w){V(r,s,a,!0);continue}let c;if(null!=r.key)c=g.get(r.key);else for(y=m;y<=p;y++)if(0===I[y-m]&&Is(r,t[y])){c=y;break}void 0===c?V(r,s,a,!0):(I[c-m]=u+1,c>=k?k=c:v=!0,b(r,t[c],n,null,s,a,o,i,l),x++)}const S=v?is(I):f;for(y=S.length-1,u=w-1;u>=0;u--){const e=m+u,h=t[e],p=e+1<c?t[e+1].el:r;0===I[u]?b(null,h,n,p,s,a,o,i,l):v&&(y<0||u!==S[y]?U(h,n,p,2):y--)}}},U=(e,t,n,s,a=null)=>{const{el:o,type:i,transition:l,children:u,shapeFlag:c}=e;if(6&c)return void U(e.component.subTree,t,n,s);if(128&c)return void e.suspense.move(t,n,s);if(64&c)return void i.move(e,t,n,Z);if(i===us){r(o,t,n);for(let e=0;e<u.length;e++)U(u[e],t,n,s);return void r(e.anchor,t,n)}if(i===ps)return void k(e,t,n);const h=2!==s&&1&c&&l;if(h)if(0===s)l.beforeEnter(o),r(o,t,n),ns((()=>l.enter(o)),a);else{const{leave:e,delayLeave:s,afterLeave:a}=l,i=()=>r(o,t,n),u=()=>{e(o,(()=>{i(),a&&a()}))};s?s(o,i,u):u()}else r(o,t,n)},V=(e,t,n,r=!1,s=!1)=>{const{type:a,props:o,ref:i,children:l,dynamicChildren:u,shapeFlag:c,patchFlag:h,dirs:p}=e;if(null!=i&&es(i,null,n,e,!0),256&c)return void t.ctx.deactivate(e);const d=1&c&&p,f=!Wn(e);let m;if(f&&(m=o&&o.onVnodeBeforeUnmount)&&Ps(m,t,e),6&c)G(e.component,n,r);else{if(128&c)return void e.suspense.unmount(n,r);d&&cr(e,null,t,"beforeUnmount"),64&c?e.type.remove(e,t,n,s,Z,r):u&&(a!==us||h>0&&64&h)?q(u,t,n,!1,!0):(a===us&&384&h||!s&&16&c)&&q(l,t,n),r&&W(e)}(f&&(m=o&&o.onVnodeUnmounted)||d)&&ns((()=>{m&&Ps(m,t,e),d&&cr(e,null,t,"unmounted")}),n)},W=e=>{const{type:t,el:n,anchor:r,transition:a}=e;if(t===us)return void j(n,r);if(t===ps)return void I(e);const o=()=>{s(n),a&&!a.persisted&&a.afterLeave&&a.afterLeave()};if(1&e.shapeFlag&&a&&!a.persisted){const{leave:t,delayLeave:r}=a,s=()=>t(n,o);r?r(e.el,o,s):s()}else o()},j=(e,t)=>{let n;while(e!==t)n=p(e),s(e),e=n;s(t)},G=(e,t,n)=>{const{bum:r,scope:s,update:a,subTree:o,um:i}=e;r&&H(r),s.stop(),a&&(a.active=!1,V(o,e,t,n)),i&&ns(i,t),ns((()=>{e.isUnmounted=!0}),t),t&&t.pendingBranch&&!t.isUnmounted&&e.asyncDep&&!e.asyncResolved&&e.suspenseId===t.pendingId&&(t.deps--,0===t.deps&&t.resolve())},q=(e,t,n,r=!1,s=!1,a=0)=>{for(let o=a;o<e.length;o++)V(e[o],t,n,r,s)},K=e=>6&e.shapeFlag?K(e.component.subTree):128&e.shapeFlag?e.suspense.next():p(e.anchor||e.el),X=(e,t,n)=>{null==e?t._vnode&&V(t._vnode,null,null,!0):b(t._vnode||null,e,t,null,null,null,n),rn(),sn(),t._vnode=e},Z={p:b,um:V,m:U,r:W,mt:_,mc:C,pc:P,pbc:$,n:K,o:e};let J,Q;return t&&([J,Q]=t(Z)),{render:X,hydrate:J,createApp:Qr(X,J)}}function as({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function os(e,t,n=!1){const r=e.children,s=t.children;if(S(r)&&S(s))for(let a=0;a<r.length;a++){const e=r[a];let t=s[a];1&t.shapeFlag&&!t.dynamicChildren&&((t.patchFlag<=0||32===t.patchFlag)&&(t=s[a]=Ds(s[a]),t.el=e.el),n||os(e,t)),t.type===cs&&(t.el=e.el)}}function is(e){const t=e.slice(),n=[0];let r,s,a,o,i;const l=e.length;for(r=0;r<l;r++){const l=e[r];if(0!==l){if(s=n[n.length-1],e[s]<l){t[r]=s,n.push(r);continue}a=0,o=n.length-1;while(a<o)i=a+o>>1,e[n[i]]<l?a=i+1:o=i;l<e[n[a]]&&(a>0&&(t[r]=n[a-1]),n[a]=r)}}a=n.length,o=n[a-1];while(a-- >0)n[a]=o,o=t[o];return n}const ls=e=>e.__isTeleport;const us=Symbol(void 0),cs=Symbol(void 0),hs=Symbol(void 0),ps=Symbol(void 0),ds=[];let fs=null;function ms(e=!1){ds.push(fs=e?null:[])}function gs(){ds.pop(),fs=ds[ds.length-1]||null}let ys=1;function bs(e){ys+=e}function xs(e){return e.dynamicChildren=ys>0?fs||f:null,gs(),ys>0&&fs&&fs.push(e),e}function ws(e,t,n,r,s,a){return xs(Cs(e,t,n,r,s,a,!0))}function vs(e,t,n,r,s){return xs(Es(e,t,n,r,s,!0))}function ks(e){return!!e&&!0===e.__v_isVNode}function Is(e,t){return e.type===t.type&&e.key===t.key}const Ss="__vInternal",Ns=({key:e})=>null!=e?e:null,Ts=({ref:e,ref_key:t,ref_for:n})=>null!=e?E(e)||Ct(e)||C(e)?{i:pn,r:e,k:t,f:!!n}:e:null;function Cs(e,t=null,n=null,r=0,s=null,a=(e===us?0:1),o=!1,i=!1){const l={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Ns(t),ref:t&&Ts(t),scopeId:dn,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:a,patchFlag:r,dynamicProps:s,dynamicChildren:null,appContext:null,ctx:pn};return i?(Os(l,n),128&a&&e.normalize(l)):n&&(l.shapeFlag|=E(n)?8:16),ys>0&&!o&&fs&&(l.patchFlag>0||6&a)&&32!==l.patchFlag&&fs.push(l),l}const Es=$s;function $s(e,n=null,r=null,s=0,a=null,o=!1){if(e&&e!==dr||(e=hs),ks(e)){const t=Rs(e,n,!0);return r&&Os(t,r),ys>0&&!o&&fs&&(6&t.shapeFlag?fs[fs.indexOf(e)]=t:fs.push(t)),t.patchFlag|=-2,t}if(sa(e)&&(e=e.__vccOpts),n){n=As(n);let{class:e,style:r}=n;e&&!E(e)&&(n.class=i(e)),A(r)&&(wt(r)&&!S(r)&&(r=w({},r)),n.style=t(r))}const l=E(e)?1:kn(e)?128:ls(e)?64:A(e)?4:C(e)?2:0;return Cs(e,n,r,s,a,l,o,!0)}function As(e){return e?wt(e)||Ss in e?w({},e):e:null}function Rs(e,t,n=!1){const{props:r,ref:s,patchFlag:a,children:o}=e,i=t?Ls(r||{},t):r,l={__v_isVNode:!0,__v_skip:!0,type:e.type,props:i,key:i&&Ns(i),ref:t&&t.ref?n&&s?S(s)?s.concat(Ts(t)):[s,Ts(t)]:Ts(t):s,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==us?-1===a?16:16|a:a,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Rs(e.ssContent),ssFallback:e.ssFallback&&Rs(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx};return l}function Ms(e=" ",t=0){return Es(cs,null,e,t)}function _s(e="",t=!1){return t?(ms(),vs(hs,null,e)):Es(hs,null,e)}function Fs(e){return null==e||"boolean"===typeof e?Es(hs):S(e)?Es(us,null,e.slice()):"object"===typeof e?Ds(e):Es(cs,null,String(e))}function Ds(e){return null===e.el&&-1!==e.patchFlag||e.memo?e:Rs(e)}function Os(e,t){let n=0;const{shapeFlag:r}=e;if(null==t)t=null;else if(S(t))n=16;else if("object"===typeof t){if(65&r){const n=t.default;return void(n&&(n._c&&(n._d=!1),Os(e,n()),n._c&&(n._d=!0)))}{n=32;const r=t._;r||Ss in t?3===r&&pn&&(1===pn.slots._?t._=1:(t._=2,e.patchFlag|=1024)):t._ctx=pn}}else C(t)?(t={default:t,_ctx:pn},n=32):(t=String(t),64&r?(n=16,t=[Ms(t)]):n=8);e.children=t,e.shapeFlag|=n}function Ls(...e){const n={};for(let r=0;r<e.length;r++){const s=e[r];for(const e in s)if("class"===e)n.class!==s.class&&(n.class=i([n.class,s.class]));else if("style"===e)n.style=t([n.style,s.style]);else if(b(e)){const t=n[e],r=s[e];!r||t===r||S(t)&&t.includes(r)||(n[e]=t?[].concat(t,r):r)}else""!==e&&(n[e]=s[e])}return n}function Ps(e,t,n,r=null){zt(e,t,7,[n,r])}const zs=Zr();let Bs=0;function Us(e,t,n){const r=e.type,s=(t?t.appContext:e.appContext)||zs,a={uid:Bs++,vnode:e,type:r,parent:t,appContext:s,root:null,next:null,subTree:null,effect:null,update:null,scope:new J(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(s.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:zr(r,s),emitsOptions:cn(r,s),emit:null,emitted:null,propsDefaults:d,inheritAttrs:r.inheritAttrs,ctx:d,data:d,props:d,attrs:d,slots:d,refs:d,setupState:d,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return a.ctx={_:a},a.root=t?t.root:a,a.emit=un.bind(null,a),e.ce&&e.ce(a),a}let Vs=null;const Ws=()=>Vs||pn,js=e=>{Vs=e,e.scope.on()},Gs=()=>{Vs&&Vs.scope.off(),Vs=null};function Hs(e){return 4&e.vnode.shapeFlag}let qs,Ks,Xs=!1;function Ys(e,t=!1){Xs=t;const{props:n,children:r}=e.vnode,s=Hs(e);Dr(e,n,s,t),Xr(e,r);const a=s?Zs(e,t):void 0;return Xs=!1,a}function Zs(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=kt(new Proxy(e.ctx,wr));const{setup:r}=n;if(r){const n=e.setupContext=r.length>1?ta(e):null;js(e),ge();const s=Pt(r,e,0,[e.props,n]);if(ye(),Gs(),R(s)){if(s.then(Gs,Gs),t)return s.then((n=>{Js(e,n,t)})).catch((t=>{Bt(t,e,0)}));e.asyncDep=s}else Js(e,s,t)}else Qs(e,t)}function Js(e,t,n){C(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:A(t)&&(e.setupState=Ft(t)),Qs(e,n)}function Qs(e,t,n){const r=e.type;if(!e.render){if(!t&&qs&&!r.render){const t=r.template||Tr(e).template;if(t){0;const{isCustomElement:n,compilerOptions:s}=e.appContext.config,{delimiters:a,compilerOptions:o}=r,i=w(w({isCustomElement:n,delimiters:a},s),o);r.render=qs(t,i)}}e.render=r.render||m,Ks&&Ks(e)}js(e),ge(),kr(e),ye(),Gs()}function ea(e){return new Proxy(e.attrs,{get(t,n){return be(e,"get","$attrs"),t[n]}})}function ta(e){const t=t=>{e.exposed=t||{}};let n;return{get attrs(){return n||(n=ea(e))},slots:e.slots,emit:e.emit,expose:t}}function na(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Ft(kt(e.exposed)),{get(t,n){return n in t?t[n]:n in br?br[n](e):void 0},has(e,t){return t in e||t in br}}))}function ra(e,t=!0){return C(e)?e.displayName||e.name:e.name||t&&e.__name}function sa(e){return C(e)&&"__vccOpts"in e}const aa=(e,t)=>Lt(e,t,Xs);function oa(e,t,n){const r=arguments.length;return 2===r?A(t)&&!S(t)?ks(t)?Es(e,null,[t]):Es(e,t):Es(e,null,t):(r>3?n=Array.prototype.slice.call(arguments,2):3===r&&ks(n)&&(n=[n]),Es(e,t,n))}const ia=Symbol(""),la=()=>{{const e=Nn(ia);return e}};const ua="3.2.45",ca="http://www.w3.org/2000/svg",ha="undefined"!==typeof document?document:null,pa=ha&&ha.createElement("template"),da={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,r)=>{const s=t?ha.createElementNS(ca,e):ha.createElement(e,n?{is:n}:void 0);return"select"===e&&r&&null!=r.multiple&&s.setAttribute("multiple",r.multiple),s},createText:e=>ha.createTextNode(e),createComment:e=>ha.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>ha.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,n,r,s,a){const o=n?n.previousSibling:t.lastChild;if(s&&(s===a||s.nextSibling)){while(1)if(t.insertBefore(s.cloneNode(!0),n),s===a||!(s=s.nextSibling))break}else{pa.innerHTML=r?`<svg>${e}</svg>`:e;const s=pa.content;if(r){const e=s.firstChild;while(e.firstChild)s.appendChild(e.firstChild);s.removeChild(e)}t.insertBefore(s,n)}return[o?o.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function fa(e,t,n){const r=e._vtc;r&&(t=(t?[t,...r]:[...r]).join(" ")),null==t?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function ma(e,t,n){const r=e.style,s=E(n);if(n&&!s){for(const e in n)ya(r,e,n[e]);if(t&&!E(t))for(const e in t)null==n[e]&&ya(r,e,"")}else{const a=r.display;s?t!==n&&(r.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(r.display=a)}}const ga=/\s*!important$/;function ya(e,t,n){if(S(n))n.forEach((n=>ya(e,t,n)));else if(null==n&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const r=wa(e,t);ga.test(n)?e.setProperty(V(r),n.replace(ga,""),"important"):e[r]=n}}const ba=["Webkit","Moz","ms"],xa={};function wa(e,t){const n=xa[t];if(n)return n;let r=B(t);if("filter"!==r&&r in e)return xa[t]=r;r=W(r);for(let s=0;s<ba.length;s++){const n=ba[s]+r;if(n in e)return xa[t]=n}return t}const va="http://www.w3.org/1999/xlink";function ka(e,t,n,r,s){if(r&&t.startsWith("xlink:"))null==n?e.removeAttributeNS(va,t.slice(6,t.length)):e.setAttributeNS(va,t,n);else{const r=u(t);null==n||r&&!c(n)?e.removeAttribute(t):e.setAttribute(t,r?"":n)}}function Ia(e,t,n,r,s,a,o){if("innerHTML"===t||"textContent"===t)return r&&o(r,s,a),void(e[t]=null==n?"":n);if("value"===t&&"PROGRESS"!==e.tagName&&!e.tagName.includes("-")){e._value=n;const r=null==n?"":n;return e.value===r&&"OPTION"!==e.tagName||(e.value=r),void(null==n&&e.removeAttribute(t))}let i=!1;if(""===n||null==n){const r=typeof e[t];"boolean"===r?n=c(n):null==n&&"string"===r?(n="",i=!0):"number"===r&&(n=0,i=!0)}try{e[t]=n}catch(l){0}i&&e.removeAttribute(t)}function Sa(e,t,n,r){e.addEventListener(t,n,r)}function Na(e,t,n,r){e.removeEventListener(t,n,r)}function Ta(e,t,n,r,s=null){const a=e._vei||(e._vei={}),o=a[t];if(r&&o)o.value=r;else{const[n,i]=Ea(t);if(r){const o=a[t]=Ma(r,s);Sa(e,n,o,i)}else o&&(Na(e,n,o,i),a[t]=void 0)}}const Ca=/(?:Once|Passive|Capture)$/;function Ea(e){let t;if(Ca.test(e)){let n;t={};while(n=e.match(Ca))e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}const n=":"===e[2]?e.slice(3):V(e.slice(2));return[n,t]}let $a=0;const Aa=Promise.resolve(),Ra=()=>$a||(Aa.then((()=>$a=0)),$a=Date.now());function Ma(e,t){const n=e=>{if(e._vts){if(e._vts<=n.attached)return}else e._vts=Date.now();zt(_a(e,n.value),t,5,[e])};return n.value=e,n.attached=Ra(),n}function _a(e,t){if(S(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map((e=>t=>!t._stopped&&e&&e(t)))}return t}const Fa=/^on[a-z]/,Da=(e,t,n,r,s=!1,a,o,i,l)=>{"class"===t?fa(e,r,s):"style"===t?ma(e,n,r):b(t)?x(t)||Ta(e,t,n,r,o):("."===t[0]?(t=t.slice(1),1):"^"===t[0]?(t=t.slice(1),0):Oa(e,t,r,s))?Ia(e,t,r,a,o,i,l):("true-value"===t?e._trueValue=r:"false-value"===t&&(e._falseValue=r),ka(e,t,r,s))};function Oa(e,t,n,r){return r?"innerHTML"===t||"textContent"===t||!!(t in e&&Fa.test(t)&&C(n)):"spellcheck"!==t&&"draggable"!==t&&"translate"!==t&&("form"!==t&&(("list"!==t||"INPUT"!==e.tagName)&&(("type"!==t||"TEXTAREA"!==e.tagName)&&((!Fa.test(t)||!E(n))&&t in e))))}"undefined"!==typeof HTMLElement&&HTMLElement;const La="transition",Pa="animation",za=(e,{slots:t})=>oa(Dn,Wa(e),t);za.displayName="Transition";const Ba={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Ua=(za.props=w({},Dn.props,Ba),(e,t=[])=>{S(e)?e.forEach((e=>e(...t))):e&&e(...t)}),Va=e=>!!e&&(S(e)?e.some((e=>e.length>1)):e.length>1);function Wa(e){const t={};for(const w in e)w in Ba||(t[w]=e[w]);if(!1===e.css)return t;const{name:n="v",type:r,duration:s,enterFromClass:a=`${n}-enter-from`,enterActiveClass:o=`${n}-enter-active`,enterToClass:i=`${n}-enter-to`,appearFromClass:l=a,appearActiveClass:u=o,appearToClass:c=i,leaveFromClass:h=`${n}-leave-from`,leaveActiveClass:p=`${n}-leave-active`,leaveToClass:d=`${n}-leave-to`}=e,f=ja(s),m=f&&f[0],g=f&&f[1],{onBeforeEnter:y,onEnter:b,onEnterCancelled:x,onLeave:v,onLeaveCancelled:k,onBeforeAppear:I=y,onAppear:S=b,onAppearCancelled:N=x}=t,T=(e,t,n)=>{qa(e,t?c:i),qa(e,t?u:o),n&&n()},C=(e,t)=>{e._isLeaving=!1,qa(e,h),qa(e,d),qa(e,p),t&&t()},E=e=>(t,n)=>{const s=e?S:b,o=()=>T(t,e,n);Ua(s,[t,o]),Ka((()=>{qa(t,e?l:a),Ha(t,e?c:i),Va(s)||Ya(t,r,m,o)}))};return w(t,{onBeforeEnter(e){Ua(y,[e]),Ha(e,a),Ha(e,o)},onBeforeAppear(e){Ua(I,[e]),Ha(e,l),Ha(e,u)},onEnter:E(!1),onAppear:E(!0),onLeave(e,t){e._isLeaving=!0;const n=()=>C(e,t);Ha(e,h),eo(),Ha(e,p),Ka((()=>{e._isLeaving&&(qa(e,h),Ha(e,d),Va(v)||Ya(e,r,g,n))})),Ua(v,[e,n])},onEnterCancelled(e){T(e,!1),Ua(x,[e])},onAppearCancelled(e){T(e,!0),Ua(N,[e])},onLeaveCancelled(e){C(e),Ua(k,[e])}})}function ja(e){if(null==e)return null;if(A(e))return[Ga(e.enter),Ga(e.leave)];{const t=Ga(e);return[t,t]}}function Ga(e){const t=K(e);return t}function Ha(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.add(t))),(e._vtc||(e._vtc=new Set)).add(t)}function qa(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.remove(t)));const{_vtc:n}=e;n&&(n.delete(t),n.size||(e._vtc=void 0))}function Ka(e){requestAnimationFrame((()=>{requestAnimationFrame(e)}))}let Xa=0;function Ya(e,t,n,r){const s=e._endId=++Xa,a=()=>{s===e._endId&&r()};if(n)return setTimeout(a,n);const{type:o,timeout:i,propCount:l}=Za(e,t);if(!o)return r();const u=o+"end";let c=0;const h=()=>{e.removeEventListener(u,p),a()},p=t=>{t.target===e&&++c>=l&&h()};setTimeout((()=>{c<l&&h()}),i+1),e.addEventListener(u,p)}function Za(e,t){const n=window.getComputedStyle(e),r=e=>(n[e]||"").split(", "),s=r(`${La}Delay`),a=r(`${La}Duration`),o=Ja(s,a),i=r(`${Pa}Delay`),l=r(`${Pa}Duration`),u=Ja(i,l);let c=null,h=0,p=0;t===La?o>0&&(c=La,h=o,p=a.length):t===Pa?u>0&&(c=Pa,h=u,p=l.length):(h=Math.max(o,u),c=h>0?o>u?La:Pa:null,p=c?c===La?a.length:l.length:0);const d=c===La&&/\b(transform|all)(,|$)/.test(r(`${La}Property`).toString());return{type:c,timeout:h,propCount:p,hasTransform:d}}function Ja(e,t){while(e.length<t.length)e=e.concat(e);return Math.max(...t.map(((t,n)=>Qa(t)+Qa(e[n]))))}function Qa(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function eo(){return document.body.offsetHeight}new WeakMap,new WeakMap;const to=w({patchProp:Da},da);let no;function ro(){return no||(no=rs(to))}const so=(...e)=>{const t=ro().createApp(...e);const{mount:n}=t;return t.mount=e=>{const r=ao(e);if(!r)return;const s=t._component;C(s)||s.render||s.template||(s.template=r.innerHTML),r.innerHTML="";const a=n(r,!1,r instanceof SVGElement);return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),a},t};function ao(e){if(E(e)){const t=document.querySelector(e);return t}return e}const oo={id:"app"};function io(e,t){const n=pr("router-view");return ms(),ws("div",oo,[Es(n)])}var lo=n(89);const uo={},co=(0,lo.Z)(uo,[["render",io]]);var ho=co;
/*!
  * vue-router v4.1.6
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */
const po="undefined"!==typeof window;function fo(e){return e.__esModule||"Module"===e[Symbol.toStringTag]}const mo=Object.assign;function go(e,t){const n={};for(const r in t){const s=t[r];n[r]=bo(s)?s.map(e):e(s)}return n}const yo=()=>{},bo=Array.isArray;const xo=/\/$/,wo=e=>e.replace(xo,"");function vo(e,t,n="/"){let r,s={},a="",o="";const i=t.indexOf("#");let l=t.indexOf("?");return i<l&&i>=0&&(l=-1),l>-1&&(r=t.slice(0,l),a=t.slice(l+1,i>-1?i:t.length),s=e(a)),i>-1&&(r=r||t.slice(0,i),o=t.slice(i,t.length)),r=$o(null!=r?r:t,n),{fullPath:r+(a&&"?")+a+o,path:r,query:s,hash:o}}function ko(e,t){const n=t.query?e(t.query):"";return t.path+(n&&"?")+n+(t.hash||"")}function Io(e,t){return t&&e.toLowerCase().startsWith(t.toLowerCase())?e.slice(t.length)||"/":e}function So(e,t,n){const r=t.matched.length-1,s=n.matched.length-1;return r>-1&&r===s&&No(t.matched[r],n.matched[s])&&To(t.params,n.params)&&e(t.query)===e(n.query)&&t.hash===n.hash}function No(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function To(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(!Co(e[n],t[n]))return!1;return!0}function Co(e,t){return bo(e)?Eo(e,t):bo(t)?Eo(t,e):e===t}function Eo(e,t){return bo(t)?e.length===t.length&&e.every(((e,n)=>e===t[n])):1===e.length&&e[0]===t}function $o(e,t){if(e.startsWith("/"))return e;if(!e)return t;const n=t.split("/"),r=e.split("/");let s,a,o=n.length-1;for(s=0;s<r.length;s++)if(a=r[s],"."!==a){if(".."!==a)break;o>1&&o--}return n.slice(0,o).join("/")+"/"+r.slice(s-(s===r.length?1:0)).join("/")}var Ao,Ro;(function(e){e["pop"]="pop",e["push"]="push"})(Ao||(Ao={})),function(e){e["back"]="back",e["forward"]="forward",e["unknown"]=""}(Ro||(Ro={}));function Mo(e){if(!e)if(po){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return"/"!==e[0]&&"#"!==e[0]&&(e="/"+e),wo(e)}const _o=/^[^#]+#/;function Fo(e,t){return e.replace(_o,"#")+t}function Do(e,t){const n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{behavior:t.behavior,left:r.left-n.left-(t.left||0),top:r.top-n.top-(t.top||0)}}const Oo=()=>({left:window.pageXOffset,top:window.pageYOffset});function Lo(e){let t;if("el"in e){const n=e.el,r="string"===typeof n&&n.startsWith("#");0;const s="string"===typeof n?r?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!s)return;t=Do(s,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(null!=t.left?t.left:window.pageXOffset,null!=t.top?t.top:window.pageYOffset)}function Po(e,t){const n=history.state?history.state.position-t:-1;return n+e}const zo=new Map;function Bo(e,t){zo.set(e,t)}function Uo(e){const t=zo.get(e);return zo.delete(e),t}let Vo=()=>location.protocol+"//"+location.host;function Wo(e,t){const{pathname:n,search:r,hash:s}=t,a=e.indexOf("#");if(a>-1){let t=s.includes(e.slice(a))?e.slice(a).length:1,n=s.slice(t);return"/"!==n[0]&&(n="/"+n),Io(n,"")}const o=Io(n,e);return o+r+s}function jo(e,t,n,r){let s=[],a=[],o=null;const i=({state:a})=>{const i=Wo(e,location),l=n.value,u=t.value;let c=0;if(a){if(n.value=i,t.value=a,o&&o===l)return void(o=null);c=u?a.position-u.position:0}else r(i);s.forEach((e=>{e(n.value,l,{delta:c,type:Ao.pop,direction:c?c>0?Ro.forward:Ro.back:Ro.unknown})}))};function l(){o=n.value}function u(e){s.push(e);const t=()=>{const t=s.indexOf(e);t>-1&&s.splice(t,1)};return a.push(t),t}function c(){const{history:e}=window;e.state&&e.replaceState(mo({},e.state,{scroll:Oo()}),"")}function h(){for(const e of a)e();a=[],window.removeEventListener("popstate",i),window.removeEventListener("beforeunload",c)}return window.addEventListener("popstate",i),window.addEventListener("beforeunload",c),{pauseListeners:l,listen:u,destroy:h}}function Go(e,t,n,r=!1,s=!1){return{back:e,current:t,forward:n,replaced:r,position:window.history.length,scroll:s?Oo():null}}function Ho(e){const{history:t,location:n}=window,r={value:Wo(e,n)},s={value:t.state};function a(r,a,o){const i=e.indexOf("#"),l=i>-1?(n.host&&document.querySelector("base")?e:e.slice(i))+r:Vo()+e+r;try{t[o?"replaceState":"pushState"](a,"",l),s.value=a}catch(u){console.error(u),n[o?"replace":"assign"](l)}}function o(e,n){const o=mo({},t.state,Go(s.value.back,e,s.value.forward,!0),n,{position:s.value.position});a(e,o,!0),r.value=e}function i(e,n){const o=mo({},s.value,t.state,{forward:e,scroll:Oo()});a(o.current,o,!0);const i=mo({},Go(r.value,e,null),{position:o.position+1},n);a(e,i,!1),r.value=e}return s.value||a(r.value,{back:null,current:r.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0),{location:r,state:s,push:i,replace:o}}function qo(e){e=Mo(e);const t=Ho(e),n=jo(e,t.state,t.location,t.replace);function r(e,t=!0){t||n.pauseListeners(),history.go(e)}const s=mo({location:"",base:e,go:r,createHref:Fo.bind(null,e)},t,n);return Object.defineProperty(s,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(s,"state",{enumerable:!0,get:()=>t.state.value}),s}function Ko(e){return e=location.host?e||location.pathname+location.search:"",e.includes("#")||(e+="#"),qo(e)}function Xo(e){return"string"===typeof e||e&&"object"===typeof e}function Yo(e){return"string"===typeof e||"symbol"===typeof e}const Zo={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},Jo=Symbol("");var Qo;(function(e){e[e["aborted"]=4]="aborted",e[e["cancelled"]=8]="cancelled",e[e["duplicated"]=16]="duplicated"})(Qo||(Qo={}));function ei(e,t){return mo(new Error,{type:e,[Jo]:!0},t)}function ti(e,t){return e instanceof Error&&Jo in e&&(null==t||!!(e.type&t))}const ni="[^/]+?",ri={sensitive:!1,strict:!1,start:!0,end:!0},si=/[.+*?^${}()[\]/\\]/g;function ai(e,t){const n=mo({},ri,t),r=[];let s=n.start?"^":"";const a=[];for(const c of e){const e=c.length?[]:[90];n.strict&&!c.length&&(s+="/");for(let t=0;t<c.length;t++){const r=c[t];let o=40+(n.sensitive?.25:0);if(0===r.type)t||(s+="/"),s+=r.value.replace(si,"\\$&"),o+=40;else if(1===r.type){const{value:e,repeatable:n,optional:i,regexp:l}=r;a.push({name:e,repeatable:n,optional:i});const h=l||ni;if(h!==ni){o+=10;try{new RegExp(`(${h})`)}catch(u){throw new Error(`Invalid custom RegExp for param "${e}" (${h}): `+u.message)}}let p=n?`((?:${h})(?:/(?:${h}))*)`:`(${h})`;t||(p=i&&c.length<2?`(?:/${p})`:"/"+p),i&&(p+="?"),s+=p,o+=20,i&&(o+=-8),n&&(o+=-20),".*"===h&&(o+=-50)}e.push(o)}r.push(e)}if(n.strict&&n.end){const e=r.length-1;r[e][r[e].length-1]+=.7000000000000001}n.strict||(s+="/?"),n.end?s+="$":n.strict&&(s+="(?:/|$)");const o=new RegExp(s,n.sensitive?"":"i");function i(e){const t=e.match(o),n={};if(!t)return null;for(let r=1;r<t.length;r++){const e=t[r]||"",s=a[r-1];n[s.name]=e&&s.repeatable?e.split("/"):e}return n}function l(t){let n="",r=!1;for(const s of e){r&&n.endsWith("/")||(n+="/"),r=!1;for(const e of s)if(0===e.type)n+=e.value;else if(1===e.type){const{value:a,repeatable:o,optional:i}=e,l=a in t?t[a]:"";if(bo(l)&&!o)throw new Error(`Provided param "${a}" is an array but it is not repeatable (* or + modifiers)`);const u=bo(l)?l.join("/"):l;if(!u){if(!i)throw new Error(`Missing required param "${a}"`);s.length<2&&(n.endsWith("/")?n=n.slice(0,-1):r=!0)}n+=u}}return n||"/"}return{re:o,score:r,keys:a,parse:i,stringify:l}}function oi(e,t){let n=0;while(n<e.length&&n<t.length){const r=t[n]-e[n];if(r)return r;n++}return e.length<t.length?1===e.length&&80===e[0]?-1:1:e.length>t.length?1===t.length&&80===t[0]?1:-1:0}function ii(e,t){let n=0;const r=e.score,s=t.score;while(n<r.length&&n<s.length){const e=oi(r[n],s[n]);if(e)return e;n++}if(1===Math.abs(s.length-r.length)){if(li(r))return 1;if(li(s))return-1}return s.length-r.length}function li(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const ui={type:0,value:""},ci=/[a-zA-Z0-9_]/;function hi(e){if(!e)return[[]];if("/"===e)return[[ui]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function t(e){throw new Error(`ERR (${n})/"${u}": ${e}`)}let n=0,r=n;const s=[];let a;function o(){a&&s.push(a),a=[]}let i,l=0,u="",c="";function h(){u&&(0===n?a.push({type:0,value:u}):1===n||2===n||3===n?(a.length>1&&("*"===i||"+"===i)&&t(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),a.push({type:1,value:u,regexp:c,repeatable:"*"===i||"+"===i,optional:"*"===i||"?"===i})):t("Invalid state to consume buffer"),u="")}function p(){u+=i}while(l<e.length)if(i=e[l++],"\\"!==i||2===n)switch(n){case 0:"/"===i?(u&&h(),o()):":"===i?(h(),n=1):p();break;case 4:p(),n=r;break;case 1:"("===i?n=2:ci.test(i)?p():(h(),n=0,"*"!==i&&"?"!==i&&"+"!==i&&l--);break;case 2:")"===i?"\\"==c[c.length-1]?c=c.slice(0,-1)+i:n=3:c+=i;break;case 3:h(),n=0,"*"!==i&&"?"!==i&&"+"!==i&&l--,c="";break;default:t("Unknown state");break}else r=n,n=4;return 2===n&&t(`Unfinished custom RegExp for param "${u}"`),h(),o(),s}function pi(e,t,n){const r=ai(hi(e.path),n);const s=mo(r,{record:e,parent:t,children:[],alias:[]});return t&&!s.record.aliasOf===!t.record.aliasOf&&t.children.push(s),s}function di(e,t){const n=[],r=new Map;function s(e){return r.get(e)}function a(e,n,r){const s=!r,i=mi(e);i.aliasOf=r&&r.record;const u=xi(t,e),c=[i];if("alias"in e){const t="string"===typeof e.alias?[e.alias]:e.alias;for(const e of t)c.push(mo({},i,{components:r?r.record.components:i.components,path:e,aliasOf:r?r.record:i}))}let h,p;for(const t of c){const{path:c}=t;if(n&&"/"!==c[0]){const e=n.record.path,r="/"===e[e.length-1]?"":"/";t.path=n.record.path+(c&&r+c)}if(h=pi(t,n,u),r?r.alias.push(h):(p=p||h,p!==h&&p.alias.push(h),s&&e.name&&!yi(h)&&o(e.name)),i.children){const e=i.children;for(let t=0;t<e.length;t++)a(e[t],h,r&&r.children[t])}r=r||h,(h.record.components&&Object.keys(h.record.components).length||h.record.name||h.record.redirect)&&l(h)}return p?()=>{o(p)}:yo}function o(e){if(Yo(e)){const t=r.get(e);t&&(r.delete(e),n.splice(n.indexOf(t),1),t.children.forEach(o),t.alias.forEach(o))}else{const t=n.indexOf(e);t>-1&&(n.splice(t,1),e.record.name&&r.delete(e.record.name),e.children.forEach(o),e.alias.forEach(o))}}function i(){return n}function l(e){let t=0;while(t<n.length&&ii(e,n[t])>=0&&(e.record.path!==n[t].record.path||!wi(e,n[t])))t++;n.splice(t,0,e),e.record.name&&!yi(e)&&r.set(e.record.name,e)}function u(e,t){let s,a,o,i={};if("name"in e&&e.name){if(s=r.get(e.name),!s)throw ei(1,{location:e});0,o=s.record.name,i=mo(fi(t.params,s.keys.filter((e=>!e.optional)).map((e=>e.name))),e.params&&fi(e.params,s.keys.map((e=>e.name)))),a=s.stringify(i)}else if("path"in e)a=e.path,s=n.find((e=>e.re.test(a))),s&&(i=s.parse(a),o=s.record.name);else{if(s=t.name?r.get(t.name):n.find((e=>e.re.test(t.path))),!s)throw ei(1,{location:e,currentLocation:t});o=s.record.name,i=mo({},t.params,e.params),a=s.stringify(i)}const l=[];let u=s;while(u)l.unshift(u.record),u=u.parent;return{name:o,path:a,params:i,matched:l,meta:bi(l)}}return t=xi({strict:!1,end:!0,sensitive:!1},t),e.forEach((e=>a(e))),{addRoute:a,resolve:u,removeRoute:o,getRoutes:i,getRecordMatcher:s}}function fi(e,t){const n={};for(const r of t)r in e&&(n[r]=e[r]);return n}function mi(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:gi(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}}}function gi(e){const t={},n=e.props||!1;if("component"in e)t.default=n;else for(const r in e.components)t[r]="boolean"===typeof n?n:n[r];return t}function yi(e){while(e){if(e.record.aliasOf)return!0;e=e.parent}return!1}function bi(e){return e.reduce(((e,t)=>mo(e,t.meta)),{})}function xi(e,t){const n={};for(const r in e)n[r]=r in t?t[r]:e[r];return n}function wi(e,t){return t.children.some((t=>t===e||wi(e,t)))}const vi=/#/g,ki=/&/g,Ii=/\//g,Si=/=/g,Ni=/\?/g,Ti=/\+/g,Ci=/%5B/g,Ei=/%5D/g,$i=/%5E/g,Ai=/%60/g,Ri=/%7B/g,Mi=/%7C/g,_i=/%7D/g,Fi=/%20/g;function Di(e){return encodeURI(""+e).replace(Mi,"|").replace(Ci,"[").replace(Ei,"]")}function Oi(e){return Di(e).replace(Ri,"{").replace(_i,"}").replace($i,"^")}function Li(e){return Di(e).replace(Ti,"%2B").replace(Fi,"+").replace(vi,"%23").replace(ki,"%26").replace(Ai,"`").replace(Ri,"{").replace(_i,"}").replace($i,"^")}function Pi(e){return Li(e).replace(Si,"%3D")}function zi(e){return Di(e).replace(vi,"%23").replace(Ni,"%3F")}function Bi(e){return null==e?"":zi(e).replace(Ii,"%2F")}function Ui(e){try{return decodeURIComponent(""+e)}catch(t){}return""+e}function Vi(e){const t={};if(""===e||"?"===e)return t;const n="?"===e[0],r=(n?e.slice(1):e).split("&");for(let s=0;s<r.length;++s){const e=r[s].replace(Ti," "),n=e.indexOf("="),a=Ui(n<0?e:e.slice(0,n)),o=n<0?null:Ui(e.slice(n+1));if(a in t){let e=t[a];bo(e)||(e=t[a]=[e]),e.push(o)}else t[a]=o}return t}function Wi(e){let t="";for(let n in e){const r=e[n];if(n=Pi(n),null==r){void 0!==r&&(t+=(t.length?"&":"")+n);continue}const s=bo(r)?r.map((e=>e&&Li(e))):[r&&Li(r)];s.forEach((e=>{void 0!==e&&(t+=(t.length?"&":"")+n,null!=e&&(t+="="+e))}))}return t}function ji(e){const t={};for(const n in e){const r=e[n];void 0!==r&&(t[n]=bo(r)?r.map((e=>null==e?null:""+e)):null==r?r:""+r)}return t}const Gi=Symbol(""),Hi=Symbol(""),qi=Symbol(""),Ki=Symbol(""),Xi=Symbol("");function Yi(){let e=[];function t(t){return e.push(t),()=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)}}function n(){e=[]}return{add:t,list:()=>e,reset:n}}function Zi(e,t,n,r,s){const a=r&&(r.enterCallbacks[s]=r.enterCallbacks[s]||[]);return()=>new Promise(((o,i)=>{const l=e=>{!1===e?i(ei(4,{from:n,to:t})):e instanceof Error?i(e):Xo(e)?i(ei(2,{from:t,to:e})):(a&&r.enterCallbacks[s]===a&&"function"===typeof e&&a.push(e),o())},u=e.call(r&&r.instances[s],t,n,l);let c=Promise.resolve(u);e.length<3&&(c=c.then(l)),c.catch((e=>i(e)))}))}function Ji(e,t,n,r){const s=[];for(const a of e){0;for(const e in a.components){let o=a.components[e];if("beforeRouteEnter"===t||a.instances[e])if(Qi(o)){const i=o.__vccOpts||o,l=i[t];l&&s.push(Zi(l,n,r,a,e))}else{let i=o();0,s.push((()=>i.then((s=>{if(!s)return Promise.reject(new Error(`Couldn't resolve component "${e}" at "${a.path}"`));const o=fo(s)?s.default:s;a.components[e]=o;const i=o.__vccOpts||o,l=i[t];return l&&Zi(l,n,r,a,e)()}))))}}}return s}function Qi(e){return"object"===typeof e||"displayName"in e||"props"in e||"__vccOpts"in e}function el(e){const t=Nn(qi),n=Nn(Ki),r=aa((()=>t.resolve(Mt(e.to)))),s=aa((()=>{const{matched:e}=r.value,{length:t}=e,s=e[t-1],a=n.matched;if(!s||!a.length)return-1;const o=a.findIndex(No.bind(null,s));if(o>-1)return o;const i=al(e[t-2]);return t>1&&al(s)===i&&a[a.length-1].path!==i?a.findIndex(No.bind(null,e[t-2])):o})),a=aa((()=>s.value>-1&&sl(n.params,r.value.params))),o=aa((()=>s.value>-1&&s.value===n.matched.length-1&&To(n.params,r.value.params)));function i(n={}){return rl(n)?t[Mt(e.replace)?"replace":"push"](Mt(e.to)).catch(yo):Promise.resolve()}return{route:r,href:aa((()=>r.value.href)),isActive:a,isExactActive:o,navigate:i}}const tl=Vn({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:el,setup(e,{slots:t}){const n=dt(el(e)),{options:r}=Nn(qi),s=aa((()=>({[ol(e.activeClass,r.linkActiveClass,"router-link-active")]:n.isActive,[ol(e.exactActiveClass,r.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive})));return()=>{const r=t.default&&t.default(n);return e.custom?r:oa("a",{"aria-current":n.isExactActive?e.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:s.value},r)}}}),nl=tl;function rl(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&(void 0===e.button||0===e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function sl(e,t){for(const n in t){const r=t[n],s=e[n];if("string"===typeof r){if(r!==s)return!1}else if(!bo(s)||s.length!==r.length||r.some(((e,t)=>e!==s[t])))return!1}return!0}function al(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const ol=(e,t,n)=>null!=e?e:null!=t?t:n,il=Vn({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:n}){const r=Nn(Xi),s=aa((()=>e.route||r.value)),a=Nn(Hi,0),o=aa((()=>{let e=Mt(a);const{matched:t}=s.value;let n;while((n=t[e])&&!n.components)e++;return e})),i=aa((()=>s.value.matched[o.value]));Sn(Hi,aa((()=>o.value+1))),Sn(Gi,i),Sn(Xi,s);const l=Et();return Cn((()=>[l.value,i.value,e.name]),(([e,t,n],[r,s,a])=>{t&&(t.instances[n]=e,s&&s!==t&&e&&e===r&&(t.leaveGuards.size||(t.leaveGuards=s.leaveGuards),t.updateGuards.size||(t.updateGuards=s.updateGuards))),!e||!t||s&&No(t,s)&&r||(t.enterCallbacks[n]||[]).forEach((t=>t(e)))}),{flush:"post"}),()=>{const r=s.value,a=e.name,o=i.value,u=o&&o.components[a];if(!u)return ll(n.default,{Component:u,route:r});const c=o.props[a],h=c?!0===c?r.params:"function"===typeof c?c(r):c:null,p=e=>{e.component.isUnmounted&&(o.instances[a]=null)},d=oa(u,mo({},h,t,{onVnodeUnmounted:p,ref:l}));return ll(n.default,{Component:d,route:r})||d}}});function ll(e,t){if(!e)return null;const n=e(t);return 1===n.length?n[0]:n}const ul=il;function cl(e){const t=di(e.routes,e),n=e.parseQuery||Vi,r=e.stringifyQuery||Wi,s=e.history;const a=Yi(),o=Yi(),i=Yi(),l=$t(Zo);let u=Zo;po&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const c=go.bind(null,(e=>""+e)),h=go.bind(null,Bi),p=go.bind(null,Ui);function d(e,n){let r,s;return Yo(e)?(r=t.getRecordMatcher(e),s=n):s=e,t.addRoute(s,r)}function f(e){const n=t.getRecordMatcher(e);n&&t.removeRoute(n)}function m(){return t.getRoutes().map((e=>e.record))}function g(e){return!!t.getRecordMatcher(e)}function y(e,a){if(a=mo({},a||l.value),"string"===typeof e){const r=vo(n,e,a.path),o=t.resolve({path:r.path},a),i=s.createHref(r.fullPath);return mo(r,o,{params:p(o.params),hash:Ui(r.hash),redirectedFrom:void 0,href:i})}let o;if("path"in e)o=mo({},e,{path:vo(n,e.path,a.path).path});else{const t=mo({},e.params);for(const e in t)null==t[e]&&delete t[e];o=mo({},e,{params:h(e.params)}),a.params=h(a.params)}const i=t.resolve(o,a),u=e.hash||"";i.params=c(p(i.params));const d=ko(r,mo({},e,{hash:Oi(u),path:i.path})),f=s.createHref(d);return mo({fullPath:d,hash:u,query:r===Wi?ji(e.query):e.query||{}},i,{redirectedFrom:void 0,href:f})}function b(e){return"string"===typeof e?vo(n,e,l.value.path):mo({},e)}function x(e,t){if(u!==e)return ei(8,{from:t,to:e})}function w(e){return I(e)}function v(e){return w(mo(b(e),{replace:!0}))}function k(e){const t=e.matched[e.matched.length-1];if(t&&t.redirect){const{redirect:n}=t;let r="function"===typeof n?n(e):n;return"string"===typeof r&&(r=r.includes("?")||r.includes("#")?r=b(r):{path:r},r.params={}),mo({query:e.query,hash:e.hash,params:"path"in r?{}:e.params},r)}}function I(e,t){const n=u=y(e),s=l.value,a=e.state,o=e.force,i=!0===e.replace,c=k(n);if(c)return I(mo(b(c),{state:"object"===typeof c?mo({},a,c.state):a,force:o,replace:i}),t||n);const h=n;let p;return h.redirectedFrom=t,!o&&So(r,s,n)&&(p=ei(16,{to:h,from:s}),O(s,s,!0,!1)),(p?Promise.resolve(p):N(h,s)).catch((e=>ti(e)?ti(e,2)?e:D(e):_(e,h,s))).then((e=>{if(e){if(ti(e,2))return I(mo({replace:i},b(e.to),{state:"object"===typeof e.to?mo({},a,e.to.state):a,force:o}),t||h)}else e=C(h,s,!0,i,a);return T(h,s,e),e}))}function S(e,t){const n=x(e,t);return n?Promise.reject(n):Promise.resolve()}function N(e,t){let n;const[r,s,i]=pl(e,t);n=Ji(r.reverse(),"beforeRouteLeave",e,t);for(const a of r)a.leaveGuards.forEach((r=>{n.push(Zi(r,e,t))}));const l=S.bind(null,e,t);return n.push(l),hl(n).then((()=>{n=[];for(const r of a.list())n.push(Zi(r,e,t));return n.push(l),hl(n)})).then((()=>{n=Ji(s,"beforeRouteUpdate",e,t);for(const r of s)r.updateGuards.forEach((r=>{n.push(Zi(r,e,t))}));return n.push(l),hl(n)})).then((()=>{n=[];for(const r of e.matched)if(r.beforeEnter&&!t.matched.includes(r))if(bo(r.beforeEnter))for(const s of r.beforeEnter)n.push(Zi(s,e,t));else n.push(Zi(r.beforeEnter,e,t));return n.push(l),hl(n)})).then((()=>(e.matched.forEach((e=>e.enterCallbacks={})),n=Ji(i,"beforeRouteEnter",e,t),n.push(l),hl(n)))).then((()=>{n=[];for(const r of o.list())n.push(Zi(r,e,t));return n.push(l),hl(n)})).catch((e=>ti(e,8)?e:Promise.reject(e)))}function T(e,t,n){for(const r of i.list())r(e,t,n)}function C(e,t,n,r,a){const o=x(e,t);if(o)return o;const i=t===Zo,u=po?history.state:{};n&&(r||i?s.replace(e.fullPath,mo({scroll:i&&u&&u.scroll},a)):s.push(e.fullPath,a)),l.value=e,O(e,t,n,i),D()}let E;function $(){E||(E=s.listen(((e,t,n)=>{if(!B.listening)return;const r=y(e),a=k(r);if(a)return void I(mo(a,{replace:!0}),r).catch(yo);u=r;const o=l.value;po&&Bo(Po(o.fullPath,n.delta),Oo()),N(r,o).catch((e=>ti(e,12)?e:ti(e,2)?(I(e.to,r).then((e=>{ti(e,20)&&!n.delta&&n.type===Ao.pop&&s.go(-1,!1)})).catch(yo),Promise.reject()):(n.delta&&s.go(-n.delta,!1),_(e,r,o)))).then((e=>{e=e||C(r,o,!1),e&&(n.delta&&!ti(e,8)?s.go(-n.delta,!1):n.type===Ao.pop&&ti(e,20)&&s.go(-1,!1)),T(r,o,e)})).catch(yo)})))}let A,R=Yi(),M=Yi();function _(e,t,n){D(e);const r=M.list();return r.length?r.forEach((r=>r(e,t,n))):console.error(e),Promise.reject(e)}function F(){return A&&l.value!==Zo?Promise.resolve():new Promise(((e,t)=>{R.add([e,t])}))}function D(e){return A||(A=!e,$(),R.list().forEach((([t,n])=>e?n(e):t())),R.reset()),e}function O(t,n,r,s){const{scrollBehavior:a}=e;if(!po||!a)return Promise.resolve();const o=!r&&Uo(Po(t.fullPath,0))||(s||!r)&&history.state&&history.state.scroll||null;return Zt().then((()=>a(t,n,o))).then((e=>e&&Lo(e))).catch((e=>_(e,t,n)))}const L=e=>s.go(e);let P;const z=new Set,B={currentRoute:l,listening:!0,addRoute:d,removeRoute:f,hasRoute:g,getRoutes:m,resolve:y,options:e,push:w,replace:v,go:L,back:()=>L(-1),forward:()=>L(1),beforeEach:a.add,beforeResolve:o.add,afterEach:i.add,onError:M.add,isReady:F,install(e){const t=this;e.component("RouterLink",nl),e.component("RouterView",ul),e.config.globalProperties.$router=t,Object.defineProperty(e.config.globalProperties,"$route",{enumerable:!0,get:()=>Mt(l)}),po&&!P&&l.value===Zo&&(P=!0,w(s.location).catch((e=>{0})));const n={};for(const s in Zo)n[s]=aa((()=>l.value[s]));e.provide(qi,t),e.provide(Ki,dt(n)),e.provide(Xi,l);const r=e.unmount;z.add(e),e.unmount=function(){z.delete(e),z.size<1&&(u=Zo,E&&E(),E=null,l.value=Zo,P=!1,A=!1),r()}}};return B}function hl(e){return e.reduce(((e,t)=>e.then((()=>t()))),Promise.resolve())}function pl(e,t){const n=[],r=[],s=[],a=Math.max(t.matched.length,e.matched.length);for(let o=0;o<a;o++){const a=t.matched[o];a&&(e.matched.find((e=>No(e,a)))?r.push(a):n.push(a));const i=e.matched[o];i&&(t.matched.find((e=>No(e,i)))||s.push(i))}return[n,r,s]}const dl={id:"app"},fl={class:"container"},ml={class:"tableHeaderRow"},gl={colspan:"3",class:"tableHeader"},yl=Cs("tr",{class:"headerRow"},[Cs("td",null,"Idx"),Cs("td",null,"Target image name"),Cs("td",null,"Image preview")],-1),bl={class:"cDataImg"},xl=["src"],wl={class:"compileBtnRow"},vl={colspan:"3"},kl=["onClick"],Il={key:0};function Sl(e,t,n,r,s,a){return ms(),ws("div",dl,[Cs("div",fl,[Cs("button",{onClick:t[0]||(t[0]=e=>a.GetTargetImages()),class:i({"pure-button":!0,"pure-button-disabled":s.isCompiling}),id:"refreshBtn"},"Refresh data",2),(ms(!0),ws(us,null,gr(s.scenesTargetsData,((e,t,n)=>(ms(),ws("div",{class:"tableDiv",key:n},[Cs("table",null,[Cs("tr",ml,[Cs("td",gl," Scene index: "+h(t),1)]),yl,(ms(!0),ws(us,null,gr(e,((e,t)=>(ms(),ws("tr",{class:"dataRow",key:t},[Cs("td",null,h(t),1),Cs("td",null,h(e.name),1),Cs("td",bl,[Cs("img",{src:e.src,alt:"Alternate Text"},null,8,xl)])])))),128)),Cs("tr",wl,[Cs("td",vl,[Cs("button",{class:i({"pure-button":!0,"pure-button-disabled":s.isCompiling}),id:"compileBtn",onClick:n=>a.Compile(t,e)},"Compile .mind file for scene "+h(t),11,kl),s.scenesInfo[t]?(ms(),ws("label",Il,h(s.scenesInfo[t]),1)):_s("",!0)])])])])))),128))])])}n(4200);function Nl(e,t){return function(){return e.apply(t,arguments)}}const{toString:Tl}=Object.prototype,{getPrototypeOf:Cl}=Object,El=(e=>t=>{const n=Tl.call(t);return e[n]||(e[n]=n.slice(8,-1).toLowerCase())})(Object.create(null)),$l=e=>(e=e.toLowerCase(),t=>El(t)===e),Al=e=>t=>typeof t===e,{isArray:Rl}=Array,Ml=Al("undefined");function _l(e){return null!==e&&!Ml(e)&&null!==e.constructor&&!Ml(e.constructor)&&Ll(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}const Fl=$l("ArrayBuffer");function Dl(e){let t;return t="undefined"!==typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&Fl(e.buffer),t}const Ol=Al("string"),Ll=Al("function"),Pl=Al("number"),zl=e=>null!==e&&"object"===typeof e,Bl=e=>!0===e||!1===e,Ul=e=>{if("object"!==El(e))return!1;const t=Cl(e);return(null===t||t===Object.prototype||null===Object.getPrototypeOf(t))&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},Vl=$l("Date"),Wl=$l("File"),jl=$l("Blob"),Gl=$l("FileList"),Hl=e=>zl(e)&&Ll(e.pipe),ql=e=>{const t="[object FormData]";return e&&("function"===typeof FormData&&e instanceof FormData||Tl.call(e)===t||Ll(e.toString)&&e.toString()===t)},Kl=$l("URLSearchParams"),Xl=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function Yl(e,t,{allOwnKeys:n=!1}={}){if(null===e||"undefined"===typeof e)return;let r,s;if("object"!==typeof e&&(e=[e]),Rl(e))for(r=0,s=e.length;r<s;r++)t.call(null,e[r],r,e);else{const s=n?Object.getOwnPropertyNames(e):Object.keys(e),a=s.length;let o;for(r=0;r<a;r++)o=s[r],t.call(null,e[o],o,e)}}function Zl(e,t){t=t.toLowerCase();const n=Object.keys(e);let r,s=n.length;while(s-- >0)if(r=n[s],t===r.toLowerCase())return r;return null}const Jl="undefined"===typeof self?"undefined"===typeof global?void 0:global:self,Ql=e=>!Ml(e)&&e!==Jl;function eu(){const{caseless:e}=Ql(this)&&this||{},t={},n=(n,r)=>{const s=e&&Zl(t,r)||r;Ul(t[s])&&Ul(n)?t[s]=eu(t[s],n):Ul(n)?t[s]=eu({},n):Rl(n)?t[s]=n.slice():t[s]=n};for(let r=0,s=arguments.length;r<s;r++)arguments[r]&&Yl(arguments[r],n);return t}const tu=(e,t,n,{allOwnKeys:r}={})=>(Yl(t,((t,r)=>{n&&Ll(t)?e[r]=Nl(t,n):e[r]=t}),{allOwnKeys:r}),e),nu=e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),ru=(e,t,n,r)=>{e.prototype=Object.create(t.prototype,r),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),n&&Object.assign(e.prototype,n)},su=(e,t,n,r)=>{let s,a,o;const i={};if(t=t||{},null==e)return t;do{s=Object.getOwnPropertyNames(e),a=s.length;while(a-- >0)o=s[a],r&&!r(o,e,t)||i[o]||(t[o]=e[o],i[o]=!0);e=!1!==n&&Cl(e)}while(e&&(!n||n(e,t))&&e!==Object.prototype);return t},au=(e,t,n)=>{e=String(e),(void 0===n||n>e.length)&&(n=e.length),n-=t.length;const r=e.indexOf(t,n);return-1!==r&&r===n},ou=e=>{if(!e)return null;if(Rl(e))return e;let t=e.length;if(!Pl(t))return null;const n=new Array(t);while(t-- >0)n[t]=e[t];return n},iu=(e=>t=>e&&t instanceof e)("undefined"!==typeof Uint8Array&&Cl(Uint8Array)),lu=(e,t)=>{const n=e&&e[Symbol.iterator],r=n.call(e);let s;while((s=r.next())&&!s.done){const n=s.value;t.call(e,n[0],n[1])}},uu=(e,t)=>{let n;const r=[];while(null!==(n=e.exec(t)))r.push(n);return r},cu=$l("HTMLFormElement"),hu=e=>e.toLowerCase().replace(/[_-\s]([a-z\d])(\w*)/g,(function(e,t,n){return t.toUpperCase()+n})),pu=(({hasOwnProperty:e})=>(t,n)=>e.call(t,n))(Object.prototype),du=$l("RegExp"),fu=(e,t)=>{const n=Object.getOwnPropertyDescriptors(e),r={};Yl(n,((n,s)=>{!1!==t(n,s,e)&&(r[s]=n)})),Object.defineProperties(e,r)},mu=e=>{fu(e,((t,n)=>{if(Ll(e)&&-1!==["arguments","caller","callee"].indexOf(n))return!1;const r=e[n];Ll(r)&&(t.enumerable=!1,"writable"in t?t.writable=!1:t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+n+"'")}))}))},gu=(e,t)=>{const n={},r=e=>{e.forEach((e=>{n[e]=!0}))};return Rl(e)?r(e):r(String(e).split(t)),n},yu=()=>{},bu=(e,t)=>(e=+e,Number.isFinite(e)?e:t),xu=e=>{const t=new Array(10),n=(e,r)=>{if(zl(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[r]=e;const s=Rl(e)?[]:{};return Yl(e,((e,t)=>{const a=n(e,r+1);!Ml(a)&&(s[t]=a)})),t[r]=void 0,s}}return e};return n(e,0)};var wu={isArray:Rl,isArrayBuffer:Fl,isBuffer:_l,isFormData:ql,isArrayBufferView:Dl,isString:Ol,isNumber:Pl,isBoolean:Bl,isObject:zl,isPlainObject:Ul,isUndefined:Ml,isDate:Vl,isFile:Wl,isBlob:jl,isRegExp:du,isFunction:Ll,isStream:Hl,isURLSearchParams:Kl,isTypedArray:iu,isFileList:Gl,forEach:Yl,merge:eu,extend:tu,trim:Xl,stripBOM:nu,inherits:ru,toFlatObject:su,kindOf:El,kindOfTest:$l,endsWith:au,toArray:ou,forEachEntry:lu,matchAll:uu,isHTMLForm:cu,hasOwnProperty:pu,hasOwnProp:pu,reduceDescriptors:fu,freezeMethods:mu,toObjectSet:gu,toCamelCase:hu,noop:yu,toFiniteNumber:bu,findKey:Zl,global:Jl,isContextDefined:Ql,toJSONObject:xu};function vu(e,t,n,r,s){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name="AxiosError",t&&(this.code=t),n&&(this.config=n),r&&(this.request=r),s&&(this.response=s)}wu.inherits(vu,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:wu.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const ku=vu.prototype,Iu={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((e=>{Iu[e]={value:e}})),Object.defineProperties(vu,Iu),Object.defineProperty(ku,"isAxiosError",{value:!0}),vu.from=(e,t,n,r,s,a)=>{const o=Object.create(ku);return wu.toFlatObject(e,o,(function(e){return e!==Error.prototype}),(e=>"isAxiosError"!==e)),vu.call(o,e.message,t,n,r,s),o.cause=e,o.name=e.name,a&&Object.assign(o,a),o};var Su=vu,Nu=n(9373),Tu=Nu;function Cu(e){return wu.isPlainObject(e)||wu.isArray(e)}function Eu(e){return wu.endsWith(e,"[]")?e.slice(0,-2):e}function $u(e,t,n){return e?e.concat(t).map((function(e,t){return e=Eu(e),!n&&t?"["+e+"]":e})).join(n?".":""):t}function Au(e){return wu.isArray(e)&&!e.some(Cu)}const Ru=wu.toFlatObject(wu,{},null,(function(e){return/^is[A-Z]/.test(e)}));function Mu(e){return e&&wu.isFunction(e.append)&&"FormData"===e[Symbol.toStringTag]&&e[Symbol.iterator]}function _u(e,t,n){if(!wu.isObject(e))throw new TypeError("target must be an object");t=t||new(Tu||FormData),n=wu.toFlatObject(n,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!wu.isUndefined(t[e])}));const r=n.metaTokens,s=n.visitor||c,a=n.dots,o=n.indexes,i=n.Blob||"undefined"!==typeof Blob&&Blob,l=i&&Mu(t);if(!wu.isFunction(s))throw new TypeError("visitor must be a function");function u(e){if(null===e)return"";if(wu.isDate(e))return e.toISOString();if(!l&&wu.isBlob(e))throw new Su("Blob is not supported. Use a Buffer instead.");return wu.isArrayBuffer(e)||wu.isTypedArray(e)?l&&"function"===typeof Blob?new Blob([e]):Buffer.from(e):e}function c(e,n,s){let i=e;if(e&&!s&&"object"===typeof e)if(wu.endsWith(n,"{}"))n=r?n:n.slice(0,-2),e=JSON.stringify(e);else if(wu.isArray(e)&&Au(e)||wu.isFileList(e)||wu.endsWith(n,"[]")&&(i=wu.toArray(e)))return n=Eu(n),i.forEach((function(e,r){!wu.isUndefined(e)&&null!==e&&t.append(!0===o?$u([n],r,a):null===o?n:n+"[]",u(e))})),!1;return!!Cu(e)||(t.append($u(s,n,a),u(e)),!1)}const h=[],p=Object.assign(Ru,{defaultVisitor:c,convertValue:u,isVisitable:Cu});function d(e,n){if(!wu.isUndefined(e)){if(-1!==h.indexOf(e))throw Error("Circular reference detected in "+n.join("."));h.push(e),wu.forEach(e,(function(e,r){const a=!(wu.isUndefined(e)||null===e)&&s.call(t,e,wu.isString(r)?r.trim():r,n,p);!0===a&&d(e,n?n.concat(r):[r])})),h.pop()}}if(!wu.isObject(e))throw new TypeError("data must be an object");return d(e),t}var Fu=_u;function Du(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function Ou(e,t){this._pairs=[],e&&Fu(e,this,t)}const Lu=Ou.prototype;Lu.append=function(e,t){this._pairs.push([e,t])},Lu.toString=function(e){const t=e?function(t){return e.call(this,t,Du)}:Du;return this._pairs.map((function(e){return t(e[0])+"="+t(e[1])}),"").join("&")};var Pu=Ou;function zu(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function Bu(e,t,n){if(!t)return e;const r=n&&n.encode||zu,s=n&&n.serialize;let a;if(a=s?s(t,n):wu.isURLSearchParams(t)?t.toString():new Pu(t,n).toString(r),a){const t=e.indexOf("#");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf("?")?"?":"&")+a}return e}class Uu{constructor(){this.handlers=[]}use(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){wu.forEach(this.handlers,(function(t){null!==t&&e(t)}))}}var Vu=Uu,Wu={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},ju="undefined"!==typeof URLSearchParams?URLSearchParams:Pu,Gu=FormData;const Hu=(()=>{let e;return("undefined"===typeof navigator||"ReactNative"!==(e=navigator.product)&&"NativeScript"!==e&&"NS"!==e)&&("undefined"!==typeof window&&"undefined"!==typeof document)})(),qu=(()=>"undefined"!==typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"===typeof self.importScripts)();var Ku={isBrowser:!0,classes:{URLSearchParams:ju,FormData:Gu,Blob:Blob},isStandardBrowserEnv:Hu,isStandardBrowserWebWorkerEnv:qu,protocols:["http","https","file","blob","url","data"]};function Xu(e,t){return Fu(e,new Ku.classes.URLSearchParams,Object.assign({visitor:function(e,t,n,r){return Ku.isNode&&wu.isBuffer(e)?(this.append(t,e.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},t))}function Yu(e){return wu.matchAll(/\w+|\[(\w*)]/g,e).map((e=>"[]"===e[0]?"":e[1]||e[0]))}function Zu(e){const t={},n=Object.keys(e);let r;const s=n.length;let a;for(r=0;r<s;r++)a=n[r],t[a]=e[a];return t}function Ju(e){function t(e,n,r,s){let a=e[s++];const o=Number.isFinite(+a),i=s>=e.length;if(a=!a&&wu.isArray(r)?r.length:a,i)return wu.hasOwnProp(r,a)?r[a]=[r[a],n]:r[a]=n,!o;r[a]&&wu.isObject(r[a])||(r[a]=[]);const l=t(e,n,r[a],s);return l&&wu.isArray(r[a])&&(r[a]=Zu(r[a])),!o}if(wu.isFormData(e)&&wu.isFunction(e.entries)){const n={};return wu.forEachEntry(e,((e,r)=>{t(Yu(e),r,n,0)})),n}return null}var Qu=Ju;const ec={"Content-Type":void 0};function tc(e,t,n){if(wu.isString(e))try{return(t||JSON.parse)(e),wu.trim(e)}catch(r){if("SyntaxError"!==r.name)throw r}return(n||JSON.stringify)(e)}const nc={transitional:Wu,adapter:["xhr","http"],transformRequest:[function(e,t){const n=t.getContentType()||"",r=n.indexOf("application/json")>-1,s=wu.isObject(e);s&&wu.isHTMLForm(e)&&(e=new FormData(e));const a=wu.isFormData(e);if(a)return r&&r?JSON.stringify(Qu(e)):e;if(wu.isArrayBuffer(e)||wu.isBuffer(e)||wu.isStream(e)||wu.isFile(e)||wu.isBlob(e))return e;if(wu.isArrayBufferView(e))return e.buffer;if(wu.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let o;if(s){if(n.indexOf("application/x-www-form-urlencoded")>-1)return Xu(e,this.formSerializer).toString();if((o=wu.isFileList(e))||n.indexOf("multipart/form-data")>-1){const t=this.env&&this.env.FormData;return Fu(o?{"files[]":e}:e,t&&new t,this.formSerializer)}}return s||r?(t.setContentType("application/json",!1),tc(e)):e}],transformResponse:[function(e){const t=this.transitional||nc.transitional,n=t&&t.forcedJSONParsing,r="json"===this.responseType;if(e&&wu.isString(e)&&(n&&!this.responseType||r)){const n=t&&t.silentJSONParsing,a=!n&&r;try{return JSON.parse(e)}catch(s){if(a){if("SyntaxError"===s.name)throw Su.from(s,Su.ERR_BAD_RESPONSE,this,null,this.response);throw s}}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:Ku.classes.FormData,Blob:Ku.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};wu.forEach(["delete","get","head"],(function(e){nc.headers[e]={}})),wu.forEach(["post","put","patch"],(function(e){nc.headers[e]=wu.merge(ec)}));var rc=nc;const sc=wu.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]);var ac=e=>{const t={};let n,r,s;return e&&e.split("\n").forEach((function(e){s=e.indexOf(":"),n=e.substring(0,s).trim().toLowerCase(),r=e.substring(s+1).trim(),!n||t[n]&&sc[n]||("set-cookie"===n?t[n]?t[n].push(r):t[n]=[r]:t[n]=t[n]?t[n]+", "+r:r)})),t};const oc=Symbol("internals");function ic(e){return e&&String(e).trim().toLowerCase()}function lc(e){return!1===e||null==e?e:wu.isArray(e)?e.map(lc):String(e)}function uc(e){const t=Object.create(null),n=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let r;while(r=n.exec(e))t[r[1]]=r[2];return t}function cc(e){return/^[-_a-zA-Z]+$/.test(e.trim())}function hc(e,t,n,r){return wu.isFunction(r)?r.call(this,t,n):wu.isString(t)?wu.isString(r)?-1!==t.indexOf(r):wu.isRegExp(r)?r.test(t):void 0:void 0}function pc(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((e,t,n)=>t.toUpperCase()+n))}function dc(e,t){const n=wu.toCamelCase(" "+t);["get","set","has"].forEach((r=>{Object.defineProperty(e,r+n,{value:function(e,n,s){return this[r].call(this,t,e,n,s)},configurable:!0})}))}class fc{constructor(e){e&&this.set(e)}set(e,t,n){const r=this;function s(e,t,n){const s=ic(t);if(!s)throw new Error("header name must be a non-empty string");const a=wu.findKey(r,s);(!a||void 0===r[a]||!0===n||void 0===n&&!1!==r[a])&&(r[a||t]=lc(e))}const a=(e,t)=>wu.forEach(e,((e,n)=>s(e,n,t)));return wu.isPlainObject(e)||e instanceof this.constructor?a(e,t):wu.isString(e)&&(e=e.trim())&&!cc(e)?a(ac(e),t):null!=e&&s(t,e,n),this}get(e,t){if(e=ic(e),e){const n=wu.findKey(this,e);if(n){const e=this[n];if(!t)return e;if(!0===t)return uc(e);if(wu.isFunction(t))return t.call(this,e,n);if(wu.isRegExp(t))return t.exec(e);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=ic(e),e){const n=wu.findKey(this,e);return!(!n||t&&!hc(this,this[n],n,t))}return!1}delete(e,t){const n=this;let r=!1;function s(e){if(e=ic(e),e){const s=wu.findKey(n,e);!s||t&&!hc(n,n[s],s,t)||(delete n[s],r=!0)}}return wu.isArray(e)?e.forEach(s):s(e),r}clear(){return Object.keys(this).forEach(this.delete.bind(this))}normalize(e){const t=this,n={};return wu.forEach(this,((r,s)=>{const a=wu.findKey(n,s);if(a)return t[a]=lc(r),void delete t[s];const o=e?pc(s):String(s).trim();o!==s&&delete t[s],t[o]=lc(r),n[o]=!0})),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return wu.forEach(this,((n,r)=>{null!=n&&!1!==n&&(t[r]=e&&wu.isArray(n)?n.join(", "):n)})),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([e,t])=>e+": "+t)).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const n=new this(e);return t.forEach((e=>n.set(e))),n}static accessor(e){const t=this[oc]=this[oc]={accessors:{}},n=t.accessors,r=this.prototype;function s(e){const t=ic(e);n[t]||(dc(r,e),n[t]=!0)}return wu.isArray(e)?e.forEach(s):s(e),this}}fc.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent"]),wu.freezeMethods(fc.prototype),wu.freezeMethods(fc);var mc=fc;function gc(e,t){const n=this||rc,r=t||n,s=mc.from(r.headers);let a=r.data;return wu.forEach(e,(function(e){a=e.call(n,a,s.normalize(),t?t.status:void 0)})),s.normalize(),a}function yc(e){return!(!e||!e.__CANCEL__)}function bc(e,t,n){Su.call(this,null==e?"canceled":e,Su.ERR_CANCELED,t,n),this.name="CanceledError"}wu.inherits(bc,Su,{__CANCEL__:!0});var xc=bc,wc=null;n(2801);function vc(e,t,n){const r=n.config.validateStatus;n.status&&r&&!r(n.status)?t(new Su("Request failed with status code "+n.status,[Su.ERR_BAD_REQUEST,Su.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n)):e(n)}var kc=Ku.isStandardBrowserEnv?function(){return{write:function(e,t,n,r,s,a){const o=[];o.push(e+"="+encodeURIComponent(t)),wu.isNumber(n)&&o.push("expires="+new Date(n).toGMTString()),wu.isString(r)&&o.push("path="+r),wu.isString(s)&&o.push("domain="+s),!0===a&&o.push("secure"),document.cookie=o.join("; ")},read:function(e){const t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function Ic(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function Sc(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}function Nc(e,t){return e&&!Ic(t)?Sc(e,t):t}var Tc=Ku.isStandardBrowserEnv?function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");let n;function r(n){let r=n;return e&&(t.setAttribute("href",r),r=t.href),t.setAttribute("href",r),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return n=r(window.location.href),function(e){const t=wu.isString(e)?r(e):e;return t.protocol===n.protocol&&t.host===n.host}}():function(){return function(){return!0}}();function Cc(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}function Ec(e,t){e=e||10;const n=new Array(e),r=new Array(e);let s,a=0,o=0;return t=void 0!==t?t:1e3,function(i){const l=Date.now(),u=r[o];s||(s=l),n[a]=i,r[a]=l;let c=o,h=0;while(c!==a)h+=n[c++],c%=e;if(a=(a+1)%e,a===o&&(o=(o+1)%e),l-s<t)return;const p=u&&l-u;return p?Math.round(1e3*h/p):void 0}}var $c=Ec;function Ac(e,t){let n=0;const r=$c(50,250);return s=>{const a=s.loaded,o=s.lengthComputable?s.total:void 0,i=a-n,l=r(i),u=a<=o;n=a;const c={loaded:a,total:o,progress:o?a/o:void 0,bytes:i,rate:l||void 0,estimated:l&&o&&u?(o-a)/l:void 0,event:s};c[t?"download":"upload"]=!0,e(c)}}const Rc="undefined"!==typeof XMLHttpRequest;var Mc=Rc&&function(e){return new Promise((function(t,n){let r=e.data;const s=mc.from(e.headers).normalize(),a=e.responseType;let o;function i(){e.cancelToken&&e.cancelToken.unsubscribe(o),e.signal&&e.signal.removeEventListener("abort",o)}wu.isFormData(r)&&(Ku.isStandardBrowserEnv||Ku.isStandardBrowserWebWorkerEnv)&&s.setContentType(!1);let l=new XMLHttpRequest;if(e.auth){const t=e.auth.username||"",n=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";s.set("Authorization","Basic "+btoa(t+":"+n))}const u=Nc(e.baseURL,e.url);function c(){if(!l)return;const r=mc.from("getAllResponseHeaders"in l&&l.getAllResponseHeaders()),s=a&&"text"!==a&&"json"!==a?l.response:l.responseText,o={data:s,status:l.status,statusText:l.statusText,headers:r,config:e,request:l};vc((function(e){t(e),i()}),(function(e){n(e),i()}),o),l=null}if(l.open(e.method.toUpperCase(),Bu(u,e.params,e.paramsSerializer),!0),l.timeout=e.timeout,"onloadend"in l?l.onloadend=c:l.onreadystatechange=function(){l&&4===l.readyState&&(0!==l.status||l.responseURL&&0===l.responseURL.indexOf("file:"))&&setTimeout(c)},l.onabort=function(){l&&(n(new Su("Request aborted",Su.ECONNABORTED,e,l)),l=null)},l.onerror=function(){n(new Su("Network Error",Su.ERR_NETWORK,e,l)),l=null},l.ontimeout=function(){let t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const r=e.transitional||Wu;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(new Su(t,r.clarifyTimeoutError?Su.ETIMEDOUT:Su.ECONNABORTED,e,l)),l=null},Ku.isStandardBrowserEnv){const t=(e.withCredentials||Tc(u))&&e.xsrfCookieName&&kc.read(e.xsrfCookieName);t&&s.set(e.xsrfHeaderName,t)}void 0===r&&s.setContentType(null),"setRequestHeader"in l&&wu.forEach(s.toJSON(),(function(e,t){l.setRequestHeader(t,e)})),wu.isUndefined(e.withCredentials)||(l.withCredentials=!!e.withCredentials),a&&"json"!==a&&(l.responseType=e.responseType),"function"===typeof e.onDownloadProgress&&l.addEventListener("progress",Ac(e.onDownloadProgress,!0)),"function"===typeof e.onUploadProgress&&l.upload&&l.upload.addEventListener("progress",Ac(e.onUploadProgress)),(e.cancelToken||e.signal)&&(o=t=>{l&&(n(!t||t.type?new xc(null,e,l):t),l.abort(),l=null)},e.cancelToken&&e.cancelToken.subscribe(o),e.signal&&(e.signal.aborted?o():e.signal.addEventListener("abort",o)));const h=Cc(u);h&&-1===Ku.protocols.indexOf(h)?n(new Su("Unsupported protocol "+h+":",Su.ERR_BAD_REQUEST,e)):l.send(r||null)}))};const _c={http:wc,xhr:Mc};wu.forEach(_c,((e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch(n){}Object.defineProperty(e,"adapterName",{value:t})}}));var Fc={getAdapter:e=>{e=wu.isArray(e)?e:[e];const{length:t}=e;let n,r;for(let s=0;s<t;s++)if(n=e[s],r=wu.isString(n)?_c[n.toLowerCase()]:n)break;if(!r){if(!1===r)throw new Su(`Adapter ${n} is not supported by the environment`,"ERR_NOT_SUPPORT");throw new Error(wu.hasOwnProp(_c,n)?`Adapter '${n}' is not available in the build`:`Unknown adapter '${n}'`)}if(!wu.isFunction(r))throw new TypeError("adapter is not a function");return r},adapters:_c};function Dc(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new xc(null,e)}function Oc(e){Dc(e),e.headers=mc.from(e.headers),e.data=gc.call(e,e.transformRequest),-1!==["post","put","patch"].indexOf(e.method)&&e.headers.setContentType("application/x-www-form-urlencoded",!1);const t=Fc.getAdapter(e.adapter||rc.adapter);return t(e).then((function(t){return Dc(e),t.data=gc.call(e,e.transformResponse,t),t.headers=mc.from(t.headers),t}),(function(t){return yc(t)||(Dc(e),t&&t.response&&(t.response.data=gc.call(e,e.transformResponse,t.response),t.response.headers=mc.from(t.response.headers))),Promise.reject(t)}))}const Lc=e=>e instanceof mc?e.toJSON():e;function Pc(e,t){t=t||{};const n={};function r(e,t,n){return wu.isPlainObject(e)&&wu.isPlainObject(t)?wu.merge.call({caseless:n},e,t):wu.isPlainObject(t)?wu.merge({},t):wu.isArray(t)?t.slice():t}function s(e,t,n){return wu.isUndefined(t)?wu.isUndefined(e)?void 0:r(void 0,e,n):r(e,t,n)}function a(e,t){if(!wu.isUndefined(t))return r(void 0,t)}function o(e,t){return wu.isUndefined(t)?wu.isUndefined(e)?void 0:r(void 0,e):r(void 0,t)}function i(n,s,a){return a in t?r(n,s):a in e?r(void 0,n):void 0}const l={url:a,method:a,data:a,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:i,headers:(e,t)=>s(Lc(e),Lc(t),!0)};return wu.forEach(Object.keys(e).concat(Object.keys(t)),(function(r){const a=l[r]||s,o=a(e[r],t[r],r);wu.isUndefined(o)&&a!==i||(n[r]=o)})),n}const zc="1.2.1",Bc={};["object","boolean","number","function","string","symbol"].forEach(((e,t)=>{Bc[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));const Uc={};function Vc(e,t,n){if("object"!==typeof e)throw new Su("options must be an object",Su.ERR_BAD_OPTION_VALUE);const r=Object.keys(e);let s=r.length;while(s-- >0){const a=r[s],o=t[a];if(o){const t=e[a],n=void 0===t||o(t,a,e);if(!0!==n)throw new Su("option "+a+" must be "+n,Su.ERR_BAD_OPTION_VALUE)}else if(!0!==n)throw new Su("Unknown option "+a,Su.ERR_BAD_OPTION)}}Bc.transitional=function(e,t,n){function r(e,t){return"[Axios v"+zc+"] Transitional option '"+e+"'"+t+(n?". "+n:"")}return(n,s,a)=>{if(!1===e)throw new Su(r(s," has been removed"+(t?" in "+t:"")),Su.ERR_DEPRECATED);return t&&!Uc[s]&&(Uc[s]=!0,console.warn(r(s," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,s,a)}};var Wc={assertOptions:Vc,validators:Bc};const jc=Wc.validators;class Gc{constructor(e){this.defaults=e,this.interceptors={request:new Vu,response:new Vu}}request(e,t){"string"===typeof e?(t=t||{},t.url=e):t=e||{},t=Pc(this.defaults,t);const{transitional:n,paramsSerializer:r,headers:s}=t;let a;void 0!==n&&Wc.assertOptions(n,{silentJSONParsing:jc.transitional(jc.boolean),forcedJSONParsing:jc.transitional(jc.boolean),clarifyTimeoutError:jc.transitional(jc.boolean)},!1),void 0!==r&&Wc.assertOptions(r,{encode:jc.function,serialize:jc.function},!0),t.method=(t.method||this.defaults.method||"get").toLowerCase(),a=s&&wu.merge(s.common,s[t.method]),a&&wu.forEach(["delete","get","head","post","put","patch","common"],(e=>{delete s[e]})),t.headers=mc.concat(a,s);const o=[];let i=!0;this.interceptors.request.forEach((function(e){"function"===typeof e.runWhen&&!1===e.runWhen(t)||(i=i&&e.synchronous,o.unshift(e.fulfilled,e.rejected))}));const l=[];let u;this.interceptors.response.forEach((function(e){l.push(e.fulfilled,e.rejected)}));let c,h=0;if(!i){const e=[Oc.bind(this),void 0];e.unshift.apply(e,o),e.push.apply(e,l),c=e.length,u=Promise.resolve(t);while(h<c)u=u.then(e[h++],e[h++]);return u}c=o.length;let p=t;h=0;while(h<c){const e=o[h++],t=o[h++];try{p=e(p)}catch(d){t.call(this,d);break}}try{u=Oc.call(this,p)}catch(d){return Promise.reject(d)}h=0,c=l.length;while(h<c)u=u.then(l[h++],l[h++]);return u}getUri(e){e=Pc(this.defaults,e);const t=Nc(e.baseURL,e.url);return Bu(t,e.params,e.paramsSerializer)}}wu.forEach(["delete","get","head","options"],(function(e){Gc.prototype[e]=function(t,n){return this.request(Pc(n||{},{method:e,url:t,data:(n||{}).data}))}})),wu.forEach(["post","put","patch"],(function(e){function t(t){return function(n,r,s){return this.request(Pc(s||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:n,data:r}))}}Gc.prototype[e]=t(),Gc.prototype[e+"Form"]=t(!0)}));var Hc=Gc;class qc{constructor(e){if("function"!==typeof e)throw new TypeError("executor must be a function.");let t;this.promise=new Promise((function(e){t=e}));const n=this;this.promise.then((e=>{if(!n._listeners)return;let t=n._listeners.length;while(t-- >0)n._listeners[t](e);n._listeners=null})),this.promise.then=e=>{let t;const r=new Promise((e=>{n.subscribe(e),t=e})).then(e);return r.cancel=function(){n.unsubscribe(t)},r},e((function(e,r,s){n.reason||(n.reason=new xc(e,r,s),t(n.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}static source(){let e;const t=new qc((function(t){e=t}));return{token:t,cancel:e}}}var Kc=qc;function Xc(e){return function(t){return e.apply(null,t)}}function Yc(e){return wu.isObject(e)&&!0===e.isAxiosError}function Zc(e){const t=new Hc(e),n=Nl(Hc.prototype.request,t);return wu.extend(n,Hc.prototype,t,{allOwnKeys:!0}),wu.extend(n,t,null,{allOwnKeys:!0}),n.create=function(t){return Zc(Pc(e,t))},n}const Jc=Zc(rc);Jc.Axios=Hc,Jc.CanceledError=xc,Jc.CancelToken=Kc,Jc.isCancel=yc,Jc.VERSION=zc,Jc.toFormData=Fu,Jc.AxiosError=Su,Jc.Cancel=Jc.CanceledError,Jc.all=function(e){return Promise.all(e)},Jc.spread=Xc,Jc.isAxiosError=Yc,Jc.mergeConfig=Pc,Jc.AxiosHeaders=mc,Jc.formToJSON=e=>Qu(wu.isHTMLForm(e)?new FormData(e):e),Jc.default=Jc;var Qc=Jc,eh={name:"App",data(){return{scenesTargetsData:{},scenesInfo:{},isCompiling:!1,compiler:null}},mounted(){this.GetTargetImages(),this.compiler=new window.MINDAR.IMAGE.Compiler},methods:{GetTargetImages(){const e=this;Qc.get("/gettargets").then((t=>{e.ParseData(t.data)})).catch((e=>{console.warn(e)}))},async ParseData(e){let t={};for(const[,n]of Object.entries(e))for(const[,e]of Object.entries(n)){t[e.sceneIndex]||(t[e.sceneIndex]=new Array(Object.keys(n).length));let r=await this.LoadImage(e.targetImgName+".png");t[e.sceneIndex][e.objectIndex]=r}this.scenesTargetsData=t},async Compile(e,t){if(0==t.length)return void alert("Unable to find correct images. Only .png and .jpg images are supported.");let n=await this.GenerateTarget(e,t);this.SendFile(n)},async GenerateTarget(e,t){const n=this;n.isCompiling=!0;let r=new Array;for(var s=0;s<t.length;){const a=await this.compiler.compileImageTargets([t[s]],(r=>{let a=Math.round(Number(r));100==a&&s==t.length-1?(n.scenesInfo[e]="Done!",n.isCompiling=!1):n.scenesInfo[e]=`Progress: ${s+1}/${t.length} ${a}%`}));s++,r.push(a[0])}this.compiler.data=r;const a=await this.compiler.exportData();let o=this.BufferToFile(e,a);return o},async LoadImage(e){const t=e;return new Promise(((n,r)=>{let s=new Image;s.onload=()=>n(s),s.name=t,s.onerror=()=>{throw r(),new Error("Something went wrong with "+e)},s.src=e}))},BufferToFile(e,t){var n=new Blob([t]),r=new File([n],`targets_${e}.mind`);return r},SendFile(e){const t=new FormData;t.append("dotMindFile",e),Qc.post("/dotmind",t)}}};const th=(0,lo.Z)(eh,[["render",Sl]]);var nh=th;const rh=cl({history:Ko(),routes:[{path:"/:id?",component:nh}]});so(ho).use(rh).mount("#app")}()})();
//# sourceMappingURL=app.qs.js.map